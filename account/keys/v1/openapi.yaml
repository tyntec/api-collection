openapi: 3.0.0
info:
  version: "1.0"
  title: Account Keys API
  description: |
    The keys API helps you with managing your account API keys. You can add a secondary key to your account and delete the old one. With this mechanism you can safely rotate a key, on runtime, to keep your account safe.
  contact:
    name: tyntec API Support
    url: http://www.tyntec.com/support
    email: support@tyntec.com
  x-repository: https://github.com/tyntec/api-collection/blob/master/tts
  x-major-version: v1
servers:
  - url: https://api.tyntec.com/
security:
  - APIKeyHeader: []
tags:
  - name: Account keys
    description: |
      tyntecâ€™s account keys service allows you to:

      - Add a secondary authentication token key to your account. Both keys (old and new) will be valid and active.
      - You can delete the old key once your new key is replaced in your systems.

      **Important**

      You can not delete the key you are using for this API call. 

      Once a key is deleted, this will have an immediate effect and no recovery is possible.
paths:
  /account/v1/keys:
    get:
      tags:
        - Account keys
      summary: List keys available
      security:
        - ApiKeyHeader: []
      operationId: keysGET
      description: |
        Returns the api keys available for this account.
      responses:
        "200":
          description: The keys that are available for your account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiKeyResponse"
        "400":
          description: An invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: "Something went wrong. :-("
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"  
    post:
      tags:
        - Account keys
      summary: Create a secondary key
      security:
        - ApiKeyHeader: []
      operationId: keysPOST
      description: |
        Creates a secondary key for this account that will be active in parallel with the old one. No more than two keys are allowed to exist per account.
      responses:
        "200":
          description: The keys that are available for your account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiKeyResponse"
        "400":
          description: An invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: "Something went wrong. :-("
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
    delete:
      tags:
        - Account keys
      summary: Delete an API key.
      security:
        - ApiKeyHeader: []
      operationId: ipRestrictionDELETE
      description: |
        Returns available keys for this account. You can not delete the key used for this request.
      parameters:
        - name: deleteApiKey
          in: query
          description: The api key token value to be deleted.
          schema:
            type: string
        - name: deleteApiKeyId
          in: query
          description: The api key ID token value to be deleted.
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The API key was deleted.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiKeyResponse"
        "400":
          description: An invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: "Something went wrong. :-("
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"

components:
  securitySchemes:
    ApiKeyHeader:
      type: apiKey
      in: header
      name: apikey
      description: |
        The API key used for this operation; we check as well that the API key has the phone number
        (either on sending messages or interacting with other phone number based features) assigned.
  schemas:
    ApiKeyResponse:
      type: object
      description: The keys that are active for this account.
      properties:
        apiKeys:
          type: array
          items:
            properties:
              id:
                type: string
                format: uuid
                description: The ID of the key
              key:
                type: string
                description: The authentication token
          description: If the whitelist restriction is enabled or not for this account.
          example: |
            [
              {
                "id": "deadbeef-b111-111f-8c6e-05f1fd3f825c",
                "key": "ABCDEFG1234567890ABCDEFG1234567890"
              }
            ] 
    Problem:
      type: object
      additionalProperties: true
      description: The problem object follows [RFC-7807](https://tools.ietf.org/html/rfc7807).
      required:
        - type
        - title
        - status
        - detail
      properties:
        type:
          description: The URI reference [RFC3986] that identifies the problem type
          example: https://docs.tyntec.com/problems/DataNotParseable
          type: string
        title:
          description: A short, human-readable summary of the problem type
          type: string
          example: The given data were not parsable.
        status:
          description: The HTTP status code (RFC7231, Section 6) generated by the origin server for this occurrence of the problem
          type: string
          example: 400
        detail:
          description: A human-readable explanation specific to this problem occurrence
          type: string
          example: |
            Unexpected end-of-input: expected close marker for Object (start marker at [Source: UNKNOWN; line: -1, column: -1) at [Source: UNKNOWN; line: 1, column: 97]