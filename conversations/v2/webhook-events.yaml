asyncapi: '2.0.0'
info:
  title: Webhook Events
  version: '2.13'
  description: |
    Delivery updates and inbound messages are sent out to you in a manner of events.

    They are sent to the callback URLs that you specified in a [tyntec application](/conversations/current.html#webhook-configuration).

    Inbound messages are sent to your system as soon as we receive them from the channel.

    Delivery updates are sent to your system when:

    - a message reaches a final state, or
    - a message reaches an intermediate state and you opted-in to receive this, or
    - a user decides to delete a message previously sent **to** you (only available on WhatsApp).

    We treat

    - delivered
    - seen / read
    - finally failed

    as final states for messages sent by you.

    All other states are treated as intermediate states.

tags:
  - name: "Received messages"
    description: |
      Events emitted when the recipient of the message replies or deletes a previously sent message.
  - name: "Delivery updates"
    description: Events emitted on updates of message delivery.
servers:
  production:
    url: 78.110.226.11
    description: Server address of tyntec, the events origin from
    protocol: https
channels:
  "MoMessage (Basic)":
    description: |
      Message received by us and delivered to your system via a webhook provided by your system.
    publish:
      tags:
        - name: "Received messages"
      message:
        $ref: '#/components/messages/MoMessage'
      bindings:
        http:
          type: request
          method: POST
  "MoMessage (SMS)":
    description: |
      Message received by us on the SMS channel and delivered to your system via a webhook provided by your system.
    publish:
      tags:
        - name: "Received messages"
      message:
        $ref: '#/components/messages/SMSMoMessage'
      bindings:
        http:
          type: request
          method: POST
  "MoMessage (WhatsApp)":
    description: |
      Message received by us on the WhatsApp channel and delivered to your system via a webhook provided by your system.
    publish:
      tags:
        - name: "Received messages"
      message:
        $ref: '#/components/messages/WhatsAppMoMessage'
      bindings:
        http:
          type: request
          method: POST
  "MoMessage (Viber)":
    description: |
      Message received by us on the Viber channel and delivered to your system via a webhook provided by your system.
    publish:
      tags:
        - name: "Received messages"
      message:
        $ref: '#/components/messages/ViberMoMessage'
      bindings:
        http:
          type: request
          method: POST
  "MoMessage Postback":
    description: |
      Postbacks are triggered when a user clicks on a button or interacts with any element that supports this.
      The event is treated as a MoMessage event for the purpose of callback lookups.

      **Supporting channels**

      - WhatsApp: Quick Reply buttons
    publish:
      tags:
        - name: "Received messages"
      message:
        $ref: '#/components/messages/MoMessagePostback'
      bindings:
        http:
          type: request
          method: POST
  "MoMessage Order":
    description: |
      Orders are triggered when a user places an order from a pre-filled shopping cart.

      The event is treated as a MoMessage event for the purpose of callback lookups.

      **Supporting channels**

      - WhatsApp: Product and ProductLists
    publish:
      tags:
        - name: "Received messages"
      message:
        $ref: '#/components/messages/MoMessageOrder'
      bindings:
        http:
          type: request
          method: POST
  "Message Status: Deleted":
    description: |
      This event is triggered when a previously sent MoMessage is deleted by its sender.

      **Supporting channels**

      - WhatsApp
    publish:
      tags:
        - name: "Received messages"
      message:
        $ref: '#/components/messages/MessageStatusDeleted'
      bindings:
        http:
          type: request
          method: POST
  "Message Status: Accepted":
    description: |
      This event is triggered when tyntec accepted your message request.

      This happens after the HTTP status code 202 on a messaging request.

      **Supporting channels**

      - All
    publish:
      tags:
        - name: "Delivery updates"
      message:
        $ref: '#/components/messages/MessageStatusAccepted'
      bindings:
        http:
          type: request
          method: POST
  "Message Status: Delivered":
    description: |
      This event is triggered when the channel informed us about the successful delivery
      of your message to the recipient.

      **Supporting channels**

      - WhatsApp
      - SMS
      - Viber

    publish:
      tags:
        - name: "Delivery updates"
      message:
        $ref: '#/components/messages/MessageStatusDelivered'
      bindings:
        http:
          type: request
          method: POST
  "Message Status: Seen":
    description: |
      This event is triggered when the channel informed that the message was seen by the recipient.

      Depending on the channel, this is a subject of privacy settings by the recipient, eg. WhatsApp.

      **Supporting channels**

      - WhatsApp
      - Viber

    publish:
      tags:
        - name: "Delivery updates"
      message:
        $ref: '#/components/messages/MessageStatusSeen'
      bindings:
        http:
          type: request
          method: POST
  "Message Status: Channel Failed":
    description: |
      This event is triggered when a message was not successfully delivered via the channel.

      **Supporting channels**

      - All
    publish:
      tags:
        - name: "Delivery updates"
      message:
        $ref: '#/components/messages/MessageStatusChannelFailed'
      bindings:
        http:
          type: request
          method: POST
  "Message Status: Failed":
    description: |
      This event is triggered when the message failed on all configured channels.

      **Supporting channels**

      - All
    publish:
      tags:
        - name: "Delivery updates"
      message:
        $ref: '#/components/messages/MessageStatusFailed'
      bindings:
        http:
          type: request
          method: POST
  "Message Status: Unknown":
    description: |
      This event is triggered when the message status cannot be mapped to any of the others.

      **Supporting channels**

      - All

    publish:
      tags:
        - name: "Delivery updates"
      message:
        $ref: '#/components/messages/MessageStatusUnknown'
      bindings:
        http:
          type: request
          method: POST
components:
  messages:
    MoMessage:
      payload:
        $ref: '#/components/schemas/MoMessage'
    SMSMoMessage:
      payload:
        $ref: '#/components/schemas/SMSMoMessage'
    WhatsAppMoMessage:
      payload:
        $ref: '#/components/schemas/WhatsAppMoMessage'
    ViberMoMessage:
      payload:
        $ref: '#/components/schemas/ViberMoMessage'
    MoMessagePostback:
      payload:
        $ref: '#/components/schemas/MoMessagePostBack'
    MoMessageOrder:
      payload:
        $ref: '#/components/schemas/MoMessageOrder'
    MessageStatusDeleted:
      payload:
        $ref: '#/components/schemas/MessageStatusDeleted'
    MessageStatusAccepted:
      payload:
        $ref: '#/components/schemas/MessageStatusAccepted'
    MessageStatusDelivered:
      payload:
        $ref: '#/components/schemas/MessageStatusDelivered'
    MessageStatusSeen:
      payload:
        $ref: '#/components/schemas/MessageStatusSeen'
    MessageStatusChannelFailed:
      payload:
        $ref: '#/components/schemas/MessageStatusChannelFailed'
    MessageStatusFailed:
      payload:
        $ref: '#/components/schemas/MessageStatusFailed'
    MessageStatusUnknown:
      payload:
        $ref: '#/components/schemas/MessageStatusUnknown'
  schemas:
    APIEvent:
      type: object
      description: Abstract event object produced by the API, such as MessageStatus or MoMessage
      required:
        - event
      properties:
        event:
          $ref: '#/components/schemas/EventTypes'
        channel:
          type: string
          description: Channel that triggered the event. Can be empty in case of an internal source
          example: sms
          enum:
            - sms
            - whatsapp
            - tyntecEcho
            - viber
        timestamp:
          type: string
          format: 'date-time'
          description: Point in time when the event happened
          example:
            2019-06-26T11:41:00
        from:
          type: string
          description: Who triggered this event. Usually a phone number or WhatsApp account ID
          example:
            491672634678
      example:
        event: MessageStatus::accepted
        channel: sms
        from: 491672634678
        timestamp: 2019-06-26T11:41:00
    EventTypes:
      type: string
      description: Determines the event types emitted by the API
      enum:
        - MoMessage
        - MoMessage::Postback
        - MessageStatus::accepted
        - MessageStatus::channelFailed
        - MessageStatus::deleted
        - MessageStatus::delivered
        - MessageStatus::failed
        - MessageStatus::seen
        - MessageStatus::unknown
    MoMessage:
      type: object
      description: |
        Message received by us and delivered to your system via a webhook provided by your system.
      required:
        - messageId
        - event
        - channel
        - from
        - content
      properties:
        event:
          type: string
          description: Determines which type of event is sent. Always _MoMessage_
          enum:
            - MoMessage
        channel:
          type: string
          description: Channel that triggered the event.
          example: sms
          enum:
            - sms
            - whatsapp
            - tyntecEcho
            - viber
        receivedAt:
          deprecated: true
          type: string
          format: 'date-time'
          description: Point in time when the message was received. **Note** This property will be replaced in the future by the _timestamp_ property from the APIEvent
          example:
            2019-06-26T11:41:00
        timestamp:
          type: string
          format: 'date-time'
          description: Point in time when the message was received
          example:
            2019-06-26T11:41:00
        messageId:
          type: string
          description: Message ID reference
          example: 77185196-664a-43ec-b14a-fe97036c697f
        from:
          type: string
          description: The sender of the message
          example: "49123512314"
        to:
          type: string
          description: Receiver. The format is channel specific
          example: "49123512315"
        groupId:
          type: string
          description: Group ID from which the event originates. Only present if the message was sent into a group.
          example:
            4923147790717-1564134658
        content:
          $ref: '#/components/schemas/MoContent'
        context:
          $ref: '#/components/schemas/MoContext'
      example:
        messageId: 77185196-664a-43ec-b14a-fe97036c697e
        event: MoMessage
        from: "49123512314"
        to: "49123512315"
        timestamp: 2019-06-26T11:41:00
        channel: viber
    MoContent:
      type: object
      description: Content of the mobile-originated message
      required:
        - contentType
      properties:
        contentType:
          type: string
          enum:
            - text
            - media
            - location
            - contacts
          description: What kind of payload is used
          example: media
        text:
          type: string
          description: The received text
          example: Hi, thanks for your support message
        media:
          $ref: '#/components/schemas/MoMedia'
      example:
        contentType: media
        media:
          type: audio
          url: 'https://api.tyntec.com/messaging/v1/chat/media/77185196-664a-43ec-b14a-fe97036c697f'
          mediaId: 77185196-664a-43ec-b14a-fe97036c697f
    MoContext:
      type: object
      description: Contextual information of the mobile-originated message
      properties:
        messageId:
          type: string
          description: The message ID the MoMessage refers to. Usualy set when the sender replies to a specific message
          example: 77185196-664a-43ec-b14a-fe97036c697a
        product:
          $ref: '#/components/schemas/Product'
    Product:
      type: object
      description: Product that got a question
      properties:
        catalogId:
          type: string
          description: Id of the catalog
          example: "23343-12342"
        productId:
          type: string
          description: ID or SKU of the product
          example: 123-SKU-12432
    MoMedia:
      type: object
      description: Media information
      properties:
        type:
          type: string
          description: What kind of media was received
          enum:
            - image
            - document
            - audio
            - voice
            - video
          example: audio
        url:
          type: string
          description: The URL of the location where the media is stored
          example: https://api.tyntec.com/messaging/v1/chat/media/77185196-664a-43ec-b14a-fe97036c697f
        mediaId:
          type: string
          description: Plain ID of the media to download
          example: 77185196-664a-43ec-b14a-fe97036c697f
        caption:
          type: string
          description: Caption specified by the user or the file name of the document
          example: This is an picture of my cat!
    SMSMoMessage:
      type: object
      description: |
        Message received by us on the SMS channel and delivered to your system via a webhook provided by your system.
      required:
        - messageId
        - event
        - channel
        - from
        - content
      allOf:
        - $ref: '#/components/schemas/MoMessage'
      properties:

        channel:
          type: string
          description: Channel that triggered the event.
          example: sms
          enum:
            - sms
        sms:
          $ref: '#/components/schemas/SMS'
      example:
        messageId: 77185196-664a-43ec-b14a-fe97036c697e
        event: MoMessage
        from: "49123512314"
        to: "49123512315"
        timestamp: 2019-06-26T11:41:00
        channel: sms
        content:
          contentType: text
          text: 'Hi, thanks for your support message'
        sms:
          origin:
            mcc: string
            mnc: string
            ttId: string
          totalPrice: 0
          size: 1
          missingParts: false
          parts:
            - messageId: string
              sentDate: '2019-03-13T13:15:22Z'
              price: 0
              currency: string
              priceEffective: '2019-03-13T13:15:22Z'
              sequenceNumber: 1
    SMS:
      type: object
      description: Details specific to the SMS channel
      properties:
        origin:
          $ref: '#/components/schemas/SMSOrigin'
        totalPrice:
          type: number
          description: The sum of prices for each message part listed in “contentList”.
          example: 0.1
        size:
          type: number
          description: The amount of respective concatenated SMS parts.
          minimum: 1
          maximum: 255
          example: 1
        missingParts:
          type: boolean
          description: True in the case a part of an over-length message was not received by the tyntec platform and the forwarded message text is incomplete.
          default: false
          example: false
        parts:
          type: array
          description: |
            tyntec merges over-length (concatenated) SMS into one string before sending it to your webserver.
            Information for each individual part is collected here
          items:
            $ref: '#/components/schemas/SMSContent'
      example:
        origin:
          mcc: "49"
          mnc: "176"
          ttId: "25"
        totalPrice: 0.1
        size: 1
        missingParts: false
        parts:
          - messageId: 48514285-4e78-4eef-b0c6-4ce68d40c1c3
            sentDate: '2019-03-13T13:15:22Z'
            price: 0
            currency: EUR
            priceEffective: '2019-03-13T13:15:22Z'
            sequenceNumber: 1
    SMSOrigin:
      type: object
      description: Information about the origin of the message
      properties:
        mcc:
          type: string
          description: A representative MCC (Mobile Network Code) of the originating network.
          example: "49"
        mnc:
          type: string
          description: A representative MNC (Mobile Network Code) of the originating network.
          example: "176"
        ttId:
          type: string
          description: The respective tyntec ID of the originating network.
          example: "25"
    SMSContent:
      type: object
      description: SMS channel specific information
      properties:
        messageId:
          type: string
          description: The unique identifier provided by tyntec for each message part.
          example: 48514285-4e78-4eef-b0c6-4ce68d40c1c3
        sentDate:
          type: string
          description: |
            The time stamp when the SMS was received by the sending MSC (if available).

            or

            The time stamp when the respective message was received by tyntec.
          format: date-time
        price:
          type: number
          description: |
            The price per message from the respective network.

            Negative prices represent payout in favor of tyntec’s customer.
          example: 0.1
        currency:
          type: string
          description: The currency in which the pricing is given; corresponding to the currency of the invoice.
          example: EUR
        priceEffective:
          type: string
          description: The date when the “price” became effective.
          format: date-time
        sequenceNumber:
          type: number
          description: |
            In the case an over-length message is received tyntec recomposes the full message text before forwarding.
            The “sequenceNumber” indicates the order of the message part.
          minimum: 1
          maximum: 255
          example: 1
    WhatsAppMoMessage:
      type: object
      description: |
        Message received by us on the WhatsApp channel and delivered to your system via a webhook provided by your system.
      required:
        - messageId
        - event
        - channel
        - from
        - content
      allOf:
        - $ref: '#/components/schemas/MoMessage'
      properties:
        channel:
          type: string
          description: Channel that triggered the event.
          example: whatsapp
          enum:
            - whatsapp
        content:
          $ref: '#/components/schemas/MoContent'
        context:
          $ref: '#/components/schemas/MoContext'
        whatsapp:
          $ref: '#/components/schemas/Whatsapp'
      example:
        messageId: 77185196-664a-43ec-b14a-fe97036c697e
        event: MoMessage
        from: "49123512314"
        to: "49123512315"
        timestamp: 2019-06-26T11:41:00
        channel: whatsapp
        content:
          contentType: text
          text: 'Hi, thanks for your support message'
        whatsapp:
          senderName: Peter
    Whatsapp:
      type: object
      description: Details specific to the WhatsApp channel
      properties:
        senderName:
          type: string
          description: Name of the sender, set in his or her profile
          example: Peter
      example:
        senderName: Peter
      additionalProperties: true
    MessageRequestContext:
      type: object
      description: Contextual information for the message request
      properties:
        userContext:
          type: string
          maxLength: 255
          description: |
            Contextual information that is transfered back on delivery notifications.
          example:
            my-message-reference
    ViberMoMessage:
      type: object
      description: |
        Message received by us on the Viber channel and delivered to your system via a webhook provided by your system.
      required:
        - messageId
        - event
        - channel
        - from
        - content
      allOf:
        - $ref: '#/components/schemas/MoMessage'
      properties:
        channel:
          type: string
          description: Channel that triggered the event.
          example: viber
          enum:
            - viber
        content:
          $ref: '#/components/schemas/MoContent'
        context:
          $ref: '#/components/schemas/MoContext'
      example:
        messageId: 77185196-664a-43ec-b14a-fe97036c697e
        event: MoMessage
        from: "49123512314"
        to: "49123512315"
        timestamp: 2019-06-26T11:41:00
        channel: viber
        content:
          contentType: text
          text: 'Hi, thanks for your support message'
    MoMessagePostBack:
      type: object
      description: |
        Postbacks are triggered when a user clicks on a button or interacts with any element that supports this.

        For WhatsApp only Quick Reply buttons trigger this event.
      required:
        - messageId
        - event
        - status
        - timestamp
      allOf:
        - $ref: '#/components/schemas/APIEvent'
      properties:
        event:
          type: string
          description: Determines which event type is sent. Always _MoMessage::PostBack_
          enum:
            - MoMessage::Postback
        channel:
          type: string
          description: Channel that triggered the event.
          example: sms
          enum:
            - sms
            - whatsapp
            - tyntecEcho
            - viber
        timestamp:
          type: string
          format: 'date-time'
          description: Point in time when the message was received
          example:
            2019-06-26T11:41:00
        messageId:
          type: string
          description: Message ID reference
          example: 77185196-664a-43ec-b14a-fe97036c697f
        from:
          type: string
          description: The sender of the message
          example: "49123512314"
        to:
          type: string
          description: Receiver. The format is channel specific
          example: "49123512315"
        groupId:
          type: string
          description: Group ID from which the event originates. Only present if the message was sent into a group
          example:
            4923147790717-1564134658
        postback:
          $ref: '#/components/schemas/PostBack'
        context:
          $ref: '#/components/schemas/MoContext'
        whatsapp:
          $ref: '#/components/schemas/WhatsAppPostBack'
      example:
        event: MoMessage::PostBack
        messageId: ABGHSRdiRDUxLwIQHWZNgHd-WIdpPHTMERqTgQ
        from: "49123512314"
        to: "49123512315"
        timestamp: 2019-06-26T11:41:00
        channel: whatsapp
        postback:
          data: EventVisited::2020-04-04::WhatsAppFair
        context:
          messageId: 77185196-664a-43ec-b14a-fe97036c697e
        whatsapp:
          senderName: open api sample
          text: I liked the event
    MoMessageOrder:
      type: object
      description: |
        Orders are triggered when a user places an order from a shopping cart.
      required:
        - messageId
        - event
        - status
        - timestamp
        - order
      allOf:
        - $ref: '#/components/schemas/APIEvent'
      properties:
        event:
          type: string
          description: Determines which event type is sent. Always _MoMessage::Order_
          enum:
            - MoMessage::Order
        channel:
          type: string
          description: Channel that triggered the event.
          example: whatsapp
          enum:
            - whatsapp
        timestamp:
          type: string
          format: 'date-time'
          description: Point in time when the message was received
          example:
            2019-06-26T11:41:00
        messageId:
          type: string
          description: Message ID reference
          example: 77185196-664a-43ec-b14a-fe97036c697f
        from:
          type: string
          description: The sender of the message
          example: "49123512314"
        to:
          type: string
          description: Receiver. The format is channel specific
          example: "49123512315"
        order:
          $ref: '#/components/schemas/Order'
        context:
          $ref: '#/components/schemas/MoContext'
        whatsapp:
          $ref: '#/components/schemas/Whatsapp'
      example:
        event: MoMessage::Order
        messageId: ABGHSRdiRDUxLwIQHWZNgHd-WIdpPHTMERqTgQ
        from: "49123512314"
        to: "49123512315"
        timestamp: 2019-06-26T11:41:00
        channel: whatsapp
        order:
          catalogId: 2378972934234
          text: Please let me know where I can pick up the order.
          items:
            - productId: 24-2597234-sdfk
              quantity: 123
              itemPrice: 123.22
              currency: "EUR"
            - productId: 24-1111134-sdfk
              quantity: 1
              itemPrice: 1.22
              currency: "USD"
        whatsapp:
          senderName: Test User
    PostBack:
      type: object
      properties:
        data:
          type: string
          description: Payload or data that was specified when requesting the button based message
          example: EventVisited::2020-04-04::WhatsAppFair
    WhatsAppPostBack:
      type: object
      description: Postback data for a WhatsApp quick reply button
      allOf:
        - $ref: '#/components/schemas/Whatsapp'
      properties:
        text:
          type: string
          description: Caption of the button that was clicked
          example: Yes
        title:
          type: string
          description: Title of the interactive item clicked
          example: This is the button you clicked
        description:
          type: string
          description: Description of the interactive item clicked
          example: This is the description of a list item
    Order:
      type: object
      description: Represents an order sent from a channel
      required:
        - items
      properties:
        catalogId:
          type: string
          description: ID of the catalog the items origin from
          example: 123980-12313123
        text:
          type: string
          description: Optional message from the customer
          example: Hi, please make sure you deliver it in the afternoon
        items:
          type: array
          description: Products placed into the basket for this order
          items:
            $ref: '#/components/schemas/SelectedProduct'
    SelectedProduct:
      type: object
      description: Product selected for an order
      required:
        - productId
        - quantity
      properties:
        productId:
          type: string
          description: ID or SKU of the product selected
          example: test-sku-1234
        quantity:
          type: string
          description: How many items are selected
          example: 1
        itemPrice:
          type: string
          description: Price presented to the customer, when chosing the product
          example: 0.11
        currency:
          type: string
          description: Currency of the products price
          example: EUR
    MessageStatusDeleted:
      type: object
      description: |
        Indicates that a previously sent inbound MoMessage was deleted by the user.
      required:
        - messageId
        - event
        - status
        - channel
        - from
        - to
        - timestamp
      allOf:
        - $ref: '#/components/schemas/APIEvent'
      properties:
        event:
          type: string
          description: Determines which event type is sent.
          enum:
            - MessageStatus::deleted
        messageId:
          type: string
          description: Global Message ID reference
          example: 77185196-664a-43ec-b14a-fe97036c697f
        channel:
          type: string
          description: Channel that triggered the event. Can be empty in case of an internal source.
          example: sms
          enum:
            - sms
            - whatsapp
            - tyntecEcho
        status:
          description: |
            Indicates the status of the message. Be aware that not all channels support all statuses.

            **Note** This property will be replaced by the property _event_ in a future release.
          deprecated: true
          type: string
          example: seen
          enum:
            - deleted
        timestamp:
          type: string
          format: 'date-time'
          description: Point in time when the event happened
          example:
            2019-06-26T11:41:28Z
        userContext:
          type: string
          description: Contextual information set on the message request
          example:
            my-message-reference
        from:
          type: string
          description: Who triggered this event. Usually the phone number or WhatsApp account ID.
          example:
            491672634678
        to:
          type: string
          description: Which channel specific account ID is the recipient of this event.
          example:
            4923147790813
      example:
        event: MessageStatus::deleted
        messageId: 77185196-664a-43ec-b14a-fe97036c697f
        channel: whatsapp
        status: deleted
        userContext: my-message-reference
        timestamp: 2019-06-26T11:41:28Z
        from: 491672634678
        to: 4923147790813
    MessageStatusAccepted:
      type: object
      description: |
        Indicates the acceptance of the message by the Conversations API
      required:
        - messageId
        - event
        - channel
        - timestamp
      allOf:
        - $ref: '#/components/schemas/APIEvent'
      properties:
        event:
          type: string
          description: Determines which event type is sent. Always _MessageStatus::accepted_
          enum:
            - MessageStatus::accepted
        messageId:
          type: string
          description: Global Message ID reference
          example: 77185196-664a-43ec-b14a-fe97036c697f
        channel:
          type: string
          description: Channel that triggered the event. Can be empty in case of an internal source.
          example: sms
          enum:
            - sms
            - whatsapp
            - viber
        timestamp:
          type: string
          format: 'date-time'
          description: Point in time when the event happened
          example:
            2019-06-26T11:41:28Z
        userContext:
          type: string
          description: Contextual information set on the message request
          example:
            my-message-reference
      example:
        event: MessageStatus::accepted
        messageId: 77185196-664a-43ec-b14a-fe97036c697f
        channel: whatsapp
        userContext: my-message-reference
        timestamp: 2019-06-26T11:41:28Z
    MessageStatusDelivered:
      type: object
      description: |
        Indicates the delivery of the message to the recipient
      required:
        - messageId
        - event
        - channel
        - timestamp
      allOf:
        - $ref: '#/components/schemas/APIEvent'
      properties:
        event:
          type: string
          description: Determines which event type is sent. Always _MessageStatus::delivered_
          enum:
            - MessageStatus::delivered
        messageId:
          type: string
          description: Global Message ID reference
          example: 77185196-664a-43ec-b14a-fe97036c697f
        channel:
          type: string
          description: Channel that triggered the event. Can be empty in case of an internal source.
          example: sms
          enum:
            - sms
            - whatsapp
            - viber
        timestamp:
          type: string
          format: 'date-time'
          description: Point in time when the event happened
          example:
            2019-06-26T11:41:28Z
        userContext:
          type: string
          description: Contextual information set on the message request
          example:
            my-message-reference
      example:
        event: MessageStatus::delivered
        messageId: 77185196-664a-43ec-b14a-fe97036c697f
        channel: whatsapp
        userContext: my-message-reference
        timestamp: 2019-06-26T11:41:28Z
    MessageStatusSeen:
      type: object
      description: |
        Indicates that the message was seen by the recipient
      required:
        - messageId
        - event
        - channel
        - timestamp
      allOf:
        - $ref: '#/components/schemas/APIEvent'
      properties:
        event:
          type: string
          description: Determines which event type is sent. Always _MessageStatus::seen_
          enum:
            - MessageStatus::seen
        messageId:
          type: string
          description: Global Message ID reference
          example: 77185196-664a-43ec-b14a-fe97036c697f
        channel:
          type: string
          description: Channel that triggered the event. Can be empty in case of an internal source.
          example: sms
          enum:
            - sms
            - whatsapp
            - viber
        timestamp:
          type: string
          format: 'date-time'
          description: Point in time when the event happened
          example:
            2019-06-26T11:41:28Z
        userContext:
          type: string
          description: Contextual information set on the message request
          example:
            my-message-reference
      example:
        event: MessageStatus::seen
        messageId: 77185196-664a-43ec-b14a-fe97036c697f
        channel: whatsapp
        userContext: my-message-reference
        timestamp: 2019-06-26T11:41:28Z
    MessageStatusChannelFailed:
      type: object
      description: |
        Indicates that the message failed on the particular channel
      required:
        - messageId
        - event
        - channel
        - timestamp
      allOf:
        - $ref: '#/components/schemas/APIEvent'
      properties:
        event:
          type: string
          description: Determines which event type is sent. Always _MessageStatus::channelFailed_
          enum:
            - MessageStatus::channelFailed
        messageId:
          type: string
          description: Global Message ID reference
          example: 77185196-664a-43ec-b14a-fe97036c697f
        channel:
          type: string
          description: Channel that triggered the event. Can be empty in case of an internal source.
          example: sms
          enum:
            - sms
            - whatsapp
            - viber
        timestamp:
          type: string
          format: 'date-time'
          description: Point in time when the event happened
          example:
            2019-06-26T11:41:28Z
        userContext:
          type: string
          description: Contextual information set on the message request
          example:
            my-message-reference
        details:
          type: object
          properties:
            code:
              type: string
              description: Error code to identify the reason
              example: whatsapp::external::1009
            message:
              type: string
              description: Additional error message about the error reason
              example: Parameter value is not valid. Button at index 0 of type Url does not require parameters
      example:
        event: MessageStatus::channelFailed
        messageId: 77185196-664a-43ec-b14a-fe97036c697f
        channel: whatsapp
        userContext: my-message-reference
        timestamp: 2019-06-26T11:41:28Z
        details:
          code: whatsapp::external::1009
          message: Parameter value is not valid. Button at index 0 of type Url does not require parameters
    MessageStatusFailed:
      type: object
      description: |
        Indicates that all channels failed.
      required:
        - messageId
        - event
        - channel
        - timestamp
      allOf:
        - $ref: '#/components/schemas/APIEvent'
      properties:
        event:
          type: string
          description: Determines which event type is sent. Always _MessageStatus::failed_
          enum:
            - MessageStatus::failed
        messageId:
          type: string
          description: Global Message ID reference
          example: 77185196-664a-43ec-b14a-fe97036c697f
        channel:
          type: string
          description: Channel that triggered the event. Can be empty in case of an internal source.
          example: sms
          enum:
            - sms
            - whatsapp
            - viber
        timestamp:
          type: string
          format: 'date-time'
          description: Point in time when the event happened
          example:
            2019-06-26T11:41:28Z
        userContext:
          type: string
          description: Contextual information set on the message request
          example:
            my-message-reference
      example:
        event: MessageStatus::failed
        messageId: 77185196-664a-43ec-b14a-fe97036c697f
        channel: whatsapp
        userContext: my-message-reference
        timestamp: 2019-06-26T11:41:28Z
    MessageStatusUnknown:
      type: object
      description: |
        Indicates an unforseen message status.
      required:
        - messageId
        - event
        - channel
        - timestamp
      allOf:
        - $ref: '#/components/schemas/APIEvent'
      properties:
        event:
          type: string
          description: Determines which event type is sent. Always _MessageStatus::unknown_
          enum:
            - MessageStatus::unknown
        messageId:
          type: string
          description: Global Message ID reference
          example: 77185196-664a-43ec-b14a-fe97036c697f
        channel:
          type: string
          description: Channel that triggered the event. Can be empty in case of an internal source.
          example: sms
          enum:
            - sms
            - whatsapp
            - viber
        timestamp:
          type: string
          format: 'date-time'
          description: Point in time when the event happened
          example:
            2019-06-26T11:41:28Z
        userContext:
          type: string
          description: Contextual information set on the message request
          example:
            my-message-reference
      example:
        event: MessageStatus::unknown
        messageId: 77185196-664a-43ec-b14a-fe97036c697f
        channel: whatsapp
        userContext: my-message-reference
        timestamp: 2019-06-26T11:41:28Z
