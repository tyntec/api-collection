asyncapi: '2.0.0'
info:
  title: Webhook Events V3 - Early Preview
  version: '3.0'
  description: |

    **Early Preview** The Webhook Events V3 are not yet rolled out publicly **Early Preview**

    Delivery updates and inbound messages are sent out to you in a manner of events.

    They are sent to the callback URLs that you specified in a [Configuration](/conversations/current.html#configurations).

    Inbound messages are sent to your system as soon as we receive them from the channel.

    Delivery updates are sent to your system when:

    - a message reaches a final state, or
    - a message reaches an intermediate state and you opted-in to receive this, or
    - a user decides to delete a message previously sent **to** you (only available on WhatsApp).

    We treat

    - delivered
    - seen / read
    - finally failed

    as final states for messages sent by you.

    All other states are treated as intermediate states.

tags:
  - name: "Received messages"
    description: |
      Events emitted when the recipient of the message replies or deletes a previously sent message.
  - name: "Delivery updates"
    description: Events emitted on updates of message delivery.
servers:
  production:
    url: 78.110.226.11
    description: The server address of tyntec, the events originate from
    protocol: https
channels:
  "InboundMessage (Basic)":
    description: |
      A message received by us and delivered to your system via a webhook provided by your system.
    publish:
      tags:
        - name: "Received messages"
      message:
        $ref: '#/components/messages/InboundMessage'
      bindings:
        http:
          type: request
          method: POST
  "InboundMessage (SMS)":
    description: |
      A message received by us on the SMS channel and delivered to your system via a webhook provided by your system.
    publish:
      tags:
        - name: "Received messages"
      message:
        $ref: '#/components/messages/SMSInboundMessage'
      bindings:
        http:
          type: request
          method: POST
  "InboundMessage (WhatsApp)":
    description: |
      A message received by us on the WhatsApp channel and delivered to your system via a webhook provided by your system.
    publish:
      tags:
        - name: "Received messages"
      message:
        $ref: '#/components/messages/WhatsAppInboundMessage'
      bindings:
        http:
          type: request
          method: POST
  "InboundMessage (Telegram)":
    description: |
      A message received by us on the WhatsApp channel and delivered to your system via a webhook provided by your system.
    publish:
      tags:
        - name: "Received messages"
      message:
        $ref: '#/components/messages/TelegramInboundMessage'
      bindings:
        http:
          type: request
          method: POST
  "InboundMessage (WeChat)":
    description: |
      A message received by us on the WhatsApp channel and delivered to your system via a webhook provided by your system.
    publish:
      tags:
        - name: "Received messages"
      message:
        $ref: '#/components/messages/WeChatInboundMessage'
      bindings:
        http:
          type: request
          method: POST
  "InboundMessage (Viber)":
    description: |
      A message received by us on the Viber channel and delivered to your system via a webhook provided by your system.
    publish:
      tags:
        - name: "Received messages"
      message:
        $ref: '#/components/messages/ViberInboundMessage'
      bindings:
        http:
          type: request
          method: POST
  "InboundMessage Postback":
    description: |
      Postbacks are triggered when a user clicks on a button or interacts with any element that supports this.

      **Supporting channels**

      - WhatsApp: Quick Reply buttons
    publish:
      tags:
        - name: "Received messages"
      message:
        $ref: '#/components/messages/InboundMessagePostback'
      bindings:
        http:
          type: request
          method: POST
  "Message Status: Deleted":
    description: |
      This event is triggered when a previously sent InboundMessage is deleted by its sender.

      **Supporting channels**

      - WhatsApp
    publish:
      tags:
        - name: "Received messages"
      message:
        $ref: '#/components/messages/MessageStatusDeleted'
      bindings:
        http:
          type: request
          method: POST
  "Message Status: Accepted":
    description: |
      This event is triggered when tyntec accepted your message request.

      This happens after the HTTP status code 202 on a messaging request.

      **Supporting channels**

      - All
    publish:
      tags:
        - name: "Delivery updates"
      message:
        $ref: '#/components/messages/MessageStatusAccepted'
      bindings:
        http:
          type: request
          method: POST
  "Message Status: Dispatched":
    description: |
      This event is triggered when the message has been submitted sucessfully to the
      channel

      **Supporting channels**

      - All

    publish:
      tags:
        - name: "Delivery updates"
      message:
        $ref: '#/components/messages/MessageStatusDispatched'
      bindings:
        http:
          type: request
          method: POST
  "Message Status: Delivered":
    description: |
      This event is triggered when the channel informed us about the successful delivery
      of your message to the recipient.

      **Supporting channels**

      - WhatsApp
      - SMS
      - Viber

    publish:
      tags:
        - name: "Delivery updates"
      message:
        $ref: '#/components/messages/MessageStatusDelivered'
      bindings:
        http:
          type: request
          method: POST
  "Message Status: Seen":
    description: |
      This event is triggered when the channel informs that the message was seen by the recipient.

      Depending on the channel, this is a subject of privacy settings by the recipient, eg. WhatsApp.

      **Supporting channels**

      - WhatsApp
      - Viber

    publish:
      tags:
        - name: "Delivery updates"
      message:
        $ref: '#/components/messages/MessageStatusSeen'
      bindings:
        http:
          type: request
          method: POST
  "Message Status: Channel Failed":
    description: |
      This event is triggered when a message was not successfully delivered via the channel.

      **Supporting channels**

      - All
    publish:
      tags:
        - name: "Delivery updates"
      message:
        $ref: '#/components/messages/MessageStatusChannelFailed'
      bindings:
        http:
          type: request
          method: POST
  "Message Status: Failed":
    description: |
      This event is triggered when the message failed on all configured channels.

      **Supporting channels**

      - All
    publish:
      tags:
        - name: "Delivery updates"
      message:
        $ref: '#/components/messages/MessageStatusFailed'
      bindings:
        http:
          type: request
          method: POST
  "Message Status: Unknown":
    description: |
      This event is triggered when the message status cannot be mapped to any of the others.

      **Supporting channels**

      - All

    publish:
      tags:
        - name: "Delivery updates"
      message:
        $ref: '#/components/messages/MessageStatusUnknown'
      bindings:
        http:
          type: request
          method: POST
components:
  messages:
    InboundMessage:
      payload:
        $ref: '#/components/schemas/InboundMessage'
    SMSInboundMessage:
      payload:
        $ref: '#/components/schemas/SMSInboundMessage'
    TelegramInboundMessage:
      payload:
        $ref: '#/components/schemas/TelegramInboundMessage'
    ViberInboundMessage:
      payload:
        $ref: '#/components/schemas/ViberInboundMessage'
    WeChatInboundMessage:
      payload:
        $ref: '#/components/schemas/WeChatInboundMessage'
    WhatsAppInboundMessage:
      payload:
        $ref: '#/components/schemas/WhatsAppInboundMessage'
    InboundMessagePostback:
      payload:
        $ref: '#/components/schemas/InboundMessagePostBack'
    MessageStatusDeleted:
      payload:
        $ref: '#/components/schemas/MessageStatusDeleted'
    MessageStatusAccepted:
      payload:
        $ref: '#/components/schemas/MessageStatusAccepted'
    MessageStatusDispatched:
      payload:
        $ref: '#/components/schemas/MessageStatusDispatched'
    MessageStatusDelivered:
      payload:
        $ref: '#/components/schemas/MessageStatusDelivered'
    MessageStatusSeen:
      payload:
        $ref: '#/components/schemas/MessageStatusSeen'
    MessageStatusChannelFailed:
      payload:
        $ref: '#/components/schemas/MessageStatusChannelFailed'
    MessageStatusFailed:
      payload:
        $ref: '#/components/schemas/MessageStatusFailed'
    MessageStatusUnknown:
      payload:
        $ref: '#/components/schemas/MessageStatusUnknown'
  schemas:
    APIEvent:
      type: object
      description: Abstract event object produced by the API, such as MessageStatus or InboundMessage
      required:
        - event
        - timestamp
        - channel
      properties:
        event:
          $ref: '#/components/schemas/EventTypes'
        channel:
          type: string
          description: The channel that triggered the event. Always set.
          example: sms
          enum:
            - sms
            - whatsapp
            - tyntecEcho
            - viber
            - wechat
            - telegram
        timestamp:
          type: string
          format: 'date-time'
          description: The point in time when the event happened
          example:
            2019-06-26T11:41:00
        from:
          type: string
          description: Who triggered this event. Usually a phone number or WhatsApp account ID
          example:
            "491672634678"
        to:
          type: string
          description: The receiver of the event.
          example:
            "491672634678"
      example:
        event: MessageStatus::accepted
        channel: sms
        from: "491672634678"
        to: "492134234234"
        timestamp: 2019-06-26T11:41:00
    EventTypes:
      type: string
      description: Determines the event types emitted by the API
      enum:
        - InboundMessage
        - InboundMessage::Postback
        # Message status related events
        - MessageStatus::accepted
        - MessageStatus::channelFailed
        - MessageStatus::deleted
        - MessageStatus::delivered
        - MessageStatus::failed
        - MessageStatus::seen
        - MessageStatus::unknown
        # Channel updates
        - ChannelUpdate
    InboundMessage:
      type: object
      description: |
        A message received by us and delivered to your system via a webhook provided by your system.
      required:
        - messageId
        - event
        - channel
        - from
        - content
      properties:
        event:
          type: string
          description: Determines which type of event is sent. Always _InboundMessage_
          enum:
            - InboundMessage
        channel:
          type: string
          description: The channel that triggered the event.
          example: sms
          enum:
            - sms
            - whatsapp
            - tyntecEcho
            - viber
            - telegram
            - wechat
        timestamp:
          type: string
          format: 'date-time'
          description: The point in time when the message was received
          example:
            2019-06-26T11:41:00
        messageId:
          type: string
          description: A message ID reference
          example: 77185196-664a-43ec-b14a-fe97036c697f
        from:
          type: string
          description: The sender of the message
          example: "49123512314"
        to:
          type: string
          description: The receiving account of the message. The format is channel-specific.
          example: "49123512315"
        content:
          $ref: '#/components/schemas/MoContent'
        context:
          $ref: '#/components/schemas/MoContext'
      example:
        messageId: 77185196-664a-43ec-b14a-fe97036c697e
        event: InboundMessage
        from: "49123512314"
        to: "49123512315"
        timestamp: 2019-06-26T11:41:00
        channel: viber
        content:
          contentType: text
          text: A simple text message
    MoContent:
      type: object
      description: The content of the mobile-originated message
      required:
        - contentType
      properties:
        contentType:
          type: string
          enum:
            - text
            - image
            - document
            - audio
            - voice
            - video
            - location
            - contacts
          description: What kind of payload is used
          example: media
        text:
          type: string
          description: The received text
          example: Hi, thanks for your support message
        image:
          $ref: '#/components/schemas/MoMedia'
        document:
          $ref: '#/components/schemas/MoMedia'
        audio:
          $ref: '#/components/schemas/MoMedia'
        voice:
          $ref: '#/components/schemas/MoMedia'
        video:
          $ref: '#/components/schemas/MoMedia'
      example:
        contentType: media
        media:
          type: audio
          url: 'https://api.tyntec.com/messaging/v1/chat/media/77185196-664a-43ec-b14a-fe97036c697f'
          mediaId: 77185196-664a-43ec-b14a-fe97036c697f
    MoContext:
      type: object
      description: Contextual information of the mobile-originated message
      properties:
        messageId:
          type: string
          description: The message ID the InboundMessage refers to. Usually set when the sender replies to a specific message
          example: 77185196-664a-43ec-b14a-fe97036c697a
    MoMedia:
      type: object
      description: Media information
      required:
        - mediaId
        - url
      properties:
        url:
          type: string
          description: The URL of the location where the media is stored
          example: https://api.tyntec.com/messaging/v1/chat/media/77185196-664a-43ec-b14a-fe97036c697f
        mediaId:
          type: string
          description: A plain ID of the media to download
          example: 77185196-664a-43ec-b14a-fe97036c697f
        caption:
          type: string
          description: A caption specified by the user or the file name of the document
          example: This is a picture of my cat!
    SMSInboundMessage:
      type: object
      description: |
        A message received by us on the SMS channel and delivered to your system via a webhook provided by your system.
      required:
        - messageId
        - event
        - channel
        - from
        - content
      allOf:
        - $ref: '#/components/schemas/InboundMessage'
      properties:

        channel:
          type: string
          description: The channel that triggered the event.
          example: sms
          enum:
            - sms
        sms:
          $ref: '#/components/schemas/SMS'
      example:
        messageId: 77185196-664a-43ec-b14a-fe97036c697e
        event: InboundMessage
        from: "49123512314"
        to: "49123512315"
        timestamp: 2019-06-26T11:41:00
        channel: sms
        content:
          contentType: text
          text: 'Hi, thanks for your support message'
        sms:
          origin:
            mcc: string
            mnc: string
            ttId: string
          totalPrice: 0
          size: 1
          missingParts: false
          parts:
            - messageId: string
              sentDate: '2019-03-13T13:15:22Z'
              price: 0
              currency: string
              priceEffective: '2019-03-13T13:15:22Z'
              sequenceNumber: 1
    SMS:
      type: object
      description: Details specific to the SMS channel
      properties:
        origin:
          $ref: '#/components/schemas/SMSOrigin'
        totalPrice:
          type: number
          description: The sum of prices for each message part listed in “contentList”.
          example: 0.1
        size:
          type: number
          description: The amount of respective concatenated SMS parts.
          minimum: 1
          maximum: 255
          example: 1
        missingParts:
          type: boolean
          description: True in the case a part of an over-length message was not received by the tyntec platform and the forwarded message text is incomplete.
          default: false
          example: false
        parts:
          type: array
          description: |
            tyntec merges over-length (concatenated) SMS into one string before sending it to your webserver.
            Information for each individual part is collected here
          items:
            $ref: '#/components/schemas/SMSContent'
      example:
        origin:
          mcc: "49"
          mnc: "176"
          ttId: "25"
        totalPrice: 0.1
        size: 1
        missingParts: false
        parts:
          - messageId: 48514285-4e78-4eef-b0c6-4ce68d40c1c3
            sentDate: '2019-03-13T13:15:22Z'
            price: 0
            currency: EUR
            priceEffective: '2019-03-13T13:15:22Z'
            sequenceNumber: 1
    SMSOrigin:
      type: object
      description: Information about the origin of the message
      properties:
        mcc:
          type: string
          description: A representative MCC (Mobile Network Code) of the originating network.
          example: "49"
        mnc:
          type: string
          description: A representative MNC (Mobile Network Code) of the originating network.
          example: "176"
        ttId:
          type: string
          description: The respective tyntec ID of the originating network.
          example: "25"
    SMSContent:
      type: object
      description: SMS channel-specific information
      properties:
        messageId:
          type: string
          description: The unique identifier provided by tyntec for each message part.
          example: 48514285-4e78-4eef-b0c6-4ce68d40c1c3
        sentDate:
          type: string
          description: |
            The time stamp when the SMS was received by the sending MSC (if available).

            or

            The time stamp when the respective message was received by tyntec.
          format: date-time
        price:
          type: number
          description: |
            The price per message from the respective network.

            Negative prices represent payout in favor of tyntec’s customers.
          example: 0.1
        currency:
          type: string
          description: The currency in which the pricing is given; corresponding to the currency of the invoice.
          example: EUR
        priceEffective:
          type: string
          description: The date when the “price” became effective.
          format: date-time
        sequenceNumber:
          type: number
          description: |
            In the case an over-length message is received, tyntec recomposes the full message text before forwarding.
            The “sequenceNumber” indicates the order of the message part.
          minimum: 1
          maximum: 255
          example: 1
    WhatsAppInboundMessage:
      type: object
      description: |
        A message received by us on the WhatsApp channel and delivered to your system via a webhook provided by your system.
      required:
        - messageId
        - event
        - channel
        - from
        - content
      allOf:
        - $ref: '#/components/schemas/InboundMessage'
      properties:
        channel:
          type: string
          description: The channel that triggered the event.
          example: whatsapp
          enum:
            - whatsapp
        content:
          $ref: '#/components/schemas/MoContent'
        context:
          $ref: '#/components/schemas/MoContext'
        whatsapp:
          $ref: '#/components/schemas/Whatsapp'
      example:
        messageId: 77185196-664a-43ec-b14a-fe97036c697e
        event: InboundMessage
        from: "49123512314"
        to: "49123512315"
        timestamp: 2019-06-26T11:41:00
        channel: whatsapp
        content:
          contentType: text
          text: 'Hi, thanks for your support message'
        whatsapp:
          senderName: Peter
    Whatsapp:
      type: object
      description: Details specific to the WhatsApp channel
      properties:
        senderName:
          type: string
          description: The name of the sender, set in his or her profile
          example: Peter
      example:
        senderName: Peter
      additionalProperties: true
    MessageRequestContext:
      type: object
      description: Contextual information for the message request
      properties:
        userContext:
          type: string
          maxLength: 255
          description: |
            Contextual information that is transfered back on delivery notifications.
          example:
            my-message-reference
    ViberInboundMessage:
      type: object
      description: |
        A message received by us on the Viber channel and delivered to your system via a webhook provided by your system.
      required:
        - messageId
        - event
        - channel
        - from
        - content
      allOf:
        - $ref: '#/components/schemas/InboundMessage'
      properties:
        channel:
          type: string
          description: The channel that triggered the event.
          example: viber
          enum:
            - viber
        content:
          $ref: '#/components/schemas/MoContent'
        context:
          $ref: '#/components/schemas/MoContext'
      example:
        messageId: 77185196-664a-43ec-b14a-fe97036c697e
        event: InboundMessage
        from: "49123512314"
        to: "49123512315"
        timestamp: 2019-06-26T11:41:00
        channel: viber
        content:
          contentType: text
          text: 'Hi, thanks for your support message'
    InboundMessagePostBack:
      type: object
      description: |
        Postbacks are triggered when a user clicks on a button or interacts with any element that supports this.

        For WhatsApp only Quick Reply buttons trigger this event.
      required:
        - messageId
        - event
        - status
        - timestamp
      allOf:
        - $ref: '#/components/schemas/APIEvent'
      properties:
        event:
          type: string
          description: Determines which event type is sent. Always _InboundMessage::PostBack_
          enum:
            - InboundMessage::Postback
        channel:
          type: string
          description: The channel that triggered the event.
          example: sms
          enum:
            - sms
            - whatsapp
            - tyntecEcho
            - viber
        timestamp:
          type: string
          format: 'date-time'
          description: The point in time when the message was received
          example:
            2019-06-26T11:41:00
        messageId:
          type: string
          description: A message ID reference
          example: 77185196-664a-43ec-b14a-fe97036c697f
        from:
          type: string
          description: The sender of the message
          example: "49123512314"
        to:
          type: string
          description: The receiving account of the message. The format is channel-specific.
          example: "49123512315"
        groupId:
          type: string
          description: The group ID from which the event originates. Only present if the message was sent into a group
          example:
            4923147790717-1564134658
        postback:
          $ref: '#/components/schemas/PostBack'
        context:
          $ref: '#/components/schemas/MoContext'
        whatsapp:
          $ref: '#/components/schemas/WhatsAppPostBack'
      example:
        event: InboundMessage::PostBack
        messageId: ABGHSRdiRDUxLwIQHWZNgHd-WIdpPHTMERqTgQ
        from: "49123512314"
        to: "49123512315"
        timestamp: 2019-06-26T11:41:00
        channel: whatsapp
        postback:
          data: EventVisited::2020-04-04::WhatsAppFair
        context:
          messageId: 77185196-664a-43ec-b14a-fe97036c697e
        whatsapp:
          senderName: open api sample
          text: I liked the event
    PostBack:
      type: object
      properties:
        data:
          type: string
          description: The payload or data that was specified when requesting the button-based message
          example: EventVisited::2020-04-04::WhatsAppFair
    WhatsAppPostBack:
      type: object
      description: Postback data for a WhatsApp quick reply button
      allOf:
        - $ref: '#/components/schemas/Whatsapp'
      properties:
        text:
          type: string
          description: The caption of the button that was clicked
          example: Yes
    TelegramInboundMessage:
      type: object
      description: |
        Message received by us on the Telegram channel and delivered to your system via a webhook provided by your system.
      required:
        - messageId
        - event
        - channel
        - from
        - content
      allOf:
        - $ref: '#/components/schemas/InboundMessage'
      properties:
        channel:
          type: string
          description: The channel that triggered the event.
          example: telegram
          enum:
            - telegram
        content:
          $ref: '#/components/schemas/MoContent'
        context:
          $ref: '#/components/schemas/MoContext'
        telegram:
          oneOf:
            - $ref: '#/components/schemas/Telegram'
            - $ref: '#/components/schemas/TelegramGroup'
      example:
        messageId: 77185196-664a-43ec-b14a-fe97036c697e
        event: InboundMessage
        from: "49123512314"
        to: "49123512315"
        timestamp: 2019-06-26T11:41:00
        channel: telegram
        content:
          contentType: text
          text: 'Hi, thanks for your support message'
        telegram:
          senderName: Peter
    Telegram:
      type: object
      description: Details specific to the WhatsApp channel
      properties:
        senderName:
          type: string
          description: The name of the sender, set in his or her profile
          example: Peter
      example:
        senderName: Peter
      additionalProperties: true
    TelegramGroup:
      type: object
      description: Details specific to the WhatsApp channel
      properties:
        senderName:
          type: string
          description: The name of the sender, set in his or her profile
          example: Peter
        chatTitle:
          type: String
          description: Title of the chat from which the bot was contacted
          example: tyntec Chat
        chatType:
          type: string
          description: Type of the chat issued the message
          enum:
            - supergroup
            - channel
          example:
            group
        chatId:
          type: string
          description: Id of the channel the message origined from
          example: -1001271529072
      example:
        senderName: Peter
      additionalProperties: true

    WeChatInboundMessage:
      type: object
      description: |
        Message received by us on the Telegram channel and delivered to your system via a webhook provided by your system.
      required:
        - messageId
        - event
        - channel
        - from
        - content
      allOf:
        - $ref: '#/components/schemas/InboundMessage'
      properties:
        channel:
          type: string
          description: The channel that triggered the event.
          example: telegram
          enum:
            - wechat
        content:
          $ref: '#/components/schemas/MoContent'
        context:
          $ref: '#/components/schemas/MoContext'
      example:
        messageId: 77185196-664a-43ec-b14a-fe97036c697e
        event: InboundMessage
        from: "49123512314"
        to: "49123512315"
        timestamp: 2019-06-26T11:41:00
        channel: telegram
        content:
          contentType: text
          text: 'Hi, thanks for your support message'
    MessageStatusDeleted:
      type: object
      description: |
        Indicates that a previously sent inbound InboundMessage was deleted by the user.
      required:
        - messageId
        - event
        - status
        - channel
        - from
        - to
        - timestamp
      allOf:
        - $ref: '#/components/schemas/APIEvent'
      properties:
        event:
          type: string
          description: Determines which event type is sent.
          enum:
            - MessageStatus::deleted
        messageId:
          type: string
          description: A global message ID reference
          example: 77185196-664a-43ec-b14a-fe97036c697f
        channel:
          type: string
          description: The channel that triggered the event. Can be empty in the case of an internal source.
          example: sms
          enum:
            - sms
            - whatsapp
            - tyntecEcho
        status:
          description: |
            Indicates the status of the message. Be aware that not all channels support all statuses.

            **Note** This property will be replaced by the property _event_ in a future release.
          deprecated: true
          type: string
          example: seen
          enum:
            - deleted
        timestamp:
          type: string
          format: 'date-time'
          description: The point in time when the event happened
          example:
            2019-06-26T11:41:28Z
        userContext:
          type: string
          description: Contextual information set on the message request
          example:
            my-message-reference
        from:
          type: string
          description: Who triggered this event. Usually the phone number or WhatsApp account ID.
          example:
            "491672634678"
        to:
          type: string
          description: Which channel-specific account ID is the recipient of this event.
          example:
            "4923147790813"
      example:
        event: MessageStatus::deleted
        messageId: 77185196-664a-43ec-b14a-fe97036c697f
        channel: whatsapp
        status: deleted
        userContext: my-message-reference
        timestamp: 2019-06-26T11:41:28Z
        from: "491672634678"
        to: "4923147790813"
    MessageStatusAccepted:
      type: object
      description: |
        Indicates the acceptance of the message by the Conversations API
      required:
        - messageId
        - event
        - channel
        - timestamp
      allOf:
        - $ref: '#/components/schemas/APIEvent'
      properties:
        event:
          type: string
          description: Determines which event type is sent. Always _MessageStatus::accepted_
          enum:
            - MessageStatus::accepted
        messageId:
          type: string
          description: A global message ID reference
          example: 77185196-664a-43ec-b14a-fe97036c697f
        channel:
          type: string
          description: The channel that triggered the event. Can be empty in the case of an internal source.
          example: sms
          enum:
            - sms
            - whatsapp
            - viber
        timestamp:
          type: string
          format: 'date-time'
          description: The point in time when the event happened
          example:
            2019-06-26T11:41:28Z
        userContext:
          type: string
          description: Contextual information set on the message request
          example:
            my-message-reference
        from:
          type: string
          description: sender id from
      example:
        event: MessageStatus::accepted
        messageId: 77185196-664a-43ec-b14a-fe97036c697f
        channel: whatsapp
        userContext: my-message-reference
        timestamp: 2019-06-26T11:41:28Z
    MessageStatusDispatched:
      type: object
      description: |
        Indicates the dispatching of the message by the Conversations API to the target channel
      required:
        - messageId
        - event
        - channel
        - timestamp
      allOf:
        - $ref: '#/components/schemas/APIEvent'
      properties:
        event:
          type: string
          description: Determines which event type is sent. Always _MessageStatus::dispatched_
          enum:
            - MessageStatus::dispatched
        messageId:
          type: string
          description: A global message ID reference
          example: 77185196-664a-43ec-b14a-fe97036c697f
        channel:
          type: string
          description: The channel that triggered the event. Can be empty in the case of an internal source.
          example: sms
          enum:
            - sms
            - whatsapp
            - viber
            - telegram
            - wechat
        timestamp:
          type: string
          format: 'date-time'
          description: The point in time when the event happened
          example:
            2019-06-26T11:41:28Z
        userContext:
          type: string
          description: Contextual information set on the message request
          example:
            my-message-reference
        from:
          type: string
          description: sender id from
      example:
        event: MessageStatus::dispatched
        messageId: 77185196-664a-43ec-b14a-fe97036c697f
        channel: whatsapp
        userContext: my-message-reference
        timestamp: 2019-06-26T11:41:28Z
    MessageStatusDelivered:
      type: object
      description: |
        Indicates the delivery of the message to the recipient
      required:
        - messageId
        - event
        - channel
        - timestamp
      allOf:
        - $ref: '#/components/schemas/APIEvent'
      properties:
        event:
          type: string
          description: Determines which event type is sent. Always _MessageStatus::delivered_
          enum:
            - MessageStatus::delivered
        messageId:
          type: string
          description: A global message ID reference
          example: 77185196-664a-43ec-b14a-fe97036c697f
        channel:
          type: string
          description: The channel that triggered the event. Can be empty in the case of an internal source.
          example: sms
          enum:
            - sms
            - whatsapp
            - viber
        timestamp:
          type: string
          format: 'date-time'
          description: The point in time when the event happened
          example:
            2019-06-26T11:41:28Z
        userContext:
          type: string
          description: Contextual information set on the message request
          example:
            my-message-reference
      example:
        event: MessageStatus::delivered
        messageId: 77185196-664a-43ec-b14a-fe97036c697f
        channel: whatsapp
        userContext: my-message-reference
        timestamp: 2019-06-26T11:41:28Z
    MessageStatusSeen:
      type: object
      description: |
        Indicates that the message was seen by the recipient
      required:
        - messageId
        - event
        - channel
        - timestamp
      allOf:
        - $ref: '#/components/schemas/APIEvent'
      properties:
        event:
          type: string
          description: Determines which event type is sent. Always _MessageStatus::seen_
          enum:
            - MessageStatus::seen
        messageId:
          type: string
          description: A global message ID reference
          example: 77185196-664a-43ec-b14a-fe97036c697f
        channel:
          type: string
          description: The channel that triggered the event. Can be empty in the case of an internal source.
          example: sms
          enum:
            - sms
            - whatsapp
            - viber
        timestamp:
          type: string
          format: 'date-time'
          description: The point in time when the event happened
          example:
            2019-06-26T11:41:28Z
        userContext:
          type: string
          description: Contextual information set on the message request
          example:
            my-message-reference
      example:
        event: MessageStatus::seen
        messageId: 77185196-664a-43ec-b14a-fe97036c697f
        channel: whatsapp
        userContext: my-message-reference
        timestamp: 2019-06-26T11:41:28Z
    MessageStatusChannelFailed:
      type: object
      description: |
        Indicates that the message failed on the particular channel
      required:
        - messageId
        - event
        - channel
        - timestamp
      allOf:
        - $ref: '#/components/schemas/APIEvent'
      properties:
        event:
          type: string
          description: Determines which event type is sent. Always _MessageStatus::channelFailed_
          enum:
            - MessageStatus::channelFailed
        messageId:
          type: string
          description: A global message ID reference
          example: 77185196-664a-43ec-b14a-fe97036c697f
        channel:
          type: string
          description: The channel that triggered the event. Can be empty in the case of an internal source.
          example: sms
          enum:
            - sms
            - whatsapp
            - viber
        timestamp:
          type: string
          format: 'date-time'
          description: The point in time when the event happened
          example:
            2019-06-26T11:41:28Z
        userContext:
          type: string
          description: Contextual information set on the message request
          example:
            my-message-reference
      example:
        event: MessageStatus::channelFailed
        messageId: 77185196-664a-43ec-b14a-fe97036c697f
        channel: whatsapp
        userContext: my-message-reference
        timestamp: 2019-06-26T11:41:28Z
    MessageStatusFailed:
      type: object
      description: |
        Indicates that all channels failed.
      required:
        - messageId
        - event
        - channel
        - timestamp
      allOf:
        - $ref: '#/components/schemas/APIEvent'
      properties:
        event:
          type: string
          description: Determines which event type is sent. Always _MessageStatus::failed_
          enum:
            - MessageStatus::failed
        messageId:
          type: string
          description: A global message ID reference
          example: 77185196-664a-43ec-b14a-fe97036c697f
        channel:
          type: string
          description: The channel that triggered the event. Can be empty in the case of an internal source.
          example: sms
          enum:
            - sms
            - whatsapp
            - viber
        timestamp:
          type: string
          format: 'date-time'
          description: The point in time when the event happened
          example:
            2019-06-26T11:41:28Z
        userContext:
          type: string
          description: Contextual information set on the message request
          example:
            my-message-reference
      example:
        event: MessageStatus::failed
        messageId: 77185196-664a-43ec-b14a-fe97036c697f
        channel: whatsapp
        userContext: my-message-reference
        timestamp: 2019-06-26T11:41:28Z
    MessageStatusUnknown:
      type: object
      description: |
        Indicates an unforseen message status.
      required:
        - messageId
        - event
        - channel
        - timestamp
      allOf:
        - $ref: '#/components/schemas/APIEvent'
      properties:
        event:
          type: string
          description: Determines which event type is sent. Always _MessageStatus::unknown_
          enum:
            - MessageStatus::unknown
        messageId:
          type: string
          description: A global message ID reference
          example: 77185196-664a-43ec-b14a-fe97036c697f
        channel:
          type: string
          description: The channel that triggered the event. Can be empty in the case of an internal source.
          example: sms
          enum:
            - sms
            - whatsapp
            - viber
        timestamp:
          type: string
          format: 'date-time'
          description: The point in time when the event happened
          example:
            2019-06-26T11:41:28Z
        userContext:
          type: string
          description: Contextual information set on the message request
          example:
            my-message-reference
      example:
        event: MessageStatus::unknown
        messageId: 77185196-664a-43ec-b14a-fe97036c697f
        channel: whatsapp
        userContext: my-message-reference
        timestamp: 2019-06-26T11:41:28Z
    ChannelNotification:
      type: object
      examples:
        WhatsApp::PhoneNumber::QualityRatingChange:
          event: ChannelNotification
          channel: WhatsApp
          scope: Template
          type: QualityRatingChange
          phoneNumber: 12312323
          oldRating: GREEN
          newRating: RED
        WhatsApp::Template::QualityRatingChange:
          event: ChannelNotification
          channel: WhatsApp
          scope: PhoneNumber
          type: QualityRatingChange
          whatsAppAccountId: 12312323
          templateName: swagger_sample
          oldRating: GREEN
          newRating: RED
        WhatsApp::Template::StatusChange:
          event: ChannelNotification
          channel: WhatsApp
          scope: Template
          type: StatusChange
          whatsAppAccountId: 12312323
          templateName: swagger_sample
          oldStatus: PENDING
          newStatus: REJECTED
          reason: PROMOTIONAL
        WhatsApp::PhoneNumber::TierChange:
          event: ChannelNotification
          channel: WhatsApp
          scope: PhoneNumber
          type: TierChange
          phoneNumber: 12312323
          oldTier: TIER 1
          newTier: TIER 2
        WhatsApp::User::PhoneNumberChange:
          event: ChannelNotification
          channel: WhatsApp
          scope: User
          type: PhoneNumberChange
          phoneNumber: 12312323 
          oldPhoneNumber: TIER 1
          newPhoneNumber: TIER 2
        WeChat::User::Following:
          event: ChannelNotification
          channel: WeChat
          scope: User
          type: Following
          userId: 12312323
          weChatId: 2143123
        WeChat::User::Unfollowing:
          event: ChannelNotification
          channel: WeChat
          scope: User
          type: Unfollowing
          userId: 12312323
          weChatId: 2143123  
        WhatsApp::User::PhoneNumberChange_V2:
          event: ChannelNotification::WhatsApp::User::PhoneNumberChange
          phoneNumber: 12312323
          oldUserPhoneNumber: 42342343
          newUSerPhoneNumber: 989894545
#
# Channel updates
# WhatsApp
#  - PhoneNumber
#    - Quality Rating change
#    - Tier change
#    - status change
#  - Template
#    - Quality Rating change
#    - Approval change
#  - User
#    - Phone number change
#  - Conversation
#    - user identity change
#
# WeChat
#  - Following
#  - Unfollowing
