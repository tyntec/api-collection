openapi: '3.0.0'
info:
  title: Viber
  description: |
    The Conversations API allows you to easily send messages to your customers via Viber.

    **Channel specific pre-conditions**

    - *Viber* : A Viber Service id is required in order to use this channel. Please [request access here](https://www.tyntec.com/form-conversational-api-viber-business)

    Viber defines different rate types and capabilities. The rate types limit the possible content combinations.

    The following content / rate type combinations are valid

    | Rate Type | Text | Image | File | Text & Button | Text & Button & Image |
    | ---: | :---: | :---: | :---: | :---: | :---: |
    | Transaction | ✔ | ❌ | ❌ | ❌ | ❌ |
    | Promotion | ✔ | ✔ | ✔ | ✔ | ✔ |
    | Session | ✔ | ✔ | ✔ | ✔ | ✔ |

    The rate types have as well consequences on the charging applied by viber per message.

  contact:
    name: tyntec API Support
    url: http://www.tyntec.com/support
    email: support@tyntec.com
  version: '3.1'
  x-repository: https://github.com/tyntec/api-collection/blob/master/conversations
  x-specification-file: viber.yaml
  x-major-version: v3
servers:
  - url: https://api.tyntec.com/conversations/v3
security:
  - ApiKeyAuth: [ ]
tags:
  - name: "Messaging"
    description: |
      In this section we guide you on how to send messages, get information about the status and the events happening during the delivery.
  - name: "Service IDs"
    description: |
      List all Service IDs configured for your API account.
  - name: "Callback configuration"
    description: |
      In this section, we guide you on how to configure the callbacks on a per channel bases.
paths:
  /messages:
    post:
      operationId: sendMessage
      summary: Send a message
      tags:
        - "Messaging"
      description: Send messages via this path.
      requestBody:
        description: The message you would like to send
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageRequest'
      responses:
        202:
          $ref: '#/components/responses/MessageResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        403:
          $ref: '#/components/responses/Forbidden'
        default:
          $ref: '#/components/responses/Default'
  /bulks:
    post:
      operationId: sendABulkMessage
      summary: Send a bulk message
      tags:
        - "Messaging"
      description: Send bulk messages. Bulk messages are defined as ordered messages to **one** receiver.
      requestBody:
        description: The message bulk you would like to send
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkMessageRequest'
      responses:
        202:
          $ref: '#/components/responses/BulkMessageResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        403:
          $ref: '#/components/responses/Forbidden'
        default:
          $ref: '#/components/responses/Default'
  /configurations/channels/viber:
    get:
      tags:
        - "Service IDs"
      summary: List Service IDs
      operationId: listAllViberChannels
      description: List all Viber channels available to your API account
      responses:
        200:
          $ref: '#/components/responses/ListAllViberChannelsResponse'
        403:
          $ref: '#/components/responses/Forbidden'
        default:
          $ref: '#/components/responses/Default'
  /configurations/channels/viber/service-ids/{service-id}:
    parameters:
      - $ref: '#/components/parameters/ServiceId'
    get:
      tags:
        - "Service IDs"
      summary: Read a configuration
      operationId: getViberChannelConfig
      description: Returns the specific channel configuration
      responses:
        200:
          $ref: '#/components/responses/ViberChannelResponse'
        403:
          $ref: '#/components/responses/Forbidden'
        default:
          $ref: '#/components/responses/Default'
  /configurations/channels/viber/service-ids/{service-id}/callbacks:
    parameters:
      - $ref: '#/components/parameters/ServiceId'
    put:
      tags:
        - "Callback configuration"
      summary: Update the callback
      operationId: updateViberChannelCallback
      description: Update the callback settings of a specific viber channel.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelCallback'
      responses:
        200:
          $ref: '#/components/responses/ViberChannelResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        403:
          $ref: '#/components/responses/Forbidden'
        default:
          $ref: '#/components/responses/Default'
components:
  parameters:
    ServiceId:
      name: service-id
      in: path
      required: true
      description: Service ID used of a Viber Channel.
      schema:
        type: integer
        minLength: 4
        maxLength: 15
      example: 4923147790717
  responses:
    MessageResponse:
      description: Response after the server has accepted the request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MessageResponse'
    BulkMessageResponse:
      description: Response after the server has accepted the request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BulkMessageResponse'
    Default:
      description: Default response in case of any other error. Please check the error object for details
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
    BadRequest:
      description: The request does not match our expectations. Please check the Problems object for details
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
          example:
            status: 400
            violations: [
              {
                field: validate.request.content.contentType,
                message: must not be empty
              }
            ]
            title: Constraint Violation
    Forbidden:
      description: You attempting to use a number that is not assigned to your account
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
          example:
            type: https://httpstatuses.com/403
            title: Forbidden
            status: 403
    ListAllViberChannelsResponse:
      description: A list of Viber channel configurations
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ViberChannelResponses'
    ViberChannelResponse:
      description: A Viber channel configuration
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ViberChannelResponse'
  schemas:
    Problem:
      $ref: './common.yaml#/components/schemas/Problem'
    MessageResponse:
      $ref: './common.yaml#/components/schemas/MessageResponse'
    BulkMessageResponse:
      $ref: './common.yaml#/components/schemas/BulkMessageResponse'
    MessageRequest:
      type: object
      description: The message you would like to send. Either rate type or message purpose must be set
      required:
        - to
        - channel
        - from
      properties:
        to:
          type: string
          description: |
            The message's recipient
            The format depends on the specific channel
          example: "+1233423454"
        from:
          type: string
          description: |
            The Viber service id the message origins from
          example: "+1233423454"
        messagePurpose:
          type: string
          description: |
            The alias for the message's rate type
          enum:
            - promotion
            - transaction
            - session
        rateType:
          type: string
          description: |
            The rate type of the message. **Note** Since Viber has lifted the service types, this
            affects the rate for each message. Also, the potential content that can be sent (see table above)
          enum:
            - promotion
            - transaction
            - session
        channel:
          type: string
          description: The channel selected for delivery.
          example: viber
          items:
            type: string
            enum:
              - viber
        overrides:
          $ref: 'common.yaml#/components/schemas/MessageRequestOverrides'
        context:
          type: string
          description: The context for this particular message
          maxLength: 125
        content:
          oneOf:
            - $ref: '#/components/schemas/ViberTextContent'
            - $ref: '#/components/schemas/ViberImageContent'
            - $ref: '#/components/schemas/ViberFileContent'
            - $ref: '#/components/schemas/ViberComponentsContent'
      example:
        to: "+123234234"
        from: "545345345"
        channel:  "viber"
        messagePurpose: "promotion"
        content:
          contentType: text
          text: A simple text message
    BulkMessageRequest:
      type: object
      description: |
        The bulk of messages you would like to send. Either rate type or message purpose must be set
      required:
        - to
        - channel
        - from
        - messages
      properties:
        to:
          type: string
          description: |
            The message's recipient
            The format depends on the specific channel
          example: "+1233423454"
        from:
          type: string
          description: |
            The sender of the messages. The format depends on the specific channel.
          example: "+1233423454"
        messagePurpose:
          type: string
          description: |
           The alias for the message's rate type
          enum:
            - promotion
            - transaction
            - session
        rateType:
          type: string
          description: |
            The rate type of the message. **Note** Since Viber has lifted the service types, this
            affects the rate for each message. Also the potential content that can be sent (see table above)
          enum:
            - promotion
            - transaction
            - session
        channel:
          type: string
          description: The channel selected for delivery.
          example: viber
          items:
            type: string
            enum:
              - viber
        messages:
          type: array
          maxItems: 20
          minItems: 2
          items:
            - $ref: '#/components/schemas/ViberTextContent'
            - $ref: '#/components/schemas/ViberImageContent'
            - $ref: '#/components/schemas/ViberFileContent'
            - $ref: '#/components/schemas/ViberComponentsContent'
    ViberTextContent:
      type: object
      properties:
        contentType:
          type: string
          enum:
            - text
        text:
          type: string
          maxLength: 3000
    ViberTextBody:
      type: object
      properties:
        type:
          type: string
          enum:
            - text
        text:
          type: string
          maxLength: 3000
    ViberImageContent:
      type: object
      properties:
        contentType:
          type: string
          enum:
            - image
        image:
          $ref: '#/components/schemas/ViberImage'
    ViberImageBody:
      type: object
      properties:
        type:
          type: string
          enum:
            - image
        image:
          $ref: '#/components/schemas/ViberImage'
    ViberFileContent:
      type: object
      description: A file content wrapper for Viber
      properties:
        contentType:
          type: string
          description: Defines the content type. Always **file**
          enum:
            - file
        file:
          $ref: '#/components/schemas/ViberFile'
    ViberFileBody:
      type: object
      description: A file content wrapper for Viber
      properties:
        contentType:
          type: string
          description: Defines the content type. Always **file**
          enum:
            - file
        file:
          $ref: '#/components/schemas/ViberFile'
    ViberButtonBody:
      type: object
      properties:
        contentType:
          type: string
          enum:
            - button
        button:
          $ref: '#/components/schemas/ViberButton'
    ViberComponentsContent:
      type: object
      properties:
        contentType:
          type: string
          enum:
            - components
        components:
          type: object
          properties:
            body:
              type: array
              items:
                anyOf:
                  - $ref: '#/components/schemas/ViberTextBody'
                  - $ref: '#/components/schemas/ViberImageBody'
                  - $ref: '#/components/schemas/ViberFileBody'
                  - $ref: '#/components/schemas/ViberButtonBody'
    ViberImage:
      type: object
      properties:
        url:
          type: string
          pattern: ^https?:\/\/?[\w.-]+(?:\.[\w\.-]+)+[\w\-\._~:/?#[\]@!\$&'\(\)\*\+,;=.]+$
          description: |
            Public available URL of the image. The image URL will be used on the app to provide the user with the file.
    ViberFile:
      type: object
      description: Viber file specification
      required:
        - url
        - filename
      properties:
        url:
          type: string
          pattern: ^https?:\/\/?[\w.-]+(?:\.[\w\.-]+)+[\w\-\._~:/?#[\]@!\$&'\(\)\*\+,;=.]+$
          description: |
            Public available URL of the file. The file URL will be used on the app to provide the user with the file.
        filename:
          type: string
          description: Name of the file presented on the app
        type:
          type: string
          description: |
            This parameter can be set to specify the file type.
            If not present, the file type is deducted from the URL given.
          enum:
            - doc
            - docx
            - rtf
            - dot
            - dotx
            - odt
            - odf
            - fodt
            - txt
            - info
            - pdf
            - xps
            - pdax
            - eps
            - xls
            - xlsx
            - ods
            - fods
            - csv
            - xlsm
            - xltx
    ViberButton:
      type: object
      properties:
        caption:
          type: string
        url:
          type: string
    ViberChannelResponse:
      $ref: './configurations.yaml#/components/schemas/ViberChannelResponse'
    ViberChannelResponses:
      $ref: './configurations.yaml#/components/schemas/ViberChannelResponses'
    ChannelCallback:
      $ref: './configurations.yaml#/components/schemas/ChannelCallback'