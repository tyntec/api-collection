openapi: '3.0.0'
info:
  title: Chat API
  description: |
    The Chat API enables you to easily send messages to your customers via messaging services like WhatsApp or
    Viber and still address customers with classic SMS.

    In addition you can define a chain of channels which will be used for messaging attempts until one succeeds.

    Notifications and messages from your users are send by us to your system via HTTP ```POST``` method.

  contact:
    name: tyntec API Support
    url: http://www.tyntec.com/support
    email: support@tyntec.com
  version: '2.5'
  x-repository: https://github.com/tyntec/api-collection/blob/master/chat-api
  x-major-version: v2
  x-postman-collection: postman.zip
servers:
  - url: https://api.tyntec.com/chat-api/v2
security:
  - ApiKeyAuth: []
tags:
  - name: "Send messages"
    description: |
      In this section we guide you on how to send messages, get information about the status and the events happening
      during the delivery
  - name: "Receive messages"
    description: |
      In order to receive messages send by the user you need to configure first an public available endpoint.

      We will use HTTP ```POST``` method to send the user messages to your system as defined in MoMessage.

      Media send by the user can be downloaded by
        - either by following the link in the MoMedia object or
        - by using the received media id and query our system via _/media/{media-id}_ (see below)
  - name: "Notifications"
    description: |
      Notifications or DLRs are **send** to your system when

       - a message reaches a final state or
       - a message reaches an intermediate state and you opt-in to receive this
       - a user decides to delete a message previously send **to** you.
       - a user interacts with a group, such as joining or leaving the group

      We treat

        - delivered
        - seen / read
        - finally failed

      as final states for message send by you.
      
      All other states are treated as intermediate states.

      We will use HTTP ```POST``` method to send the notifications to your system.

      The notification message is the same as for the message status you can query MessageStatus.
  - name: "WA Group management"
    description: |
      The WA Group management enables you to interact with WhatsApps Group API.

      It allows you to list all created groups, create, update and delete a group and generate invite links.

      The general flow for groups is

      1. Create a new group
      2. Update the details, eg. the group icon
      3. Get the invite link to the group
      4. Send the invite link to the users that should join your group
      5. Start interacting with the users in the group

      **Note**

       - When sending messages to the group you need to use the group id as *to*. Not the normal phone number of your user.
       - There are no limits on the number of groups you can create.

      Events genereated from groups are send out as a notification of type _WhatsAppGroupEvent_
paths:
  /messages:
    post:
      operationId: sendMessage
      summary: Send a message
      tags:
        - "Send messages"
      description: Send chat messages via this path.
      requestBody:
        description: The message you would like to send
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageRequest'
      responses:
        202:
          description: The message is accepted by our system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'

        400:
          $ref: '#/components/responses/BadRequest'
        403:
          $ref: '#/components/responses/Forbidden'
        default:
          $ref: '#/components/responses/Default'
  /messages/{message-id}:
    get:
      operationId: retrieveMessage
      summary: Retrieve the message
      tags:
        - "Send messages"
      description: |

        Returns back a message previously send by you.

        **Please note** After a final status notification (delivered, read or failed) the message
        is only available for the next 48 hours. After this period we delete the message in our system.
      parameters:
        - $ref: '#/components/parameters/MessageId'
      responses:
        200:
          description: The message id requested exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoredMessage'
        404:
          $ref: '#/components/responses/MessageIdUnknown'
        default:
          $ref: '#/components/responses/Default'
  /messages/{message-id}/history:
    get:
      operationId: getMessageHistory
      summary: View message history
      tags:
        - "Send messages"
      description: |
        Get the history of the message.

        This will give you detailed information about the delivery flow of the message.
      parameters:
        - $ref: '#/components/parameters/MessageId'
      responses:
        200:
          description: The history of the message id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageHistory'
        404:
          $ref: '#/components/responses/MessageIdUnknown'
        default:
          $ref: '#/components/responses/Default'
  /media/{media-id}:
    parameters:
      - $ref: '#/components/parameters/MediaId'
    get:
      operationId: downloadMedia
      summary: Download received media
      tags:
        - "Receive messages"
      description: Retrieve the media associated with the id
      responses:
        200:
          description: The media associated with the id requested exists.
          content:
            'audio/*':
              schema:
                type: string
                format: binary
            'application/*':
              schema:
                type: string
                format: binary
            'text/*':
              schema:
                type: string
                format: binary
            'video/*':
              schema:
                type: string
                format: binary
        404:
          description: The media associated with the id does not exists in our system
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                status: 404
        default:
          $ref: '#/components/responses/Default'
  /messages/{message-id}/status:
    get:
      operationId: checkMessageStatus
      summary: Check message status
      tags:
        - "Notifications"
      description: Check status of the message
      parameters:
        - $ref: '#/components/parameters/MessageId'
      responses:
        200:
          description: The message id requested exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageStatus'
        404:
          $ref: '#/components/responses/MessageIdUnknown'
        default:
          $ref: '#/components/responses/Default'
  /channels/whatsapp/phone-numbers/{phone-number}/groups:
    parameters:
      - $ref: '#/components/parameters/PhoneNumber'
    get:
      operationId: getAllWhatsAppGroups
      summary: List groups
      description: List all groups the phone number is member of
      tags:
        - "WA Group management"
      responses:
        200:
          description: List of group ids. Can be empty if no group exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WhatsAppGroups'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/PhoneNumberUnknown'
        default:
          $ref: '#/components/responses/Default'
    post:
      operationId: createNewWhatsAppGroup
      summary: Create a new group
      description: Creates a new group with the given subject
      tags:
        - "WA Group management"
      requestBody:
        description: Information in order to create the group
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WhatsAppGroupCreationRequest'
      responses:
        200:
          description: Group created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WhatsAppGroupCreationResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/PhoneNumberUnknown'
        default:
          $ref: '#/components/responses/Default'
  /channels/whatsapp/phone-numbers/{phone-number}/groups/{group-id}:
    parameters:
      - $ref: '#/components/parameters/PhoneNumber'
      - $ref: '#/components/parameters/GroupId'
    get:
      operationId: getWhatsappGroupInformation
      summary: Get details about a group
      description: Returns information about the group specified by the group id
      tags:
        - "WA Group management"
      responses:
        200:
          description: Information about the group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WhatsAppGroupDetails'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/PhoneNumberOrGroupIdUnknown'
        default:
          $ref: '#/components/responses/Default'
  /channels/whatsapp/phone-numbers/{phone-number}/groups/{group-id}/participants:
    parameters:
      - $ref: '#/components/parameters/PhoneNumber'
      - $ref: '#/components/parameters/GroupId'
    get:
      operationId: getGroupParticipants
      summary: Get group participants
      description: Returns current participants of a group
      tags:
        - "WA Group management"
      responses:
        200:
          description: List of participants, can be empty
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WhatsAppGroupParticipants'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/PhoneNumberOrGroupIdUnknown'
        default:
          $ref: '#/components/responses/Default'
    delete:
      operationId: removeParticipantsFromGroup
      summary: Remove participants from group
      description: Removes all specified participants from the group.
      requestBody:
        required: true
        description: List of participants to be removed
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WhatsAppGroupParticipants'
      tags:
        - "WA Group management"
      responses:
        200:
          description: Participants removed from group
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/PhoneNumberOrGroupIdUnknown'
        default:
          $ref: '#/components/responses/Default'
  /channels/whatsapp/phone-numbers/{phone-number}/groups/{group-id}/participants/self:
    parameters:
      - $ref: '#/components/parameters/PhoneNumber'
      - $ref: '#/components/parameters/GroupId'
    delete:
      operationId: removeSelfFromGroup
      summary: Remove yourself from the group
      description: |
        Removes the whatsapp account from it's own group.

        **Note**: The account can **not** rejoin the group afterwards
      tags:
        - "WA Group management"
      responses:
        200:
          description: Participants removed from group
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/PhoneNumberOrGroupIdUnknown'
        default:
          $ref: '#/components/responses/Default'
  /channels/whatsapp/phone-numbers/{phone-number}/groups/{group-id}/settings/icon:
    parameters:
      - $ref: '#/components/parameters/PhoneNumber'
      - $ref: '#/components/parameters/GroupId'
    get:
      summary: Get the group icon
      description: Returns the actual icon for the given group
      tags:
        - "WA Group management"
      operationId: getWhatsAppGroupIcon
      responses:
        200:
          description: The current icon
          content:
            image/png:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          description: The phone number, group id or icon does not exists
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        default:
          $ref: '#/components/responses/Default'
    put:
      summary: Update the group icon
      description: |
        Updates the group icon for the given group.

        The icon must have a minimal edge size of 192 pixel and must not exceed 5 MB in size
      tags:
        - "WA Group management"
      operationId: updateWhatsappGroupIcon
      requestBody:
        required: true
        description: Image that should be used as a group icon
        content:
          image/png:
            schema:
              type: string
              format: binary
          image/jpeg:
            schema:
              type: string
              format: binary
      responses:
        202:
          description: Image successfully updated
        400:
          $ref: '#/components/responses/BadRequest'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/PhoneNumberOrGroupIdUnknown'
        default:
          $ref: '#/components/responses/Default'
  /channels/whatsapp/phone-numbers/{phone-number}/groups/{group-id}/settings/profile:
    parameters:
      - $ref: '#/components/parameters/PhoneNumber'
      - $ref: '#/components/parameters/GroupId'
    get:
      summary: Get the group profile
      description: Retrieve the actual profile for the given group
      tags:
        - "WA Group management"
      operationId: getWhatsAppGroupProfile
      responses:
        200:
          description: The current profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WhatsAppGroupProfile'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/PhoneNumberOrGroupIdUnknown'
        default:
          $ref: '#/components/responses/Default'
    put:
      summary: Update the group profile
      description: Update the actual profile for the given group
      tags:
        - "WA Group management"
      operationId: updateWhatsAppGroupProfile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WhatsAppGroupProfile'
      responses:
        202:
          description: Profile successfully updated
        400:
          $ref: '#/components/responses/BadRequest'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/PhoneNumberOrGroupIdUnknown'
        default:
          $ref: '#/components/responses/Default'
  /channels/whatsapp/phone-numbers/{phone-number}/groups/{group-id}/invites/link:
    parameters:
      - $ref: '#/components/parameters/PhoneNumber'
      - $ref: '#/components/parameters/GroupId'
    put:
      summary: Create an invite link
      description: Creates an invite link if necessary
      tags:
        - "WA Group management"
      operationId: createWhatsAppGroupInviteLink
      responses:
        200:
          description: Invite link created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WhatsAppGroupInviteLink'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/PhoneNumberOrGroupIdUnknown'
        default:
          $ref: '#/components/responses/Default'
    get:
      summary: Get the invite link
      description: Get the current active invite link for the given group
      tags:
        - "WA Group management"
      operationId: getWhatsAppGroupInviteLink
      responses:
        200:
          description: The current invite link
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WhatsAppGroupInviteLink'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/PhoneNumberOrGroupIdUnknown'
        default:
          $ref: '#/components/responses/Default'
    delete:
      summary: Delete the current invite link
      description: This operation invalidates the previously generated invite link
      tags:
        - "WA Group management"
      operationId: deleteInviteLink
      responses:
        200:
          description: The current invite link was deleted
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/PhoneNumberOrGroupIdUnknown'
        default:
          $ref: '#/components/responses/Default'
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: apikey
      description: |
        The API key used for this operation. We check as well that the API key has the phone number
        (either on sending messages or interacting with other phone number based features) assigned.
  responses:
    Default:
      description: Default response in case of any other error. Please check the error object for details
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
    MessageIdUnknown:
      description: The message id does not exists in our system
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
          example:
            status: 404
    PhoneNumberUnknown:
      description: The phone number does not exists
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
          example:
            status: 404
            title: Phone number unknown
    PhoneNumberOrGroupIdUnknown:
      description: The phone number or group id does not exists
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
          example:
            status: 404
            title: Group id unknown
    BadRequest:
      description: The request does not match our expectations. Please check the Problems object for details
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
          example:
            status: 400
            violations: [
            {
              field: validate.request.whatsapp.contentType,
              message: must not be empty
            }
            ]
            title: Constraint Violation
    Forbidden:
      description: You attempting to use a number that is not assigned to your account
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
          example:
            type: https://httpstatuses.com/403
            title: Forbidden
            status: 403
  parameters:
    GroupId:
      name: group-id
      in: path
      required: true
      description: Group id
      schema:
        type: string
      example: 4923147790717-1564131378
    MediaId:
      name: media-id
      in: path
      required: true
      description: The id of the media to be downloaded
      schema:
        type: string
        format: uuid
        example: 77185196-664a-43ec-b14a-fe97036c697f
    MessageId:
      name: message-id
      in: path
      required: true
      description: The id of the message
      schema:
        type: string
        format: uuid
        example: 77185196-664a-43ec-b14a-fe97036c697f
    PhoneNumber:
      name: phone-number
      in: path
      required: true
      description: Phone number used for WhatsApp messaging.
      schema:
        type: integer
        minLength: 4
        maxLength: 15
      example: 4923147790717
  schemas:
    MessageRequest:
      type: object
      description: The message you would like to send
      required:
        - to
        - channels
      properties:
        to:
          type: string
          description: |
            The receipient of the message.

            Could be one of
              - phone number in international format. In this it should follow the guidelines of [E.164](https://en.wikipedia.org/wiki/E.164) but leading 00 is as well accepted
              - group id create via the WA Group management
          example: "+1233423454"
        channels:
          type: array
          description: Channels selected for delivery.
          example:
            - sms
            - whatsapp
          items:
            type: string
            enum:
              - sms
              - whatsapp
              - tyntecEcho
        overrides:
          $ref: '#/components/schemas/MessageRequestOverrides'
        context:
          $ref: '#/components/schemas/MessageRequestContext'
        defaultContent:
          $ref: '#/components/schemas/DefaultContent'
        sms:
          $ref: '#/components/schemas/SMSRequest'
        whatsapp:
          $ref: '#/components/schemas/WhatsappMessageRequest'
        tyntecEcho:
          description: |
            This channel can be used for integration purposes without sending any message to an actual device.
            A detailed description is provided on the object definition.
          allOf:
            - $ref: '#/components/schemas/TyntecEchoRequest'
      example:
        to: "+123234234"
        channels: ["whatsapp"]
        whatsapp:
          from: "545345345"
          contentType: text
          text: A simple text message
    StoredMessage:
      type: object
      required:
        - to
        - channels
      properties:
        to:
          type: string
          pattern: '^(00|\+)\d{1,15}$'
          description: |
            The receipient phone number in international format. It should follow the guidelines
            of [E.164](https://en.wikipedia.org/wiki/E.164) but leading 00 is as well accepted
          example: '+1233423454'
        channels:
          type: array
          description: Channels selected for delivery.
          example:
            - sms
            - whatsapp
          items:
            type: string
            enum:
              - sms
              - whatsapp
              - tyntecEcho
        sms:
          $ref: '#/components/schemas/SMSRequest'
        whatsapp:
          $ref: '#/components/schemas/WhatsappMessageRequest'
        tyntecEcho:
          description: |
            This channel can be used for integration purposes without sending any message to an actual device.
            A detailed description is provided on the object definition.
          allOf:
            - $ref: '#/components/schemas/TyntecEchoRequest'
      example:
        messageId: 77185196-664a-43ec-b14a-fe97036c697f
        to: "+123234234"
        channels: ["whatsapp"]
        whatsapp:
          from: "545345345"
          contentType: text
          text: A simple text message
    DefaultContent:
      deprecated: true
      description: |
        The default content that is applied to all channels.

        Each component might be overrwritten or extended by channel specific settings.

        This can be used to specify the text for a message once, but the _from_ per used channel.

        **Note** The default content will be discontinued in a future release, please migrate to the channel
        specific properties _whatsapp_, _sms_ and/or _tyntecEcho_
      type: object
      required:
        - contentType
        - from
      properties:
        from:
          type: string
          description: The sender of the message
          example: "1233423454"
        contentType:
          type: string
          enum:
            - template
            - text
            - url
            - media
          description: What kind of payload is used
          example: template
        text:
          type: string
          description: The text to be send
          example: Thanks for contacting our support. We will get back to you in 5 minutes.
        url:
          type: string
          description: the URL you would like to send. Must be a valid http(s) URL
          example: https://www.tyntec.com
        media:
          $ref: '#/components/schemas/Media'
        template:
          $ref: '#/components/schemas/Template'
      example:
        from: "1233423454"
        contentType: template
        template:
          templateId: welcome_message
          language:
            policy: deterministic
            code: en
          parameters:
            - default: Mr. Doe
    SMSRequest:
      type: object
      description: |
        Normal SMS to be send.

        If Content is used as well this will override the specification made there.

        In case URL type is specified the recipient will receive the plain URL as SMS.
      required:
        - contentType
      properties:
        contentType:
          type: string
          enum:
            - text
            - url
          description: What kind of payload should be sent
          example: text
        from:
          type: string
          description: The sender of the message
          example: "1233423454"
        text:
          type: string
          maxLength: 3000
          description: The message to be send
          example: Thanks for contacting our support. We will get back to you in 5 minutes.
        url:
          type: string
          deprecated: true
          description: |
           The URL you would like to send. Must be a valid http(s) URL.
            
           **Note** This property will be removed in a future release. Please use ``text`` instead.
          example: https://www.tyntec.com
      example:
        contentType: text
        from: "1233423454"
        text: Thanks for contacting our support. We will get back to you in 5 minutes.
    WhatsappMessageRequest:
      description: |
        Whatsapp message to be send.

        This will override defaults from DefaultContent
      type: object
      required:
        - contentType
        - from
      properties:
        from:
          type: string
          description: The phone number of the sending whatsapp account
          example: "1233423454"
        contentType:
          type: string
          enum:
            - template
            - text
            - url
            - media
            - location
          description: What kind of payload is used
          example: template
        text:
          type: string
          maxLength: 4096
          description: The text to be send
          example: Thanks for contacting our support. We will get back to you in 5 minutes.
        url:
          type: string
          deprecated: true
          description: |
            The URL you would like to send. Must be a valid http(s) URL.
            
            **Note** This property will be removed in a future release. 
            Please switch to ``text`` with ``urlPreviewDisplayed`` set to ``true``.
          example: https://www.tyntec.com
        media:
          $ref: '#/components/schemas/Media'
        template:
          $ref: '#/components/schemas/Template'
        location:
          $ref: '#/components/schemas/Location'
        urlPreviewDisplayed:
          type: boolean
          default: false
          description: Should a preview of the url be rendered. This will only have an effect on text messages.
          example: true
      example:
        from: "1233423454"
        contentType: media
        media:
          type: audio
          url: 'https://www.tyntec.com/themes/custom/tyntec/image/tyntec-logo-color.svg'
          caption: Tyntec Logo
    TyntecEchoRequest:
      type: object
      description: |
        This channel can be used for integration purposes without sending any message to an actual device.

        It has two modes

          - only send the delivered dlr back
          - send additionally a message back

        The messages send back follow these rules :

          - media, text and url are send back as they are
          - templates are formatted as
            `TemplateId[templateId] LanguagePolicy[language.policy] LanguageCode[language.code] Parameter<N>[parameters[N]]`
          - from and to switch positions
          - messageId will be the same as for the request

      required:
        - contentType
        - from
      properties:
        from:
          type: string
          description: The sending tyntecEcho account
          example: "1233423454"
        contentType:
          type: string
          enum:
            - template
            - text
            - url
            - media
          description: What kind of payload is used
          example: template
        text:
          type: string
          maxLength: 100
          description: The text to be send
          example: Thanks for contacting our support. We will get back to you in 5 minutes.
        url:
          type: string
          description: the URL you would like to send. Must be a valid http(s) URL
          example: https://www.tyntec.com
        media:
          $ref: '#/components/schemas/Media'
        template:
          $ref: '#/components/schemas/Template'
        replyBack:
          type: boolean
          description: Should the channel reply back the send message
          default: false
      example:
        from: "1233423454"
        contentType: url
        url: 'https://www.tyntec.com'
        replyBack: false
    Media:
      type: object
      description: Media to be send
      properties:
        type:
          type: string
          description: What kind of media should be send
          enum:
            - image
            - document
            - audio
            - video
          example: image
        url:
          type: string
          description: the url of the location where the media is stored
          example: https://www.tyntec.com/themes/custom/tyntec/image/tyntec-logo-color.svg
        caption:
          type: string
          description: additional caption for the media. is shown on the uploaded media when the channel supports this
          example: Tyntec Logo
    Template:
      type: object
      description: The message template to be send.
      required:
        - templateId
        - language
      properties:
        templateId:
          type: string
          description: the identifier of the template that should be used
          example: welcome_message
        language:
          $ref: '#/components/schemas/Language'
        parameters:
          description: Parameter for replacement in the template.
          type: array
          items:
            $ref: '#/components/schemas/TemplateParameter'
    Language:
      type: object
      description: Language settings for the template
      properties:
        policy:
          type: string
          description: Used for multi-language template resolution.
          enum:
            - fallback
            - deterministic
          default: deterministic
        code:
          description: |
            The code of the language or locale to use —
            Accepts both language and language_locale formats (e.g., en and en_US).
          type: string
          example: en
    TemplateParameter:
      type: object
      description: |
        Parameter for replacement in the template.

        The value can contain any character except of :

          - newline
          - tabulator
          - more then 4 consecutive spaces.

        It can be formatted accordingly to [Formatting your messages](https://faq.whatsapp.com/en/android/26000002/?fbclid=IwAR1-VtKzKAxleQD-nnWbZpIhLtkNY6Hpjjb4echlEmcfLV2l0C5We4HnsUM).
      properties:
        default:
          type: string
          description: Variable substitution.
          example: Mr. Doe
    Location:
      type: object
      description: Location received or send
      required:
        - longitude
        - latitude
      properties:
        longitude:
          type: number
          format: double
          description: Longitude part of the coordinate
          example:
            7.4954884
        latitude:
          type: integer
          format: double
          description: Latitude part of the coordinate
          example:
            51.5005765
        name:
          type: string
          maxLength: 256
          description: Optional name
          example:
            tyntec GmbH
        address:
          type: string
          maxLength: 256
          description: Optional address, will only be rendered if name is set
          example:
            tyntec GmbH, Semerteichstraße, Dortmund
    MessageResponse:
      type: object
      required:
        - messageId
        - acceptedAt
      properties:
        messageId:
          type: string
          format: uuid
          description: Global Message Id reference
          example: 77185196-664a-43ec-b14a-fe97036c697f
        acceptedAt:
          type: string
          format: date-time
          description: Point in time when the Chat API service confirms that the message request was accepted
    APIEvent:
      type: object
      description: Basic type for events produced by the ChatAPI such as MessageStatus, InboundMessage and GroupEvent
      required:
        - event
      properties:
        event:
          type: string
          description: Determines which kind of event is sent
          enum:
            - MessageStatus::accepted
            - MessageStatus::delivered
            - MessageStatus::seen
            - MessageStatus::failed
            - MessageStatus::unknown
            - MessageStatus::deleted
            - MoMessage
            - WhatsAppGroupEvent::userJoined
            - WhatsAppGroupEvent::userLeft
            - WhatsAppGroupEvent::subjectChanged
            - WhatsAppGroupEvent::descriptionChanged
        channel:
          type: string
          description: Channel which triggered the event. Can be empty in case of an internal source
          example: sms
          enum:
            - sms
            - whatsapp
            - tyntecEcho
        timestamp:
          type: string
          format: 'date-time'
          description: Point in time when the event happend
          example:
            2019-06-26T11:41:00
        from:
          type: string
          description: Who triggered this event. Usually the phonenumber or whatsapp account id
          example:
            491672634678
      example:
        event: MessageStatus::accepted
        channel: sms
        from: 491672634678
        timestamp: 2019-06-26T11:41:00
    MessageStatus:
      type: object
      description: |
        The current status of a message.

        It is used for messages send and received by you.

        In case you send a message the status will inform you about the delivery process.

        In the case that you receive a message from a user, the user may decide to delete the message.
        Then and only then status deleted is triggered.
      required:
        - messageId
        - event
        - status
        - timestamp
      allOf:
        - $ref: '#/components/schemas/APIEvent'
      properties:
        event:
          type: string
          description: Determines which kind of event is sent.
          enum:
            - MessageStatus::accepted
            - MessageStatus::delivered
            - MessageStatus::seen
            - MessageStatus::failed
            - MessageStatus::unknown
        messageId:
          type: string
          description: Global Message Id reference
          example: 77185196-664a-43ec-b14a-fe97036c697f
        channel:
          type: string
          description: Channel which triggered the event. Can be empty in case of an internal source
          example: sms
          enum:
            - sms
            - whatsapp
            - tyntecEcho
        deliveryChannel:
          type: string
          deprecated: true
          description:  |
            Channel which was used for delivery.

            **Note** This property will be replaced in the future by the _channel_ property from the APIEvent
          example: sms
          enum:
            - sms
            - whatsapp
            - tyntecEcho
        status:
          description: |
            Indicates the status of the message. Be aware that not all channels support all status.

            **Note** This property will be replaced by the property _event_ in a future release.
          deprecated: true
          type: string
          example: seen
          enum:
            - accepted
            - delivered
            - seen
            - failed
            - unknown
        timestamp:
          type: string
          format: 'date-time'
          description: Point in time when the event happend
          example:
            2019-06-26T11:41:28Z
        userContext:
          type: string
          description: Contextual information set on the message request
          example:
            my-message-reference
        from:
          type: string
          description: Who triggered this event. Usually the phonenumber or whatsapp account id
          example:
            491672634678
        details:
          $ref: '#/components/schemas/HistoryDetails'
      example:
        event: MessageStatus::seen
        messageId: 77185196-664a-43ec-b14a-fe97036c697f
        channel: whatsapp
        status: seen
        userContext: my-message-reference
        timestamp: 2019-06-26T11:41:28Z
        from: 491672634678
    MessageStatusDeletedEvent:
      type: object
      description: |
        Indicates that a previously send inbound MOMessage is deleted by the user.
      required:
        - messageId
        - event
        - status
        - channel
        - from
        - to
        - timestamp
      allOf:
        - $ref: '#/components/schemas/APIEvent'
      properties:
        event:
          type: string
          description: Determines which kind of event is sent.
          enum:
            - MessageStatus::deleted
        messageId:
          type: string
          description: Global Message Id reference
          example: 77185196-664a-43ec-b14a-fe97036c697f
        channel:
          type: string
          description: Channel which triggered the event. Can be empty in case of an internal source.
          example: sms
          enum:
            - sms
            - whatsapp
            - tyntecEcho
        deliveryChannel:
          type: string
          deprecated: true
          description:  |
            Channel which was used for delivery.

            **Note** This property will be replaced in the future by the _channel_ property from the APIEvent.
          example: sms
          enum:
            - sms
            - whatsapp
            - tyntecEcho
        status:
          description: |
            Indicates the status of the message. Be aware that not all channels support all status.

            **Note** This property will be replaced by the property _event_ in a future release.
          deprecated: true
          type: string
          example: seen
          enum:
            - deleted
        timestamp:
          type: string
          format: 'date-time'
          description: Point in time when the event happend
          example:
            2019-06-26T11:41:28Z
        userContext:
          type: string
          description: Contextual information set on the message request
          example:
            my-message-reference
        from:
          type: string
          description: Who triggered this event. Usually the phonenumber or whatsapp account id.
          example:
            491672634678
        to:
          type: string
          description: Which channel specific account id is the receiver of this event.
          example:
            4923147790813
      example:
        event: MessageStatus::deleted
        messageId: 77185196-664a-43ec-b14a-fe97036c697f
        channel: whatsapp
        status: deleted
        userContext: my-message-reference
        timestamp: 2019-06-26T11:41:28Z
        from: 491672634678
        to: 4923147790813
    MessageHistory:
      type: object
      properties:
        messageId:
          type: string
          format: uuid
          description: Global Message Id reference
          example: 77185196-664a-43ec-b14a-fe97036c697f
        userContext:
          type: string
          description: Contextual information set on the message request
          example:
            my-message-reference
        history:
          type: array
          description: Ordered list of current available events for your message
          items:
            $ref: '#/components/schemas/HistoryItem'
      example:
        messageId: 77185196-664a-43ec-b14a-fe97036c697f
        userContext: my-message-reference
        history:
          - deliveryChannel: whatsapp
            happendAt: '2019-03-13T12:57:27.048Z'
            state: accepted
    HistoryItem:
      type: object
      description: Contains information about a specific event occuring in the delivery process
      properties:
        deliveryChannel:
          type: string
          deprecated: true
          description: The channel triggering this event
          example: whatsapp
          enum:
            - sms
            - whatsapp
            - tyntecEcho
        channel:
          type: string
          description: The channel triggering this event
          example: whatsapp
          enum:
            - sms
            - whatsapp
            - tyntecEcho
        happendAt:
          type: string
          description: When did the event happen
          format: date-time
        state:
          type: string
          description: State of the message delivery
          example: accepted
          enum:
            - accepted
            - dispatched
            - dispatching_failed
            - success
            - failed
            - unknown
        details:
          $ref: '#/components/schemas/HistoryDetails'
      example:
        deliveryChannel: whatsapp
        happendAt: '2019-03-13T13:15:22Z'
        state: accepted
    HistoryDetails:
      description: Further information available for this event
      type: object
      additionalProperties: true
      properties:
        code:
          type: string
          description: Code specific to the details
          example: tyntec::error:noFurtherChannelAvailable
        message:
          type: string
          description: Textual representation of the code, containing further information
          example: No further channel after Channel[whatsapp] available
        from:
          type: string
          description: Who triggered this event. Usually the phonenumber or whatsapp account id
          example:
            491672634678
    Problem:
      $ref: 'https://raw.githubusercontent.com/tyntec/api-collection/master/common/problem.yaml#/components/schemas/Problem'
    MoMessage:
      type: object
      description: |
        Message received by us and delivered to your system via a webhook provided by your system.

        MoMessages are transferred by using HTTP ```POST``` method.
      required:
        - messageId
        - event
        - channel
        - from
        - content
      properties:
        event:
          type: string
          description: Determines which kind of event is sent. Is always _MoMessage_
          enum:
            - MoMessage
        channel:
          type: string
          description: Channel which triggered the event.
          example: sms
          enum:
            - sms
            - whatsapp
            - tyntecEcho
        receivedAt:
          deprecated: true
          type: string
          format: 'date-time'
          description: Point in time when the message was received. **Note** This property will be replaced in the future by the _timestamp_ property from the APIEvent
          example:
            2019-06-26T11:41:00
        timestamp:
          type: string
          format: 'date-time'
          description: Point in time when the message was received
          example:
            2019-06-26T11:41:00
        messageId:
          type: string
          description: Message Id reference
          example: 77185196-664a-43ec-b14a-fe97036c697f
        from:
          type: string
          description: the sender of the message
          example: "49123512314"
        to:
          type: string
          description: Receiving account of the message. The format is channel specific
          example: "49123512314"
        groupId:
          type: string
          description: Group id from which the event originates from. Only present if the message was send into a group
          example:
            4923147790717-1564134658
        content:
          $ref: '#/components/schemas/MoContent'
        context:
          $ref: '#/components/schemas/MoContext'
        sms:
          $ref: '#/components/schemas/SMS'
        whatsapp:
          $ref: '#/components/schemas/Whatsapp'
      example:
        messageId: 77185196-664a-43ec-b14a-fe97036c697e
        event: MoMessage
        from: "49123512314"
        timestamp: 2019-06-26T11:41:00
        channel: sms
        content:
          contentType: text
          text: 'hi, thanks for your support message'
        sms:
          origin:
            mcc: string
            mnc: string
            ttId: string
          totalPrice: 0
          size: 1
          missingParts: false
          parts:
            - messageId: string
              sentDate: '2019-03-13T13:15:22Z'
              price: 0
              currency: string
              priceEffective: '2019-03-13T13:15:22Z'
              sequenceNumber: 1
    MoContent:
      type: object
      description: Content of the mobile originated message
      required:
        - contentType
      properties:
        contentType:
          type: string
          enum:
            - text
            - url
            - media
            - location
          description: What kind of payload is used
          example: media
        text:
          type: string
          description: The received text
          example: hi, thanks for your support message
        url:
          type: string
          description: the URL received
          example: https://www.tyntec.com
        media:
          $ref: '#/components/schemas/MoMedia'
        location:
          $ref: '#/components/schemas/Location'
      example:
        contentType: media
        media:
          type: audio
          url: 'https://api.tyntec.com/messaging/v1/chat/media/77185196-664a-43ec-b14a-fe97036c697f'
          mediaId: 77185196-664a-43ec-b14a-fe97036c697f
    MoContext:
      type: object
      description: Contextual information of the mobile originated message
      properties:
        messageId:
          type: string
          description: The message id the MoMessage refers to. Usualy set when the sender replies to a specific message
          example: 77185196-664a-43ec-b14a-fe97036c697a
    MoMedia:
      type: object
      description: Media information
      properties:
        type:
          type: string
          description: What kind of media was received
          enum:
            - image
            - document
            - audio
            - voice
            - video
          example: audio
        url:
          type: string
          description: the url of the location where the media is stored
          example: https://api.tyntec.com/messaging/v1/chat/media/77185196-664a-43ec-b14a-fe97036c697f
        mediaId:
          type: string
          description: plain id of the media to download
          example: 77185196-664a-43ec-b14a-fe97036c697f
        caption:
          type: string
          description: caption specified by the user or the file name of the document
          example: This is an picture of my cat!
    SMS:
      type: object
      description: specifics of the sms channel
      properties:
        origin:
          $ref: '#/components/schemas/SMSOrigin'
        totalPrice:
          type: number
          description: The sum of prices for each message part listed in “contentList”.
          example: 0.1
        size:
          type: number
          description: The amount of respective concatenated SMS parts.
          minimum: 1
          maximum: 255
          example: 1
        missingParts:
          type: boolean
          description: True in case a part of an over-length was not received by the tyntec platform and the forwarded message text is incomplete.
          default: false
          example: false
        parts:
          type: array
          description: |
            tyntec merges over-length (concatenated) SMS into one string before sending it to your webserver.
            Information for each individual part are collected here
          items:
            $ref: '#/components/schemas/SMSContent'
      example:
        origin:
          mcc: "49"
          mnc: "176"
          ttId: "25"
        totalPrice: 0.1
        size: 1
        missingParts: false
        parts:
          - messageId: 48514285-4e78-4eef-b0c6-4ce68d40c1c3
            sentDate: '2019-03-13T13:15:22Z'
            price: 0
            currency: EUR
            priceEffective: '2019-03-13T13:15:22Z'
            sequenceNumber: 1
    SMSOrigin:
      type: object
      description: Origin Information of the message
      properties:
        mcc:
          type: string
          description: A representative MCC (Mobile Network Code) of the originating network.
          example: "49"
        mnc:
          type: string
          description: A representative MNC (Mobile Network Code) of the originating network.
          example: "176"
        ttId:
          type: string
          description: The respective tyntec ID of the originating network.
          example: "25"
    SMSContent:
      type: object
      description: SMS channel specific information
      properties:
        messageId:
          type: string
          description: The unique identifier provided by tyntec for each message part.
          example: 48514285-4e78-4eef-b0c6-4ce68d40c1c3
        sentDate:
          type: string
          description: |
            The time stamp when the SMS has been received by the sending MSC (if available).

            or

            The time stamp when the respective message was received by tyntec.
          format: date-time
        price:
          type: number
          description: |
            The price per message from the respective network. 

            Negative prices represent payout in favor of tyntec’s customer.
          example: 0.1
        currency:
          type: string
          description: The currency in which the pricing is given; corresponding to the currency of the invoice.
          example : EUR
        priceEffective:
          type: string
          description: The date when the “price” became effective.
          format: date-time
        sequenceNumber:
          type: number
          description: |
            In case an over-length message is received tyntec recomposes the full message text before forwarding. 
            The “sequenceNumber” indicates the order of the message part.
          minimum: 1
          maximum: 255
          example: 1
    Whatsapp:
      type: object
      description: specifics of the whatsapp channel
      properties:
        senderName:
          type: string
          description: Name of the sender, set in his or her profile
          example: Peter
      example:
        senderName: Peter
      additionalProperties: true
    MessageRequestContext:
      type: object
      description: Contextual information for the message request
      properties:
        userContext:
          type: string
          maxLength: 255
          description: |
            Contextual information that is transfered back on delivery notifications.
          example:
            my-message-reference
    MessageRequestOverrides:
      type: object
      description: Overrides of defaults for this message
      properties:
        notificationCallbackUrl:
          type: string
          pattern: ^https:\/\/?[\w.-]+(?:\.[\w\.-]+)+[\w\-\._~:/?#[\]@!\$&'\(\)\*\+,;=.]+$
          description: |
            When present this url is used for sending the delivery notifications to your webhook.
            Can be used for debugging use cases or individual routings.
          example:
            https://en4u5fpprib5i.x.pipedream.net
    WhatsAppGroupCreationRequest:
      type: object
      description: Required information when creating a new group
      required:
        - subject
      properties:
        subject:
          type: string
          maxLength: 35
          description: Group subject, used as display name
          example:
            This is a test group
    WhatsAppGroupCreationResponse:
      type: object
      description: Response after a group was successfully created
      properties:
        groupId:
          type: string
          readOnly: true
          description: |
            The group id of the created group. This id is required on subsequent interactions with the group such as

             - changes of the profile
             - invite link management
             - sending a message to the group
          example:
            4923147790717-1564131378
        creationTime:
          type: integer
          readOnly: true
          description: When was the group created. Time is given in seconds since 01.01.1970
          example:
            1564131378
    WhatsAppGroups:
      type: array
      items:
        $ref: '#/components/schemas/WhatsAppGroup'
    WhatsAppGroup:
      type: object
      description: Basic information about a group
      properties:
        groupId:
          type: string
          readOnly: true
          description: |
            The group id of a group. This id is required on subsequent interactions with the group such as

             - changes of the profile
             - invite link management
             - sending a message to the group
          example:
            4923147790717-1564131378
        creationTime:
          type: integer
          readOnly: true
          description: When was the group created. Time is given in seconds since 01.01.1970
          example:
            1564131378
    WhatsAppGroupDetails:
      type: object
      description: Information about a dedicated WhatsApp group
      properties:
        admins:
          type: array
          readOnly: true
          description: |
            List of admin whatsapp account id
          items:
            type: string
          example:
            - 4923147790717
        creationTime:
          type: integer
          readOnly: true
          description: When was the group created. Time is given in seconds since 01.01.1970
          example:
            1564131378
        creator:
          type: string
          readOnly: true
          description: Which account created the group. Is always your WhatsApp account assigned to the phone number used
          example:
            4923147790717
        participants:
          type: array
          readOnly: true
          description: List of participants in the group
          items:
            type: string
          example:
            - 4923147790717
            - 4923147790718
        subject:
          type: string
          readOnly: true
          description: Group subject, used as display name
          example:
            This is a test group
    WhatsAppGroupParticipants:
      type: object
      description: Participants of a whatsapp group
      properties:
        participants:
          type: array
          description: List of participants in the group
          items:
            type: string
          example:
            - 4923147790717
            - 4923147790718
    WhatsAppGroupProfile:
      type: object
      description: Profile of the WhatsApp group
      required:
        - subject
      properties:
        subject:
          type: string
          maxLength: 35
          description: Group subject, used as display name
          example:
            This is a test group
    WhatsAppGroupInviteLink:
      type: object
      description: |
        Invite link for the group.

        Needs to be send to all participants of the group either by template or normal text message
      required:
        - link
      properties:
        link:
          type: string
          readOnly: true
          description: The invite link as URL
          example:
            https://chat.whatsapp.com/EVZpTCb8xmB1KSoZlyDgU1
    WhatsAppGroupEvent:
      type: object
      description: |
        This events are send out for WhatsApp groups your account is member of.

        The details of a certain event are stored in dedicated properties, please refer to the documentation below which
        eventType will fill which property.
      required:
        - event
        - groupId
        - eventType
      properties:
        event:
          type: string
          description: Determines which kind of event is sent.
          enum:
            - WhatsAppGroupEvent::userJoined
            - WhatsAppGroupEvent::userLeft
            - WhatsAppGroupEvent::subjectChanged
            - WhatsAppGroupEvent::descriptionChanged
        channel:
          type: string
          description: Channel which triggered the event. Is always _whatsapp_
          example: whatsapp
          enum:
            - whatsapp
        timestamp:
          type: string
          format: 'date-time'
          description: Point in time when the event happend
          example:
            2019-06-26T11:41:00
        from:
          type: string
          description: Who triggered this event. Usually the phonenumber or whatsapp account id
          example:
            491672634678
        operator:
          type: string
          description: Phone number or whatsapp account id of the initiating user. May not be the same as _from_.
        groupId:
          type: string
          description: originating group id
        subject:
          type: string
          description: The changed subject of the group. Will only be present on _subjectChanged_
          example:
            Test Group
        description:
          type: string
          description: The changed description of the group. Will only be present on _descriptionChanged_
          example:
            This is an example description
        users:
          type: array
          description: Accounts left or joined the group. Will only be present on _userJoined_ or _userLeft_
          items:
            type: string
          example:
            - 491672634671
            - 491672634672
      example:
        event: WhatsAppGroupEvent::userJoined
        channel: whatsapp
        timestamp: 2019-06-26T11:41:00
        from: 491672634678
        operator: 491672634652
        groupId: 4923147790717-1564131378
        users:
          - 491672634672
          - 491672634673
