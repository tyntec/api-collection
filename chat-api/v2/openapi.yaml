openapi: '3.0.0'
info:
  title: Chat API
  description: |
    The Chat API allows you to easily send messages to your customers via messaging services like WhatsApp 
    and still reach customers with classic SMS.

    In addition you can define a chain of channels which will be used for messaging attempts until one succeeds.

    Notifications and messages from your users are send by us to your system via HTTP ```POST``` method.
    
    **Channel specific pre-conditions**
    
    - *2-way SMS* : Please contact us to get the details for the 2-way SMS setup
    - *WhatsApp* : A WhatsApp Business Account is required in order to use this channel. Please [request access here](https://www.tyntec.com/form-whatsapp-request-your-access)

    **Adheared web-standards**

    One goal of the API is to follow best practices and standards around http based services.

    A building block of this is to follow the RFCs:

    - [RFC 5988 - Web Linking](https://tools.ietf.org/html/rfc5988)
    - [RFC 7807 - Problem Details for HTTP APIs](https://tools.ietf.org/html/rfc7807)

    *RFC 5988* is implemented in a way that all API calls that return a list of resources, make use of the following Link headers

    - `first` : First page of the resource list pagination
    - `previous` : Predecessor page of the current page of the resource list pagination
    - `current` : Actual page of the resource list pagination
    - `next` : Successor page of the current of page of the resource list pagination
    - `last` : Last page of the resource list pagination



    In addition the following custom headers are provided for convenience

    - `x-total-pages` : Total number of pages of the list of requested sub-resources
    - `x-total-items` : Total number of items on the list of requested sub-resources
    - `x-page-size` : Maxium size of the page
    - `x-current-page` : Page number of the current page of the list of requested sub-resources

  contact:
    name: tyntec API Support
    url: http://www.tyntec.com/support
    email: support@tyntec.com
  version: '2.9'
  x-repository: https://github.com/tyntec/api-collection/blob/master/chat-api
  x-major-version: v2
  x-postman-collection: postman.zip
servers:
  - url: https://api.tyntec.com/chat-api/v2
security:
  - ApiKeyAuth: []
tags:
  - name: "Send messages"
    description: |
      In this section we guide you on how to send messages, get information about the status and the events happening
      during the delivery
  - name: "Receive messages"
    description: |
      In order to receive messages send by the user you need to configure first an public available endpoint.

      We will use HTTP ```POST``` method to send the user messages to your system as defined in MoMessage.

      Media send by the user can be downloaded by
        - either by following the link in the MoMedia object or
        - by using the received media id and query our system via _/media/{media-id}_ (see below)
  - name: "Notifications"
    description: |
      Notifications or DLRs are **send** to your system when

       - a message reaches a final state or
       - a message reaches an intermediate state and you opt-in to receive this
       - a user decides to delete a message previously send **to** you.
       - a user interacts with a group, such as joining or leaving the group

      We treat

        - delivered
        - seen / read
        - finally failed

      as final states for message send by you.

      All other states are treated as intermediate states.

      We will use HTTP ```POST``` method to send the notifications to your system.

      The notification message is the same as for the message status you can query MessageStatus.
  - name: "Applications"
    description: |
      The Chat API allows you to freely define which events should be sent via a callback URL to your webhook
      implementation.

      **Please note**:

       - By now, only a default application is supported. The extension to custom applications is planned for future releases
       - The API merges events pointing to the same callback URL into one set.
       - When an update of a callback URL is executed, the whole webhook definition must be restated.
  - name: "WA Account management"
    description: |
      The WA Account management grants you access to information about the WhatsApp accounts
      provisioned for you.

      At the moment it does not support requesting new WhatsApp accounts or editing existing ones.

      The WhatsApp account and it's subresources can *only* be managed by one of your CPaaS API Account.

      Read access to an account is available for all accounts that are associated with a phone number and thus eligible
      for sending messages.
  - name: "WA Template management"
    description: |
      The WA Template management enables you to interact with the templates defined for your WhatsApp account.

      We support creating or deleting templates and adding new localizations to an existing template.

      Due to restrictions by WhatsApp editing is not support yet.
  - name: "WA Phone Number insights"
    description: |
      The WA Phone Number insights allows you to get information about the status of a phone number.

      It also provides *read* access to the templates usable by the phone number.
x-tagGroups:
  - name: Messaging
    tags:
      - "Send messages"
      - "Receive messages"
      - "Notifications"
  - name: General
    tags:
      - "Applications"
  - name: WhatsApp
    tags:
      - "WA Account management"
      - "WA Template management"
      - "WA Phone Number insights"
      - "WA Group management"
      - "WA Settings management"
paths:
  /messages:
    post:
      operationId: sendMessage
      summary: Send a message
      tags:
        - "Send messages"
      description: Send chat messages via this path.
      requestBody:
        description: The message you would like to send
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageRequest'
      responses:
        202:
          description: The message is accepted by our system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'

        400:
          $ref: '#/components/responses/BadRequest'
        403:
          $ref: '#/components/responses/Forbidden'
        default:
          $ref: '#/components/responses/Default'
  /messages/{message-id}:
    get:
      operationId: retrieveMessage
      summary: Retrieve the message
      tags:
        - "Send messages"
      description: |

        Returns back a message previously send by you.

        **Please note** After a final status notification (delivered, read or failed) the message
        is only available for the next 48 hours. After this period we delete the message in our system.
      parameters:
        - $ref: '#/components/parameters/MessageId'
      responses:
        200:
          description: The message id requested exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoredMessage'
        404:
          $ref: '#/components/responses/MessageIdUnknown'
        default:
          $ref: '#/components/responses/Default'
  /messages/{message-id}/history:
    get:
      operationId: getMessageHistory
      summary: View message history
      tags:
        - "Send messages"
      description: |
        Get the history of the message.

        This will give you detailed information about the delivery flow of the message.
      parameters:
        - $ref: '#/components/parameters/MessageId'
      responses:
        200:
          description: The history of the message id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageHistory'
        404:
          $ref: '#/components/responses/MessageIdUnknown'
        default:
          $ref: '#/components/responses/Default'
  /media/{media-id}:
    parameters:
      - $ref: '#/components/parameters/MediaId'
    get:
      operationId: downloadMedia
      summary: Download received media
      tags:
        - "Receive messages"
      description: Retrieve the media associated with the id
      responses:
        200:
          description: The media associated with the id requested exists.
          content:
            'audio/*':
              schema:
                type: string
                format: binary
            'application/*':
              schema:
                type: string
                format: binary
            'text/*':
              schema:
                type: string
                format: binary
            'video/*':
              schema:
                type: string
                format: binary
        404:
          description: The media associated with the id does not exists in our system
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                status: 404
        default:
          $ref: '#/components/responses/Default'
  /channels/whatsapp/messages/{message-id}:
    parameters:
      - $ref: '#/components/parameters/MoMessageId'
    put:
      operationId: markWhatsAppMessageAsRead
      summary: Mark whatsapp message as read
      description: Marks a previously received whatsapp message as read
      tags:
        - "Receive messages"
      requestBody:
        description: The status change to execute
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WhatsAppMessageStatusUpdate'
      responses:
        200:
          description: Message was successfully marked as read
        404:
          $ref: '#/components/responses/MoMessageNotFound'
        default:
          $ref: '#/components/responses/Default'
  /messages/{message-id}/status:
    get:
      operationId: checkMessageStatus
      summary: Check message status
      tags:
        - "Notifications"
      description: Check status of the message
      parameters:
        - $ref: '#/components/parameters/MessageId'
      responses:
        200:
          description: The message id requested exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageStatus'
        404:
          $ref: '#/components/responses/MessageIdUnknown'
        default:
          $ref: '#/components/responses/Default'
  /channels/whatsapp/accounts:
    get:
      parameters:
        - $ref: '#/components/parameters/PhoneNumberQuery'
      operationId: listAllWhatsAppAccounts
      summary: List WhatsApp accounts
      tags:
        - "WA Account management"
      description: |
        Lists all WhatsApp accounts managed by this access credentials.

        If the phone number query parameter is set, only the phone numbers account is listed
      responses:
        200:
          description: WhatsApp accounts managed by this access credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WhatsAppAccounts'
          headers:
            x-total-pages:
              description: how many pages are available
              schema:
                type: integer
            x-total-items:
              description: how many items are available in total
              schema:
                type: integer
            x-page-size:
              description: maximum number of items per page
              schema:
                type: integer
            x-current-page:
              description: current page
              schema:
                type: integer
            Link:
              description: Links describing pagination
              schema:
                properties:
                  rel:
                    $ref: '#/components/schemas/PaginationLinkRelation'
        default:
          $ref: '#/components/responses/Default'
  /channels/whatsapp/accounts/{whatsapp-account-id}:
    parameters:
      - $ref: '#/components/parameters/WhatsAppAccountId'
    get:
      operationId: getWhatsAppAccount
      summary: Get details of an account
      tags:
        - "WA Account management"
      description: Get WhatsApp account
      responses:
        200:
          description: WhatsApp account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WhatsAppAccount'
        404:
          $ref: '#/components/responses/WhatsAppAccountUnknown'
        default:
          $ref: '#/components/responses/Default'
  /channels/whatsapp/accounts/{whatsapp-account-id}/phone-numbers:
    parameters:
      - $ref: '#/components/parameters/WhatsAppAccountId'
    get:
      operationId: listPhoneNumbersOfWhatsAppAccount
      summary: List accounts phone numbers
      tags:
        - "WA Account management"
      description: List all phone numbers of a WhatsApp account
      responses:
        200:
          description: Phone numbers of a WhatsApp account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WhatsAppPhoneNumbers'
          headers:
            x-total-pages:
              description: how many pages are available
              schema:
                type: integer
            x-total-items:
              description: how many items are available in total
              schema:
                type: integer
            x-page-size:
              description: maximum number of items per page
              schema:
                type: integer
            x-current-page:
              description: current page
              schema:
                type: integer
            Link:
              description: Links describing pagination
              schema:
                properties:
                  rel:
                    $ref: '#/components/schemas/PaginationLinkRelation'
        404:
          $ref: '#/components/responses/WhatsAppAccountUnknown'
        default:
          $ref: '#/components/responses/Default'
  /channels/whatsapp/accounts/{whatsapp-account-id}/templates:
    parameters:
      - $ref: '#/components/parameters/WhatsAppAccountId'
    get:
      operationId: listTemplatesOfWhatsAppAccount
      summary: List accounts templates
      tags:
        - "WA Template management"
        - "WA Account management"
      description: List all templates of a WhatsApp account
      responses:
        200:
          description: Templates of a WhatsApp account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WhatsAppTemplates'
          headers:
            x-total-pages:
              description: how many pages are available
              schema:
                type: integer
            x-total-items:
              description: how many items are available in total
              schema:
                type: integer
            x-page-size:
              description: maximum number of items per page
              schema:
                type: integer
            x-current-page:
              description: current page
              schema:
                type: integer
            Link:
              description: Links describing pagination
              schema:
                properties:
                  rel:
                    $ref: '#/components/schemas/PaginationLinkRelation'
        404:
          $ref: '#/components/responses/WhatsAppAccountUnknown'
        default:
          $ref: '#/components/responses/Default'
    post:
      operationId: waSubmitTemplateForReview
      summary: Submit a template for review
      description: Creates a new template that is submitted for review
      tags:
        - "WA Template management"
      requestBody:
        description: |
          The template for review by Facebook
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WhatsAppTemplateRequest'
      responses:
        201:
          $ref: '#/components/responses/ResourceCreated'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/WhatsAppAccountUnknown'
        default:
          $ref: '#/components/responses/Default'
  /channels/whatsapp/accounts/{whatsapp-account-id}/templates/{template-id}:
    parameters:
      - $ref: '#/components/parameters/WhatsAppAccountId'
      - $ref: '#/components/parameters/TemplateId'
    get:
      operationId: waGetTemplate
      summary: Get details of a template
      description: Get details of a template
      tags:
        - "WA Template management"
      responses:
        200:
          description: Specified template of the account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WhatsAppTemplateResponse'
        404:
          $ref: '#/components/responses/WhatsAppAccountUnknown'
        default:
          $ref: '#/components/responses/Default'
    delete:
      operationId: waDeleteTemplate
      summary: Delete a template
      description: |
        Deletes the template.

        After deleting the template a 30 days grace period is starting.
        This is indicated by the `expiresAt` property of the localizations
      tags:
        - "WA Template management"
      responses:
        204:
          description: Deletion of the template is pendind now
        404:
          $ref: '#/components/responses/WhatsAppAccountUnknown'
        default:
          $ref: '#/components/responses/Default'
  /channels/whatsapp/accounts/{whatsapp-account-id}/templates/{template-id}/localizations:
    parameters:
      - $ref: '#/components/parameters/WhatsAppAccountId'
      - $ref: '#/components/parameters/TemplateId'
    get:
      operationId: waListLocalizations
      summary: List localizations of a template
      description: List localizations of a template
      tags:
        - "WA Template management"
      responses:
        200:
          description: Localizations of a template.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocalizationResponse'
                minItems: 1
        404:
          $ref: '#/components/responses/WhatsAppAccountUnknown'
        default:
          $ref: '#/components/responses/Default'
    post:
      summary: Add a localization
      operationId: waTemplateAddLocalization
      description: Adds a localizations to the template. Will be separately reviewed by Facebook
      tags:
        - "WA Template management"
      requestBody:
        description: |
          The localization for review @ facebook
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocalizationRequest'
      responses:
        201:
          $ref: '#/components/responses/ResourceCreated'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/WhatsAppAccountUnknown'
        default:
          $ref: '#/components/responses/Default'
  /channels/whatsapp/phone-numbers:
    get:
      tags:
        - "WA Phone Number insights"
      operationId: listAllWhatsAppPhoneNumbers
      summary: Lists phone numbers
      description: Lists all phone numbers accessible for the given credentials
      responses:
        200:
          description: Phone numbers assigned to the account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WhatsAppPhoneNumbers'
          headers:
            x-total-pages:
              description: how many pages are available
              schema:
                type: integer
            x-total-items:
              description: how many items are available in total
              schema:
                type: integer
            x-page-size:
              description: maximum number of items per page
              schema:
                type: integer
            x-current-page:
              description: current page
              schema:
                type: integer
            Link:
              description: Links describing pagination
              schema:
                properties:
                  rel:
                    $ref: '#/components/schemas/PaginationLinkRelation'
        default:
          $ref: '#/components/responses/Default'
  /channels/whatsapp/phone-numbers/{phone-number}:
    parameters:
      - $ref: '#/components/parameters/PhoneNumber'
    get:
      operationId: getWhatsAppPhoneNumber
      summary: Get details of a phone number
      tags:
        - "WA Phone Number insights"
      description: Retrieves information about the phone number

      responses:
        200:
          description: Information about the phone number
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WhatsAppPhoneNumber'
        404:
          $ref: '#/components/responses/PhoneNumberUnknown'
        default:
          $ref: '#/components/responses/Default'
  /channels/whatsapp/phone-numbers/{phone-number}/templates:
    parameters:
      - $ref: '#/components/parameters/PhoneNumber'
    get:
      operationId: getAvailableWhatsAppTemplates
      summary: List templates available to a phone number
      tags:
        - "WA Phone Number insights"
      description: Lists all available templates for a phone number
      responses:
        200:
          description: Available templates for a phone number
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WhatsAppTemplates'
          headers:
            x-total-pages:
              description: how many pages are available
              schema:
                type: integer
            x-total-items:
              description: how many items are available in total
              schema:
                type: integer
            x-page-size:
              description: maximum number of items per page
              schema:
                type: integer
            x-current-page:
              description: current page
              schema:
                type: integer
            Link:
              description: Links describing pagination.
              schema:
                properties:
                  rel:
                    $ref: '#/components/schemas/PaginationLinkRelation'
        404:
          $ref: '#/components/responses/PhoneNumberUnknown'
        default:
          $ref: '#/components/responses/Default'
  /channels/whatsapp/phone-numbers/{phone-number}/groups:
    parameters:
      - $ref: '#/components/parameters/PhoneNumber'
    get:
      operationId: getAllWhatsAppGroups
      summary: List groups
      description: List all groups the phone number is member of
      tags:
        - "WA Group management"
      responses:
        200:
          description: List of group ids. Can be empty if no group exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WhatsAppGroups'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/PhoneNumberUnknown'
        default:
          $ref: '#/components/responses/Default'
    post:
      operationId: createNewWhatsAppGroup
      summary: Create a new group
      description: Creates a new group with the given subject
      tags:
        - "WA Group management"
      requestBody:
        description: Information in order to create the group
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WhatsAppGroupCreationRequest'
      responses:
        200:
          description: Group created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WhatsAppGroupCreationResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/PhoneNumberUnknown'
        default:
          $ref: '#/components/responses/Default'
  /channels/whatsapp/phone-numbers/{phone-number}/groups/{group-id}:
    parameters:
      - $ref: '#/components/parameters/PhoneNumber'
      - $ref: '#/components/parameters/GroupId'
    get:
      operationId: getWhatsappGroupInformation
      summary: Get details about a group
      description: Returns information about the group specified by the group id
      tags:
        - "WA Group management"
      responses:
        200:
          description: Information about the group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WhatsAppGroupDetails'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/PhoneNumberOrGroupIdUnknown'
        default:
          $ref: '#/components/responses/Default'
  /channels/whatsapp/phone-numbers/{phone-number}/groups/{group-id}/participants:
    parameters:
      - $ref: '#/components/parameters/PhoneNumber'
      - $ref: '#/components/parameters/GroupId'
    get:
      operationId: getGroupParticipants
      summary: Get group participants
      description: Returns current participants of a group
      tags:
        - "WA Group management"
      responses:
        200:
          description: List of participants, can be empty
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WhatsAppGroupParticipants'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/PhoneNumberOrGroupIdUnknown'
        default:
          $ref: '#/components/responses/Default'
    delete:
      operationId: removeParticipantsFromGroup
      summary: Remove participants from group
      description: Removes all specified participants from the group.
      requestBody:
        required: true
        description: List of participants to be removed
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WhatsAppGroupParticipants'
      tags:
        - "WA Group management"
      responses:
        200:
          description: Participants removed from group
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/PhoneNumberOrGroupIdUnknown'
        default:
          $ref: '#/components/responses/Default'
  /channels/whatsapp/phone-numbers/{phone-number}/groups/{group-id}/participants/self:
    parameters:
      - $ref: '#/components/parameters/PhoneNumber'
      - $ref: '#/components/parameters/GroupId'
    delete:
      operationId: removeSelfFromGroup
      summary: Remove yourself from the group
      description: |
        Removes the whatsapp account from it's own group.

        **Note**: The account can **not** rejoin the group afterwards
      tags:
        - "WA Group management"
      responses:
        200:
          description: Participants removed from group
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/PhoneNumberOrGroupIdUnknown'
        default:
          $ref: '#/components/responses/Default'
  /channels/whatsapp/phone-numbers/{phone-number}/groups/{group-id}/admins:
    parameters:
      - $ref: '#/components/parameters/PhoneNumber'
      - $ref: '#/components/parameters/GroupId'
    get:
      operationId: getGroupAdmins
      summary: Get group admins
      description: Returns current admins of a group
      tags:
        - "WA Group management"
      responses:
        200:
          description: List of admins
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WhatsAppGroupParticipants'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/PhoneNumberOrGroupIdUnknown'
        default:
          $ref: '#/components/responses/Default'
  /channels/whatsapp/phone-numbers/{phone-number}/groups/{group-id}/admins/{whats-app-id}:
    parameters:
      - $ref: '#/components/parameters/PhoneNumber'
      - $ref: '#/components/parameters/GroupId'
      - $ref: '#/components/parameters/WhatsAppId'
    put:
      summary: Promote a participant
      description: |
        Promotes the participant identified by the id to a group admin.

        **Note** : This operation enables the user to manage the group participants.
      operationId: promoteToGroupAdmin
      tags:
        - "WA Group management"
      responses:
        200:
          description: User was successfully promoted.
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/PhoneNumberOrGroupIdUnknown'
        default:
          $ref: '#/components/responses/Default'
    delete:
      operationId: demoteAsGroupAdmin
      summary: Demote the admin
      description: |
        Demotes the admin identified by the id to a participant.
      tags:
        - "WA Group management"
      responses:
        200:
          description: Admin was successfully demoted to a participant.
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/PhoneNumberOrGroupIdUnknown'
        default:
          $ref: '#/components/responses/Default'
  /channels/whatsapp/phone-numbers/{phone-number}/groups/{group-id}/settings/icon:
    parameters:
      - $ref: '#/components/parameters/PhoneNumber'
      - $ref: '#/components/parameters/GroupId'
    get:
      summary: Get the group icon
      description: Returns the current icon for the given group
      tags:
        - "WA Group management"
      operationId: getWhatsAppGroupIcon
      responses:
        200:
          description: The current icon
          content:
            image/png:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          description: The phone number, group id or icon does not exists
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        default:
          $ref: '#/components/responses/Default'
    put:
      summary: Update the group icon
      description: |
        Updates the group icon for the given group.

        The icon must have a minimal edge size of 192 pixel and must not exceed 5 MB in size
      tags:
        - "WA Group management"
      operationId: updateWhatsappGroupIcon
      requestBody:
        required: true
        description: Image that should be used as a group icon
        content:
          image/png:
            schema:
              type: string
              format: binary
          image/jpeg:
            schema:
              type: string
              format: binary
      responses:
        202:
          description: Image successfully updated
        400:
          $ref: '#/components/responses/BadRequest'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/PhoneNumberOrGroupIdUnknown'
        default:
          $ref: '#/components/responses/Default'
  /channels/whatsapp/phone-numbers/{phone-number}/groups/{group-id}/settings/profile:
    parameters:
      - $ref: '#/components/parameters/PhoneNumber'
      - $ref: '#/components/parameters/GroupId'
    get:
      summary: Get the group profile
      description: Retrieve the actual profile for the given group
      tags:
        - "WA Group management"
      operationId: getWhatsAppGroupProfile
      responses:
        200:
          description: The current profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WhatsAppGroupProfile'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/PhoneNumberOrGroupIdUnknown'
        default:
          $ref: '#/components/responses/Default'
    put:
      summary: Update the group profile
      description: Update the actual profile for the given group
      tags:
        - "WA Group management"
      operationId: updateWhatsAppGroupProfile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WhatsAppGroupProfile'
      responses:
        202:
          description: Profile successfully updated
        400:
          $ref: '#/components/responses/BadRequest'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/PhoneNumberOrGroupIdUnknown'
        default:
          $ref: '#/components/responses/Default'
  /channels/whatsapp/phone-numbers/{phone-number}/groups/{group-id}/invites/link:
    parameters:
      - $ref: '#/components/parameters/PhoneNumber'
      - $ref: '#/components/parameters/GroupId'
    put:
      summary: Create an invite link
      description: Creates an invite link if necessary
      tags:
        - "WA Group management"
      operationId: createWhatsAppGroupInviteLink
      responses:
        200:
          description: Invite link created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WhatsAppGroupInviteLink'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/PhoneNumberOrGroupIdUnknown'
        default:
          $ref: '#/components/responses/Default'
    get:
      summary: Get the invite link
      description: Get the current active invite link for the given group
      tags:
        - "WA Group management"
      operationId: getWhatsAppGroupInviteLink
      responses:
        200:
          description: The current invite link
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WhatsAppGroupInviteLink'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/PhoneNumberOrGroupIdUnknown'
        default:
          $ref: '#/components/responses/Default'
    delete:
      summary: Delete the current invite link
      description: This operation invalidates the previously generated invite link
      tags:
        - "WA Group management"
      operationId: deleteInviteLink
      responses:
        200:
          description: The current invite link was deleted
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/PhoneNumberOrGroupIdUnknown'
        default:
          $ref: '#/components/responses/Default'
  /channels/whatsapp/phone-numbers/{phone-number}/settings/profile:
    parameters:
      - $ref: '#/components/parameters/PhoneNumber'
    get:
      operationId: getCurrentWAProfile
      summary: Get the current profile
      description: Get the current profile settings
      tags:
        - "WA Settings management"
      responses:
        200:
          description: The current profile settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WhatsAppProfile'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/PhoneNumberUnknown'
        default:
          $ref: '#/components/responses/Default'
    patch:
      operationId: updateCurrentWAProfile
      summary: Update the profile
      description: |
        Updates the WhatsApp client profile.

        Supports also selective updates.

        Removal of an information is done by setting its value to an empty
        string.
      tags:
        - "WA Settings management"
      requestBody:
        description: Information in order to create the group
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WhatsAppProfile'
      responses:
        204:
          description: Profile updated
        403:
          $ref: '#/components/responses/Forbidden'
        400:
          $ref: '#/components/responses/WhatsAppProfileUpdateFailed'
        404:
          $ref: '#/components/responses/PhoneNumberUnknown'
        default:
          $ref: '#/components/responses/Default'
  /channels/whatsapp/phone-numbers/{phone-number}/settings/logo:
    parameters:
      - $ref: '#/components/parameters/PhoneNumber'
      - $ref: '#/components/parameters/WhatsAppProfileLogoFormat'
    get:
      operationId: getCurrentWALogo
      summary: Get the logo
      description: Returns the current logo
      tags:
        - "WA Settings management"
      responses:
        200:
          description: Current logo
          content:
            image/png:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
            application/json:
              schema:
                $ref: '#/components/schemas/WhatsAppProfileLogoLink'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/PhoneNumberUnknown'
        default:
          $ref: '#/components/responses/Default'
    put:
      operationId: updateCurrentWALogo
      summary: Update the logo
      description: |
        Updates the logo

        The logo must have a minimal edge size of 500 pixel and must not exceed 5 MB in size.

        Recommended size is 640x640 pixel
      tags:
        - "WA Settings management"
      requestBody:
        required: true
        description: Image that should be used as a profile logo
        content:
          image/png:
            schema:
              type: string
              format: binary
          image/jpeg:
            schema:
              type: string
              format: binary
      responses:
        204:
          description: Logo successfully updated
        400:
          $ref: '#/components/responses/BadRequest'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/PhoneNumberUnknown'
        default:
          $ref: '#/components/responses/Default'
  /applications:
    get:
      tags:
        - "Applications"
      summary: List all applications
      operationId: listApplications
      description: Lists all applications configured for the APIKey
      responses:
        200:
          description: List of applications. Will never be empty
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationList'
  /applications/default:
    get:
      tags:
        - "Applications"
      summary: Get default application
      operationId: getDefaultApplication
      description: Returns default application configured for the APIKey
      responses:
        200:
          description: Current definition of the default application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultApplicationResponse'
    patch:
      tags:
        - "Applications"
      summary: Update default application
      operationId: updateDefaultApplication
      description: |
        The operation will save the specified webhooks. Makes merge(replacement)
        operation on existing event types for newly defined webhooks.
        Any other event type of the existing webhooks will remain associated
        with the previous callback URL.

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DefaultApplicationUpdate"
      responses:
        204:
          description: Webhooks have been successfully saved.
        400:
          $ref: '#/components/responses/BadRequest'
        default:
          $ref: '#/components/responses/Default'
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: apikey
      description: |
        The API key used for this operation. We check as well that the API key has the phone number
        (either on sending messages or interacting with other phone number based features) assigned.
  responses:
    Default:
      description: Default response in case of any other error. Please check the error object for details
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
    MessageIdUnknown:
      description: The message id does not exists in our system
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
          example:
            status: 404
    WhatsAppProfileUpdateFailed:
      description: Updating the whatsapp profile failed. In case a partial update failed please retrieve the current profile, change the required information and retry with the whole profile.
      content:
        application/problem+json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Problem'
            properties:
              code:
                type: string
                description: error code
          example:
            status: 400
            title: Updating profile failed
            code: 1009
    WhatsAppAccountUnknown:
      description: The WhatsApp account does not exists
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
          example:
            status: 404
            title: WhatsApp account unknown
    PhoneNumberUnknown:
      description: The phone number does not exists
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
          example:
            status: 404
            title: Phone number unknown
    MoMessageNotFound:
      description: No MO Message found for the given id
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
          example:
            status: 404
            title: Not Found
    PhoneNumberOrGroupIdUnknown:
      description: The phone number or group id does not exists
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
          example:
            status: 404
            title: Group id unknown
    BadRequest:
      description: The request does not match our expectations. Please check the Problems object for details
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
          example:
            status: 400
            violations: [
            {
              field: validate.request.whatsapp.contentType,
              message: must not be empty
            }
            ]
            title: Constraint Violation
    Forbidden:
      description: You attempting to use a number that is not assigned to your account
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
          example:
            type: https://httpstatuses.com/403
            title: Forbidden
            status: 403
    ResourceCreated:
      description: The requested resource was created
      headers:
        Location:
          schema:
            type: string
          description: Location URI of the newly created resource
  parameters:
    GroupId:
      name: group-id
      in: path
      required: true
      description: Group id
      schema:
        type: string
      example: 4923147790717-1564131378
    MediaId:
      name: media-id
      in: path
      required: true
      description: The id of the media to be downloaded
      schema:
        type: string
        format: uuid
        example: 77185196-664a-43ec-b14a-fe97036c697f
    MessageId:
      name: message-id
      in: path
      required: true
      description: The id of the message
      schema:
        type: string
        format: uuid
        example: 77185196-664a-43ec-b14a-fe97036c697f
    MoMessageId:
      name: message-id
      in: path
      required: true
      description: The id of the mo message
      schema:
        type: string
        example: ABEGSRcolTdUAhCDTh0Viu2YwDb751d6V33t
    PhoneNumber:
      name: phone-number
      in: path
      required: true
      description: Phone number used for WhatsApp messaging.
      schema:
        type: integer
        minLength: 4
        maxLength: 15
      example: 4923147790717
    PhoneNumberQuery:
      name: phone-number
      in: query
      description: Phone number used for WhatsApp messaging.
      schema:
        type: integer
        minLength: 4
        maxLength: 15
      example: 4923147790717
    WhatsAppId:
      name: whats-app-id
      in: path
      required: true
      description: Whatsapp id of a user
      schema:
        type: string
        example: 4923147790717
    WhatsAppProfileLogoFormat:
      name: format
      in: query
      description: The format the icon should be returned
      schema:
        type: string
        enum:
          - link
          - binary
    WhatsAppAccountId:
      name: whatsapp-account-id
      in: path
      required: true
      description: WhatsApp account id
      schema:
        type: string
      example: 132923147790717
    TemplateId:
      name: template-id
      in: path
      required: true
      description: Referenced template
      schema:
        type: string
        pattern: "[a-z_0-9]+"
      example: welcome_message
  schemas:
    MessageRequest:
      type: object
      description: The message you would like to send
      required:
        - to
        - channels
      properties:
        to:
          type: string
          description: |
            The receipient of the message.

            Could be one of
              - phone number in international format. In this it should follow the guidelines of [E.164](https://en.wikipedia.org/wiki/E.164) but leading 00 is as well accepted
              - group id create via the WA Group management
          example: "+1233423454"
        channels:
          type: array
          description: Channels selected for delivery.
          example:
            - sms
            - whatsapp
          items:
            type: string
            enum:
              - sms
              - whatsapp
              - tyntecEcho
        overrides:
          $ref: '#/components/schemas/MessageRequestOverrides'
        context:
          $ref: '#/components/schemas/MessageRequestContext'
        defaultContent:
          $ref: '#/components/schemas/DefaultContent'
        sms:
          $ref: '#/components/schemas/SMSRequest'
        whatsapp:
          $ref: '#/components/schemas/WhatsappMessageRequest'
        tyntecEcho:
          description: |
            This channel can be used for integration purposes without sending any message to an actual device.
            A detailed description is provided on the object definition.
          allOf:
            - $ref: '#/components/schemas/TyntecEchoRequest'
      example:
        to: "+123234234"
        channels: ["whatsapp"]
        whatsapp:
          from: "545345345"
          contentType: text
          text: A simple text message
    StoredMessage:
      type: object
      required:
        - to
        - channels
      properties:
        to:
          type: string
          pattern: '^(00|\+)\d{1,15}$'
          description: |
            The receipient phone number in international format. It should follow the guidelines
            of [E.164](https://en.wikipedia.org/wiki/E.164) but leading 00 is as well accepted
          example: '+1233423454'
        channels:
          type: array
          description: Channels selected for delivery.
          example:
            - sms
            - whatsapp
          items:
            type: string
            enum:
              - sms
              - whatsapp
              - tyntecEcho
        sms:
          $ref: '#/components/schemas/SMSRequest'
        whatsapp:
          $ref: '#/components/schemas/WhatsappMessageRequest'
        tyntecEcho:
          description: |
            This channel can be used for integration purposes without sending any message to an actual device.
            A detailed description is provided on the object definition.
          allOf:
            - $ref: '#/components/schemas/TyntecEchoRequest'
      example:
        messageId: 77185196-664a-43ec-b14a-fe97036c697f
        to: "+123234234"
        channels: ["whatsapp"]
        whatsapp:
          from: "545345345"
          contentType: text
          text: A simple text message
    DefaultContent:
      deprecated: true
      description: |
        The default content that is applied to all channels.

        Each component might be overrwritten or extended by channel specific settings.

        This can be used to specify the text for a message once, but the _from_ per used channel.

        **Note** The default content will be discontinued in a future release, please migrate to the channel
        specific properties _whatsapp_, _sms_ and/or _tyntecEcho_
      type: object
      required:
        - contentType
        - from
      properties:
        from:
          type: string
          description: The sender of the message
          example: "1233423454"
        contentType:
          type: string
          enum:
            - template
            - text
            - url
            - media
          description: What kind of payload is used
          example: template
        text:
          type: string
          description: The text to be send
          example: Thanks for contacting our support. We will get back to you in 5 minutes.
        url:
          type: string
          description: the URL you would like to send. Must be a valid http(s) URL
          example: https://www.tyntec.com
        media:
          $ref: '#/components/schemas/Media'
        template:
          $ref: '#/components/schemas/Template'
      example:
        from: "1233423454"
        contentType: template
        template:
          templateId: welcome_message
          language:
            policy: deterministic
            code: en
          parameters:
            - default: Mr.
            - default: Doe
    SMSRequest:
      type: object
      description: |
        Normal SMS to be send.

        If Content is used as well this will override the specification made there.

        In case URL type is specified the recipient will receive the plain URL as SMS.
      required:
        - contentType
      properties:
        contentType:
          type: string
          enum:
            - text
            - url
          description: What kind of payload should be sent
          example: text
        from:
          type: string
          description: The sender of the message
          example: "1233423454"
        text:
          type: string
          maxLength: 3000
          description: The message to be send
          example: Thanks for contacting our support. We will get back to you in 5 minutes.
        url:
          type: string
          deprecated: true
          description: |
            The URL you would like to send. Must be a valid http(s) URL.

            **Note** This property will be removed in a future release. Please use ``text`` instead.
          example: https://www.tyntec.com
      example:
        contentType: text
        from: "1233423454"
        text: Thanks for contacting our support. We will get back to you in 5 minutes.
    WhatsappMessageRequest:
      description: |
        Whatsapp message to be send.

        This will override defaults from DefaultContent
      type: object
      required:
        - contentType
        - from
      properties:
        from:
          type: string
          description: The phone number of the sending whatsapp account
          example: "1233423454"
        contentType:
          type: string
          enum:
            - template
            - text
            - url
            - media
            - location
            - contacts
          description: What kind of payload is used
          example: template
        text:
          type: string
          maxLength: 4096
          description: The text to be send
          example: Thanks for contacting our support. We will get back to you in 5 minutes.
        url:
          type: string
          deprecated: true
          description: |
            The URL you would like to send. Must be a valid http(s) URL.

            **Note** This property will be removed in a future release.
            Please switch to ``text`` with ``urlPreviewDisplayed`` set to ``true``.
          example: https://www.tyntec.com
        media:
          $ref: '#/components/schemas/Media'
        template:
          $ref: '#/components/schemas/Template'
        location:
          $ref: '#/components/schemas/Location'
        urlPreviewDisplayed:
          type: boolean
          default: false
          description: Should a preview of the url be rendered. This will only have an effect on text messages.
          example: true
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
      example:
        from: "1233423454"
        contentType: media
        media:
          type: audio
          url: 'https://www.tyntec.com/themes/custom/tyntec/image/tyntec-logo-color.svg'
          caption: Tyntec Logo
    TyntecEchoRequest:
      type: object
      description: |
        This channel can be used for integration purposes without sending any message to an actual device.

        It has two modes

          - only send the delivered dlr back
          - send additionally a message back

        The messages send back follow these rules :

          - media, text and url are send back as they are
          - templates are formatted as
            `TemplateId[templateId] LanguagePolicy[language.policy] LanguageCode[language.code] Parameter<N>[parameters[N]]`
          - from and to switch positions
          - messageId will be the same as for the request

      required:
        - contentType
        - from
      properties:
        from:
          type: string
          description: The sending tyntecEcho account
          example: "1233423454"
        contentType:
          type: string
          enum:
            - template
            - text
            - url
            - media
          description: What kind of payload is used
          example: template
        text:
          type: string
          maxLength: 100
          description: The text to be send
          example: Thanks for contacting our support. We will get back to you in 5 minutes.
        url:
          type: string
          description: the URL you would like to send. Must be a valid http(s) URL
          example: https://www.tyntec.com
        media:
          $ref: '#/components/schemas/Media'
        template:
          $ref: '#/components/schemas/Template'
        replyBack:
          type: boolean
          description: Should the channel reply back the send message
          default: false
      example:
        from: "1233423454"
        contentType: url
        url: 'https://www.tyntec.com'
        replyBack: false
    Media:
      type: object
      oneOf:
        - $ref: '#/components/schemas/AudioMedia'
        - $ref: '#/components/schemas/ImageMedia'
        - $ref: '#/components/schemas/DocumentMedia'
        - $ref: '#/components/schemas/VideoMedia'
    AudioMedia:
      type: object
      description: Audio file to be send
      required:
        - type
        - url
      properties:
        type:
          type: string
          description: What kind of media should be send
          enum:
            - audio
          example: audio
        url:
          type: string
          description: the url of the location where the audio file is stored
          example: https://dl.espressif.com/dl/audio/ff-16b-2c-44100hz.mp4
      example:
        type: audio
        url: https://dl.espressif.com/dl/audio/ff-16b-2c-44100hz.mp4
    ImageMedia:
      type: object
      description: Image to be send
      required:
        - type
        - url
      properties:
        type:
          type: string
          description: What kind of media should be send. Can only be png or jpeg
          enum:
            - image
          example: image
        url:
          type: string
          description: the url of the location where the image is stored
          example: https://www.tyntec.com/themes/custom/tyntec/image/tyntec-logo-color.png
        caption:
          type: string
          description: additional caption for the image. It is shown on the uploaded image when the channel supports this
          example: Tyntec Logo
      example:
        type: image
        url: https://www.tyntec.com/themes/custom/tyntec/image/tyntec-logo-color.png
    DocumentMedia:
      type: object
      description: Document to be send
      required:
        - type
        - url
      properties:
        type:
          type: string
          description: What kind of media should be send
          enum:
            - document
          example: document
        url:
          type: string
          description: the url of the location where the document is stored
          example: https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf
        caption:
          type: string
          description: Additional caption for the document. It is shown on the uploaded document when the channel supports this
          example: Tyntec Pricelist
        filename:
          type: string
          description: File name of the document to be shown. It is shown on the uploaded document when the channel supports this
          example: tyntec_pricelist.pdf
      example:
        type: document
        url: https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf
        caption: Tyntec Pricelist
        filename: tyntec_pricelist.pdf
    VideoMedia:
      type: object
      description: Video file to be send
      required:
        - type
        - url
      properties:
        type:
          type: string
          description: What kind of media should be send
          enum:
            - video
          example: video
        url:
          type: string
          description: the url of the location where the video is stored
          example: http://techslides.com/demos/sample-videos/small.mp4
        caption:
          type: string
          description: Additional caption for the video. It is shown on the uploaded video when the channel supports this
          example: Tyntec Party
      example:
        type: video
        url: http://techslides.com/demos/sample-videos/small.mp4
        caption: Tyntec Party
    Template:
      type: object
      description: The message template to be send.
      required:
        - templateId
        - language
      properties:
        templateId:
          type: string
          description: the identifier of the template that should be used
          example: welcome_message
        language:
          $ref: '#/components/schemas/Language'
        components:
          description: |
            Parameter for replacement in the template.

            Header and body components can only be used once.
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/HeaderComponent'
              - $ref: '#/components/schemas/BodyComponent'
        parameters:
          description: |
            Parameter for replacement in the template.

            **NOTE** : This parameter is deprecated by version 2.7 and will be removed in the next major release.
            Instead use components.
          deprecated: true
          type: array
          items:
            $ref: '#/components/schemas/TemplateParameter'
          example:
           - default: Mr.
           - default: Doe
      example:
        templateId: weclome_message
        language:
          policy: deterministic
          code: en
        components:
          - type: header
            parameters:
              - type: media
                media:
                  type: image
                  url: https://www.tyntec.com/themes/custom/tyntec/image/tyntec-logo-color.png
          - type: body
            parameters:
              - type: text
                text: Hi!
    Language:
      type: object
      description: Language settings for the template
      properties:
        policy:
          type: string
          description: |
            Used for multi-language template resolution.

            **Note** We got notified by WhatsApp that they will drop the fallback policy on template messages.
            As we need to stay up-to-date with the WhatsApp API, we will also drop this policy in the next month.
            Please switch to language policy _deterministic_.
          enum:
            - fallback
            - deterministic
          default: deterministic
        code:
          description: |
            The code of the language or locale to use —
            Accepts both language and language_locale formats (e.g., en and en_US).
          type: string
          example: en
    TemplateParameter:
      type: object
      deprecated: true
      description: |
        Parameter for replacement in the template.

        The value can contain any character except of :

          - newline
          - tabulator
          - more then 4 consecutive spaces.

        It can be formatted accordingly to [Formatting your messages](https://faq.whatsapp.com/en/android/26000002/?fbclid=IwAR1-VtKzKAxleQD-nnWbZpIhLtkNY6Hpjjb4echlEmcfLV2l0C5We4HnsUM).

        **NOTE** : This parameter is deprecated by version 2.7 and will be removed in the next major release.
            Instead use components.
      properties:
        default:
          type: string
          description: Variable substitution.
          example: Mr. Doe
    HeaderComponent:
      type: object
      properties:
        type:
          type: string
          default: header
          enum:
            - header
        parameters:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/TemplateMediaParameter'
              - $ref: '#/components/schemas/TextParameter'
          maxItems: 1
          minItems: 1
      example:
        type: header
        parameters:
          - type: media
            media:
              type: image
              url: https://www.tyntec.com/themes/custom/tyntec/image/tyntec-logo-color.png
    BodyComponent:
      type: object
      properties:
        type:
          type: string
          default: body
          enum:
            - body
        parameters:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/TextParameter'
          minItems: 0
      example:
        type: body
        parameters:
          - type: text
            text: Sam
          - type: text
            text: nice replacement
    TextParameter:
      type: object
      properties:
        type:
          type: string
          default: text
          enum:
            - text
        text:
          type: string
          description: |
            Text for replacement in the template.

            The value can contain any character except of :

              - newline
              - tabulator
              - more then 4 consecutive spaces.

            It can be formatted accordingly to [Formatting your messages](https://faq.whatsapp.com/en/android/26000002/?fbclid=IwAR1-VtKzKAxleQD-nnWbZpIhLtkNY6Hpjjb4echlEmcfLV2l0C5We4HnsUM).
          minLength: 1
      example:
        type: text
        text: Hi! Cool replacement
    TemplateMediaParameter:
      type: object
      properties:
        type:
          type: string
          default: media
          enum:
            - media
        media:
          oneOf:
            - $ref: '#/components/schemas/ImageMedia'
            - $ref: '#/components/schemas/TemplateDocumentMedia'
            - $ref: '#/components/schemas/TemplateVideoMedia'
      example:
        type: media
        media:
          type: image
          url: https://www.tyntec.com/themes/custom/tyntec/image/tyntec-logo-color.png
          caption: Tyntec Logo
    TemplateDocumentMedia:
      type: object
      description: Media to be send
      properties:
        type:
          type: string
          description: What kind of media should be send
          enum:
            - document
          example: image
        url:
          type: string
          description: the url of the location where the media is stored
          example: https://s1.q4cdn.com/806093406/files/doc_downloads/test.pdf
        filename:
          type: string
          description: Additional info for the filename to be displayed.
          example: Tyntec Logo
      example:
        type: document
        url: https://s1.q4cdn.com/806093406/files/doc_downloads/test.pdf
        filename: Test document
    TemplateVideoMedia:
      type: object
      description: Media to be send
      properties:
        type:
          type: string
          description: What kind of media should be send
          enum:
            - video
          example: video
        url:
          type: string
          description: the url of the location where the media is stored
          example: http://techslides.com/demos/sample-videos/small.mp4
      example:
        type: video
        url: http://techslides.com/demos/sample-videos/small.mp4
    Location:
      type: object
      description: Location received or send
      required:
        - longitude
        - latitude
      properties:
        longitude:
          type: number
          format: double
          description: Longitude part of the coordinate
          example:
            7.4954884
        latitude:
          type: integer
          format: double
          description: Latitude part of the coordinate
          example:
            51.5005765
        name:
          type: string
          maxLength: 256
          description: Optional name
          example:
            tyntec GmbH
        address:
          type: string
          maxLength: 256
          description: Optional address, will only be rendered if name is set
          example:
            tyntec GmbH, Semerteichstraße, Dortmund
    Contact:
      type: object
      description: Contact object
      properties:
        birthday:
          type: string
          description: Birthday of the contact
          example:
            2018-01-01
        addresses:
          type: array
          description: List of addresses assigned to the contact
          items:
            $ref: '#/components/schemas/Address'
        emails:
          type: array
          description: List of emails assigned to the contact
          items:
            $ref: '#/components/schemas/Email'
        ims:
          type: array
          description: List of IMS accounts assigned to the contact
          items:
            $ref: '#/components/schemas/IMS'
        name:
          $ref: '#/components/schemas/Name'
        org:
          $ref: '#/components/schemas/Organisation'
        phones:
          type: array
          description: List of phone numbers assigned to the contact
          items:
            $ref: '#/components/schemas/ContactPhone'
        urls:
          type: array
          description: List of urls assigned to the contact
          items:
            $ref: '#/components/schemas/ContactUrl'
    Address:
      type: object
      description: Address of a contact
      properties:
        city:
          type: string
          description: City name
          example: Dortmund
        country:
          type: string
          description: Full country name
          example: Germany
        countryCode:
          type: string
          description: Two-letter code abbreviation
          example: de
        state:
          type: string
          description: State abbreviation
          example: NRW
        street:
          type: string
          description: Street name and number
        type:
          type: string
          description: Type of the address
          example: WORK
        zip:
          type: string
          description: ZIP or postal code
          example: 44231
    Email:
      type: object
      description: Email of the contact
      properties:
        email:
          type: string
          description: Email address
          example: whatsapp@tyntec.com
        type:
          type: string
          description: Type of the email
          example: WORK
    IMS:
      type: object
      description: IMS of the contact
      properties:
        service:
          type: string
          description: Type of the email
          example: WhatsApp
        userId:
          type: string
          description: IMS user id
          example: 123123123
    Name:
      type: object
      description: |
        The name of a contact. Apart from the property ``formattedName`` at least one of the other must be set
      required:
        - formattedName
      properties:
        prefix:
          type: string
          description: Prefix of the contacts name
          example: Mr.
        firstName:
          type: string
          description: First name of the contact
          example: Peter
        middleName:
          type: string
          description: Middle name of the contact
          example: Michael
        lastName:
          type: string
          description: Last name of the contact
          example: Tyntec
        suffix:
          type: string
          description: Suffix of the contacts name
          example: senior
        formattedName:
          type: string
          description: Completely formatted name
          example: Mr. Peter Michael Tyntec senior
    Organisation:
      type: object
      description: Organisation associated with the contact
      properties:
        company:
          type: string
          description: Name of the contact's company
          example: tyntec GmbH
        department:
          type: string
          description: Name of the contact's department
          example: Development
        title:
          type: string
          description: Contact's business title
          example: API Guardian
    ContactPhone:
      type: object
      description: Phone entry of a contact
      properties:
        phone:
          type: string
          description: Phone number
          example: +49 231 477 90 813
        type:
          type: string
          description: Type of phone number
          example: WORK
    ContactUrl:
      type: object
      description: URL of a contact
      properties:
        url:
          type: string
          description: URL of a contact
          example: https://www.tyntec.com
        type:
          type: string
          description: Type of URL
          example: WORK
    MessageResponse:
      type: object
      required:
        - messageId
        - acceptedAt
      properties:
        messageId:
          type: string
          format: uuid
          description: Global Message Id reference
          example: 77185196-664a-43ec-b14a-fe97036c697f
        acceptedAt:
          type: string
          format: date-time
          description: Point in time when the Chat API service confirms that the message request was accepted
    APIEvent:
      type: object
      description: Basic type for events produced by the ChatAPI such as MessageStatus, InboundMessage and GroupEvent
      required:
        - event
      properties:
        event:
          $ref: '#/components/schemas/EventTypes'
        channel:
          type: string
          description: Channel which triggered the event. Can be empty in case of an internal source
          example: sms
          enum:
            - sms
            - whatsapp
            - tyntecEcho
        timestamp:
          type: string
          format: 'date-time'
          description: Point in time when the event happend
          example:
            2019-06-26T11:41:00
        from:
          type: string
          description: Who triggered this event. Usually the phonenumber or whatsapp account id
          example:
            491672634678
      example:
        event: MessageStatus::accepted
        channel: sms
        from: 491672634678
        timestamp: 2019-06-26T11:41:00
    EventTypes:
      type: string
      description: Determines which kind of event is emitted by the API
      enum:
        - MoMessage
        - MessageStatus::accepted
        - MessageStatus::channelFailed
        - MessageStatus::deleted
        - MessageStatus::delivered
        - MessageStatus::failed
        - MessageStatus::seen
        - MessageStatus::unknown
        - WhatsAppGroupEvent::userJoined
        - WhatsAppGroupEvent::userLeft
        - WhatsAppGroupEvent::userPromoted
        - WhatsAppGroupEvent::userDemoted
        - WhatsAppGroupEvent::descriptionChanged
        - WhatsAppGroupEvent::subjectChanged
        - WhatsAppGroupEvent::iconChanged
        - WhatsAppGroupEvent::iconDeleted
    MessageStatus:
      type: object
      description: |
        The current status of a message.

        It is used for messages send and received by you.

        In case you send a message the status will inform you about the delivery process.

        In the case that you receive a message from a user, the user may decide to delete the message.
        Then and only then status deleted is triggered.
      required:
        - messageId
        - event
        - status
        - timestamp
      allOf:
        - $ref: '#/components/schemas/APIEvent'
      properties:
        event:
          type: string
          description: Determines which kind of event is sent.
          enum:
            - MessageStatus::accepted
            - MessageStatus::delivered
            - MessageStatus::seen
            - MessageStatus::failed
            - MessageStatus::unknown
        messageId:
          type: string
          description: Global Message Id reference
          example: 77185196-664a-43ec-b14a-fe97036c697f
        channel:
          type: string
          description: Channel which triggered the event. Can be empty in case of an internal source
          example: sms
          enum:
            - sms
            - whatsapp
            - tyntecEcho
        deliveryChannel:
          type: string
          deprecated: true
          description:  |
            Channel which was used for delivery.

            **Note** This property will be replaced in the future by the _channel_ property from the APIEvent
          example: sms
          enum:
            - sms
            - whatsapp
            - tyntecEcho
        status:
          description: |
            Indicates the status of the message. Be aware that not all channels support all status.

            **Note** This property will be replaced by the property _event_ in a future release.
          deprecated: true
          type: string
          example: seen
          enum:
            - accepted
            - delivered
            - seen
            - failed
            - unknown
        timestamp:
          type: string
          format: 'date-time'
          description: Point in time when the event happend
          example:
            2019-06-26T11:41:28Z
        userContext:
          type: string
          description: Contextual information set on the message request
          example:
            my-message-reference
        from:
          type: string
          description: Who triggered this event. Usually the phonenumber or whatsapp account id
          example:
            491672634678
        details:
          $ref: '#/components/schemas/HistoryDetails'
      example:
        event: MessageStatus::seen
        messageId: 77185196-664a-43ec-b14a-fe97036c697f
        channel: whatsapp
        status: seen
        userContext: my-message-reference
        timestamp: 2019-06-26T11:41:28Z
        from: 491672634678
    MessageStatusChannelFailed:
      type: object
      description: |
        Indicates that a channel delivery has failed.

        This is an _intermediate_ event. It might  be followed by additional intermediate events.
        But finally the message status will reach one of the final states.
      required:
        - messageId
        - event
        - channel
        - timestamp
        - details
      allOf:
        - $ref: '#/components/schemas/APIEvent'
      properties:
        event:
          type: string
          description: Determines which kind of event is sent.
          enum:
            - MessageStatus::channelFailed
        messageId:
          type: string
          description: Global Message Id reference
          example: 77185196-664a-43ec-b14a-fe97036c697f
        channel:
          type: string
          description: Channel which triggered the event. Can be empty in case of an internal source
          example: sms
          enum:
            - sms
            - whatsapp
            - tyntecEcho
        deliveryChannel:
          type: string
          deprecated: true
          description:  |
            Channel which was used for delivery.

            **Note** This property will be replaced in the future by the _channel_ property from the APIEvent
          example: sms
          enum:
            - sms
            - whatsapp
            - tyntecEcho
        status:
          description: |
            Indicates the status of the message. Be aware that not all channels support all status.

            **Note** This property will be replaced by the property _event_ in a future release.
          deprecated: true
          type: string
          example: seen
          enum:
            - channelFailed
        timestamp:
          type: string
          format: 'date-time'
          description: Point in time when the event happend
          example:
            2019-06-26T11:41:28Z
        userContext:
          type: string
          description: Contextual information set on the message request
          example:
            my-message-reference
        details:
          $ref: '#/components/schemas/HistoryDetails'
      example:
        event: MessageStatus::channelFailed
        messageId: 77185196-664a-43ec-b14a-fe97036c697f
        channel: whatsapp
        status: channelFailed
        userContext: my-message-reference
        timestamp: 2019-06-26T11:41:28Z
        details:
          code: whatsapp::error::noValidContact
          message: No valid contact for msisdn +123234234
    MessageStatusDeletedEvent:
      type: object
      description: |
        Indicates that a previously send inbound MOMessage is deleted by the user.
      required:
        - messageId
        - event
        - status
        - channel
        - from
        - to
        - timestamp
      allOf:
        - $ref: '#/components/schemas/APIEvent'
      properties:
        event:
          type: string
          description: Determines which kind of event is sent.
          enum:
            - MessageStatus::deleted
        messageId:
          type: string
          description: Global Message Id reference
          example: 77185196-664a-43ec-b14a-fe97036c697f
        channel:
          type: string
          description: Channel which triggered the event. Can be empty in case of an internal source.
          example: sms
          enum:
            - sms
            - whatsapp
            - tyntecEcho
        deliveryChannel:
          type: string
          deprecated: true
          description:  |
            Channel which was used for delivery.

            **Note** This property will be replaced in the future by the _channel_ property from the APIEvent.
          example: sms
          enum:
            - sms
            - whatsapp
            - tyntecEcho
        status:
          description: |
            Indicates the status of the message. Be aware that not all channels support all status.

            **Note** This property will be replaced by the property _event_ in a future release.
          deprecated: true
          type: string
          example: seen
          enum:
            - deleted
        timestamp:
          type: string
          format: 'date-time'
          description: Point in time when the event happend
          example:
            2019-06-26T11:41:28Z
        userContext:
          type: string
          description: Contextual information set on the message request
          example:
            my-message-reference
        from:
          type: string
          description: Who triggered this event. Usually the phonenumber or whatsapp account id.
          example:
            491672634678
        to:
          type: string
          description: Which channel specific account id is the receiver of this event.
          example:
            4923147790813
      example:
        event: MessageStatus::deleted
        messageId: 77185196-664a-43ec-b14a-fe97036c697f
        channel: whatsapp
        status: deleted
        userContext: my-message-reference
        timestamp: 2019-06-26T11:41:28Z
        from: 491672634678
        to: 4923147790813
    MessageHistory:
      type: object
      properties:
        messageId:
          type: string
          format: uuid
          description: Global Message Id reference
          example: 77185196-664a-43ec-b14a-fe97036c697f
        userContext:
          type: string
          description: Contextual information set on the message request
          example:
            my-message-reference
        history:
          type: array
          description: Ordered list of current available events for your message
          items:
            $ref: '#/components/schemas/HistoryItem'
      example:
        messageId: 77185196-664a-43ec-b14a-fe97036c697f
        userContext: my-message-reference
        history:
          - deliveryChannel: whatsapp
            happendAt: '2019-03-13T12:57:27.048Z'
            state: accepted
    HistoryItem:
      type: object
      description: Contains information about a specific event occuring in the delivery process
      properties:
        deliveryChannel:
          type: string
          deprecated: true
          description: The channel triggering this event
          example: whatsapp
          enum:
            - sms
            - whatsapp
            - tyntecEcho
        channel:
          type: string
          description: The channel triggering this event
          example: whatsapp
          enum:
            - sms
            - whatsapp
            - tyntecEcho
        happendAt:
          type: string
          description: When did the event happen
          format: date-time
        state:
          type: string
          description: State of the message delivery
          example: accepted
          enum:
            - accepted
            - dispatched
            - dispatching_failed
            - success
            - failed
            - unknown
        details:
          $ref: '#/components/schemas/HistoryDetails'
      example:
        deliveryChannel: whatsapp
        happendAt: '2019-03-13T13:15:22Z'
        state: accepted
    HistoryDetails:
      description: Further information available for this event
      type: object
      additionalProperties: true
      properties:
        code:
          type: string
          description: Code specific to the details
          example: tyntec::error:noFurtherChannelAvailable
        message:
          type: string
          description: Textual representation of the code, containing further information
          example: No further channel after Channel[whatsapp] available
        from:
          type: string
          description: Who triggered this event. Usually the phonenumber or whatsapp account id
          example:
            491672634678
    Problem:
      type: object
      additionalProperties: true
      description: The problem object follows the RFC-7807 (https://tools.ietf.org/html/rfc7807)
      required:
        - type
        - title
        - status
        - detail
      properties:
        type:
          description: A URI reference [RFC3986] that identifies the problem type
          example: https://docs.tyntec.com/problems/DataNotParseable
          type: string
        title:
          type: string
          example: Data given was not parseable
          description: A short, human-readable summary of the problem type.
        status:
          description: The HTTP status code (RFC7231, Section 6) generated by the origin server for this occurrence of the problem.
          type: string
          example: 400
        detail:
          description: A human-readable explanation specific to this occurrence of the problem.
          type: string
          example: |
            Unexpected end-of-input: expected close marker for Object (start marker at [Source: UNKNOWN; line: -1, column: -1) at [Source: UNKNOWN; line: 1, column: 97]
    MoMessage:
      type: object
      description: |
        Message received by us and delivered to your system via a webhook provided by your system.

        MoMessages are transferred by using HTTP ```POST``` method.
      required:
        - messageId
        - event
        - channel
        - from
        - content
      properties:
        event:
          type: string
          description: Determines which kind of event is sent. Is always _MoMessage_
          enum:
            - MoMessage
        channel:
          type: string
          description: Channel which triggered the event.
          example: sms
          enum:
            - sms
            - whatsapp
            - tyntecEcho
        receivedAt:
          deprecated: true
          type: string
          format: 'date-time'
          description: Point in time when the message was received. **Note** This property will be replaced in the future by the _timestamp_ property from the APIEvent
          example:
            2019-06-26T11:41:00
        timestamp:
          type: string
          format: 'date-time'
          description: Point in time when the message was received
          example:
            2019-06-26T11:41:00
        messageId:
          type: string
          description: Message Id reference
          example: 77185196-664a-43ec-b14a-fe97036c697f
        from:
          type: string
          description: the sender of the message
          example: "49123512314"
        to:
          type: string
          description: Receiving account of the message. The format is channel specific
          example: "49123512315"
        groupId:
          type: string
          description: Group id from which the event originates from. Only present if the message was send into a group
          example:
            4923147790717-1564134658
        content:
          $ref: '#/components/schemas/MoContent'
        context:
          $ref: '#/components/schemas/MoContext'
        sms:
          $ref: '#/components/schemas/SMS'
        whatsapp:
          $ref: '#/components/schemas/Whatsapp'
      example:
        messageId: 77185196-664a-43ec-b14a-fe97036c697e
        event: MoMessage
        from: "49123512314"
        to: "49123512315"
        timestamp: 2019-06-26T11:41:00
        channel: sms
        content:
          contentType: text
          text: 'hi, thanks for your support message'
        sms:
          origin:
            mcc: string
            mnc: string
            ttId: string
          totalPrice: 0
          size: 1
          missingParts: false
          parts:
            - messageId: string
              sentDate: '2019-03-13T13:15:22Z'
              price: 0
              currency: string
              priceEffective: '2019-03-13T13:15:22Z'
              sequenceNumber: 1
    MoContent:
      type: object
      description: Content of the mobile originated message
      required:
        - contentType
      properties:
        contentType:
          type: string
          enum:
            - text
            - url
            - media
            - location
            - contacts
          description: What kind of payload is used
          example: media
        text:
          type: string
          description: The received text
          example: hi, thanks for your support message
        url:
          type: string
          description: the URL received
          example: https://www.tyntec.com
        media:
          $ref: '#/components/schemas/MoMedia'
        location:
          $ref: '#/components/schemas/Location'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
      example:
        contentType: media
        media:
          type: audio
          url: 'https://api.tyntec.com/messaging/v1/chat/media/77185196-664a-43ec-b14a-fe97036c697f'
          mediaId: 77185196-664a-43ec-b14a-fe97036c697f
    MoContext:
      type: object
      description: Contextual information of the mobile originated message
      properties:
        messageId:
          type: string
          description: The message id the MoMessage refers to. Usualy set when the sender replies to a specific message
          example: 77185196-664a-43ec-b14a-fe97036c697a
    MoMedia:
      type: object
      description: Media information
      properties:
        type:
          type: string
          description: What kind of media was received
          enum:
            - image
            - document
            - audio
            - voice
            - video
          example: audio
        url:
          type: string
          description: the url of the location where the media is stored
          example: https://api.tyntec.com/messaging/v1/chat/media/77185196-664a-43ec-b14a-fe97036c697f
        mediaId:
          type: string
          description: plain id of the media to download
          example: 77185196-664a-43ec-b14a-fe97036c697f
        caption:
          type: string
          description: caption specified by the user or the file name of the document
          example: This is an picture of my cat!
    SMS:
      type: object
      description: specifics of the sms channel
      properties:
        origin:
          $ref: '#/components/schemas/SMSOrigin'
        totalPrice:
          type: number
          description: The sum of prices for each message part listed in “contentList”.
          example: 0.1
        size:
          type: number
          description: The amount of respective concatenated SMS parts.
          minimum: 1
          maximum: 255
          example: 1
        missingParts:
          type: boolean
          description: True in case a part of an over-length was not received by the tyntec platform and the forwarded message text is incomplete.
          default: false
          example: false
        parts:
          type: array
          description: |
            tyntec merges over-length (concatenated) SMS into one string before sending it to your webserver.
            Information for each individual part are collected here
          items:
            $ref: '#/components/schemas/SMSContent'
      example:
        origin:
          mcc: "49"
          mnc: "176"
          ttId: "25"
        totalPrice: 0.1
        size: 1
        missingParts: false
        parts:
          - messageId: 48514285-4e78-4eef-b0c6-4ce68d40c1c3
            sentDate: '2019-03-13T13:15:22Z'
            price: 0
            currency: EUR
            priceEffective: '2019-03-13T13:15:22Z'
            sequenceNumber: 1
    SMSOrigin:
      type: object
      description: Origin Information of the message
      properties:
        mcc:
          type: string
          description: A representative MCC (Mobile Network Code) of the originating network.
          example: "49"
        mnc:
          type: string
          description: A representative MNC (Mobile Network Code) of the originating network.
          example: "176"
        ttId:
          type: string
          description: The respective tyntec ID of the originating network.
          example: "25"
    SMSContent:
      type: object
      description: SMS channel specific information
      properties:
        messageId:
          type: string
          description: The unique identifier provided by tyntec for each message part.
          example: 48514285-4e78-4eef-b0c6-4ce68d40c1c3
        sentDate:
          type: string
          description: |
            The time stamp when the SMS has been received by the sending MSC (if available).

            or

            The time stamp when the respective message was received by tyntec.
          format: date-time
        price:
          type: number
          description: |
            The price per message from the respective network.

            Negative prices represent payout in favor of tyntec’s customer.
          example: 0.1
        currency:
          type: string
          description: The currency in which the pricing is given; corresponding to the currency of the invoice.
          example: EUR
        priceEffective:
          type: string
          description: The date when the “price” became effective.
          format: date-time
        sequenceNumber:
          type: number
          description: |
            In case an over-length message is received tyntec recomposes the full message text before forwarding.
            The “sequenceNumber” indicates the order of the message part.
          minimum: 1
          maximum: 255
          example: 1
    Whatsapp:
      type: object
      description: specifics of the whatsapp channel
      properties:
        senderName:
          type: string
          description: Name of the sender, set in his or her profile
          example: Peter
      example:
        senderName: Peter
      additionalProperties: true
    MessageRequestContext:
      type: object
      description: Contextual information for the message request
      properties:
        userContext:
          type: string
          maxLength: 255
          description: |
            Contextual information that is transfered back on delivery notifications.
          example:
            my-message-reference
    MessageRequestOverrides:
      type: object
      description: Overrides of defaults for this message
      properties:
        notificationCallbackUrl:
          type: string
          pattern: ^https:\/\/?[\w.-]+(?:\.[\w\.-]+)+[\w\-\._~:/?#[\]@!\$&'\(\)\*\+,;=.]+$
          description: |
            When present this url is used for sending the delivery notifications to your webhook.
            Can be used for debugging use cases or individual routings.
          example:
            https://en4u5fpprib5i.x.pipedream.net
    WhatsAppGroupCreationRequest:
      type: object
      description: Required information when creating a new group
      required:
        - subject
      properties:
        subject:
          type: string
          maxLength: 35
          description: Group subject, used as display name
          example:
            This is a test group
    WhatsAppGroupCreationResponse:
      type: object
      description: Response after a group was successfully created
      properties:
        groupId:
          type: string
          readOnly: true
          description: |
            The group id of the created group. This id is required on subsequent interactions with the group such as

             - changes of the profile
             - invite link management
             - sending a message to the group
          example:
            4923147790717-1564131378
        creationTime:
          type: integer
          readOnly: true
          description: When was the group created. Time is given in seconds since 01.01.1970
          example:
            1564131378
    WhatsAppGroups:
      type: array
      items:
        $ref: '#/components/schemas/WhatsAppGroup'
    WhatsAppGroup:
      type: object
      description: Basic information about a group
      properties:
        groupId:
          type: string
          readOnly: true
          description: |
            The group id of a group. This id is required on subsequent interactions with the group such as

             - changes of the profile
             - invite link management
             - sending a message to the group
          example:
            4923147790717-1564131378
        creationTime:
          type: integer
          readOnly: true
          description: When was the group created. Time is given in seconds since 01.01.1970
          example:
            1564131378
    WhatsAppGroupDetails:
      type: object
      description: Information about a dedicated WhatsApp group
      properties:
        admins:
          type: array
          readOnly: true
          description: |
            List of admin whatsapp account id
          items:
            type: string
          example:
            - 4923147790717
        creationTime:
          type: integer
          readOnly: true
          description: When was the group created. Time is given in seconds since 01.01.1970
          example:
            1564131378
        creator:
          type: string
          readOnly: true
          description: Which account created the group. Is always your WhatsApp account assigned to the phone number used
          example:
            4923147790717
        participants:
          type: array
          readOnly: true
          description: List of participants in the group
          items:
            type: string
          example:
            - 4923147790717
            - 4923147790718
        subject:
          type: string
          readOnly: true
          description: Group subject, used as display name
          example:
            This is a test group
    WhatsAppGroupParticipants:
      type: object
      description: Participants of a whatsapp group
      properties:
        participants:
          type: array
          description: List of participants in the group
          items:
            type: string
          example:
            - 4923147790717
            - 4923147790718
    WhatsAppGroupProfile:
      type: object
      description: Profile of the WhatsApp group
      required:
        - subject
      properties:
        subject:
          type: string
          maxLength: 35
          description: Group subject, used as display name
          example:
            This is a test group
    WhatsAppGroupInviteLink:
      type: object
      description: |
        Invite link for the group.

        Needs to be send to all participants of the group either by template or normal text message
      required:
        - link
      properties:
        link:
          type: string
          readOnly: true
          description: The invite link as URL
          example:
            https://chat.whatsapp.com/EVZpTCb8xmB1KSoZlyDgU1
    WhatsAppGroupEvent:
      type: object
      description: |
        This events are send out for WhatsApp groups your account is member of.

        The details of a certain event are stored in dedicated properties, please refer to the documentation below which
        eventType will fill which property.
      required:
        - event
        - groupId
        - eventType
      properties:
        event:
          type: string
          description: Determines which kind of event is sent.
          enum:
            - WhatsAppGroupEvent::userJoined
            - WhatsAppGroupEvent::userLeft
            - WhatsAppGroupEvent::subjectChanged
            - WhatsAppGroupEvent::descriptionChanged
            - WhatsAppGroupEvent::userPromoted
            - WhatsAppGroupEvent::userDemoted
            - WhatsAppGroupEvent::iconChanged
            - WhatsAppGroupEvent::iconDeleted
        channel:
          type: string
          description: Channel which triggered the event. Is always _whatsapp_
          example: whatsapp
          enum:
            - whatsapp
        timestamp:
          type: string
          format: 'date-time'
          description: Point in time when the event happend
          example:
            2019-06-26T11:41:00
        from:
          type: string
          description: Who triggered this event. Usually the phonenumber or whatsapp account id
          example:
            491672634678
        operator:
          type: string
          description: Phone number or whatsapp account id of the initiating user. May not be the same as _from_.
        groupId:
          type: string
          description: originating group id
        subject:
          type: string
          description: The changed subject of the group. Will only be present on _subjectChanged_
          example:
            Test Group
        description:
          type: string
          description: The changed description of the group. Will only be present on _descriptionChanged_
          example:
            This is an example description
        users:
          type: array
          description: |
            Accounts left or joined the group. Will only be present on

            - _userJoined_
            - _userLeft_
            - _userPromoted_
            - _userDemoted_
          items:
            type: string
          example:
            - 491672634671
            - 491672634672
      example:
        event: WhatsAppGroupEvent::userJoined
        channel: whatsapp
        timestamp: 2019-06-26T11:41:00
        from: 491672634678
        operator: 491672634652
        groupId: 4923147790717-1564131378
        users:
          - 491672634672
          - 491672634673
    WhatsAppProfile:
      type: object
      description: |
        The current profile of a WhatsApp number.
      properties:
        address:
          type: string
          maxLength: 256
          description: Address of the business
          example: Hofmannstrasse 25 - 27, 81379 Munich, Germany
        description:
          type: string
          maxLength: 256
          description: Brief introduction of the business
          example: tyntec WhatsApp Business API Demo
        email:
          type: string
          maxLength: 128
          description: Contact mail address
          example: support@tyntec.com
        websites:
          type: array
          maxLength: 2
          items:
            type: string
            pattern: ^https:\/\/?[\w.-]+(?:\.[\w\.-]+)+[\w\-\._~:/?#[\]@!\$&'\(\)\*\+,;=.]+$
            maxLength: 256
          description: Websites of the business
          example:
            - https://www.tyntec.com
            - https://api.tyntec.com/reference
        vertical:
          type: string
          enum:
            - Automotive
            - Beauty, Spa and Salon
            - Clothing and Apparel
            - Education
            - Entertainment
            - Event Planning and Service
            - Finance and Banking
            - Food and Grocery
            - Public Service
            - Hotel and Lodging
            - Medical and Health
            - Non-profit
            - Professional Services
            - Shopping and Retail
            - Travel and Transportation
            - Restaurant
            - Other
          description: Industry of the business
          example: Professional Services
        about:
          type: string
          maxLength: 139
          description: Text to display in your profile's About section
          example: Hey there! I am using WhatsApp.
      example:
        address: Hofmannstrasse 25 - 27, 81379 Munich, Germany
        description: tyntec WhatsApp Business API Demo
        email: support@tyntec.com
        websites:
          - https://www.tyntec.com
          - https://api.tyntec.com/reference
        vertical: Professional Services
        about: Hey there! I am using WhatsApp.
    WhatsAppMessageStatusUpdate:
      type: object
      description: Change of the message status of a previously send WhatsApp message
      properties:
        status:
          type: string
          enum:
            - read
    DefaultApplicationUpdate:
      type: object
      description: Update of the default application
      properties:
        webhooks:
          type: array
          items:
            $ref: '#/components/schemas/Webhook'
      example:
        webhooks:
          - events:
              - MoMessage
            callbackUrl: https://some-call-back.service.com
          - events:
              - MessageStatus::deleted
              - MessageStatus::accepted
            callbackUrl: https://some-other-call-back.service.com
    ApplicationList:
      type: array
      description: List of configured applications. Never be empty
      items:
        anyOf:
          - $ref: '#/components/schemas/DefaultApplicationResponse'
      minItems: 1
    DefaultApplicationResponse:
      type: object
      description: The default application
      properties:
        id:
          type: string
          enum:
            - default
        name:
          type: string
          enum:
            - Default Application
        webhooks:
          type: array
          items:
            $ref: '#/components/schemas/Webhook'
          minLength: 1
      example:
        id: default
        name: Default Application
        webhooks:
          - events:
              - MoMessage
            callbackUrl: https://some-call-back.service.com
          - events:
              - MessageStatus::deleted
              - MessageStatus::accepted
            callbackUrl: https://some-other-call-back.service.com
    Webhook:
      description: >
        A webhook associates one or more event types to a callback URL. In other words,
        it specifies where the events of those types should be forwarded to.
      type: object
      properties:
        events:
          description: >
            The types of events that this webhook should be triggered. Note that, although mandatory,
            the array can be empty. In such a case, the webhook will be triggerred on every
            event, if no other webhook specific to the type of the event exists.
          type: array
          items:
            $ref: "#/components/schemas/EventTypes"
          minLength: 0
        callbackUrl:
          type: string
          pattern: "^https://.*"
          description: The URL to forward the event to. Callback URLs should start with 'https://'.
          example:
            https://some-call-back.service.com
      example:
        events:
          - MessageStatus::deleted
          - MessageStatus::accepted
        callbackUrl: https://some-other-call-back.service.com
    WhatsAppProfileLogoLink:
      type: object
      description: Link to the profile logo
      required:
        - link
      properties:
        link:
          type: string
          description: Link to the profile logo          
          example: https://pps.whatsapp.net/v/123123
    WhatsAppAccounts:
      type: array
      description: List of WhatsApp Business Accounts. Might be empty
      items:
        $ref: '#/components/schemas/WhatsAppAccount'
    WhatsAppAccount:
      type: object
      description: A WhatsApp Business Account
      required:
        - whatsAppAccountId
      properties:
        whatsAppAccountId:
          type: string
          description: Id of the WhatsApp Business Account
          format: uuid
          example:
            5637b8a7-51e1-47be-ad0b-b242453dcc1b
        whatsAppAccountName:
          type: string
          description: Name of the WhatsApp Business Account
          example:
            Swagger Sample Account
        businessName:
          type: string
          description: Name of the business owning the facebook business manager
          example:
            Swagger Sample business
        templateNamespace:
          description: |
            Template namespace assigned to the WhatsApp Business Account.

            This is used internally and here stated for completeness
          type: string
          example:
            c9468969-a3a3-4c17-95f7-1e8b2902ed74
        facebookBusinessManagerId:
          type: string
          example: 1791147717848878
        accountStatus:
          $ref: '#/components/schemas/WhatsAppAccountStatus'
        managedBy:
          description: Account that can manage (edit, ..) an entity
          allOf:
            - $ref: '#/components/schemas/CPaaSAccount'
      example:
        whatsAppAccountId: 5637b8a7-51e1-47be-ad0b-b242453dcc1b
        whatsAppAccountName: Swagger Sample Account
        businessName: Swagger Sample business
        templateNamespace: c9468969-a3a3-4c17-95f7-1e8b2902ed74
        facebookBusinessManagerId: 1791147717848878
        accountStatus:
          messageOnBehalf: PENDING
        managedBy:
          accountName: tynteccpaas
    WhatsAppPhoneNumbers:
      type: array
      description: List of phone numbers at WhatsApp. Might be empty
      items:
        $ref: '#/components/schemas/WhatsAppPhoneNumber'
    WhatsAppPhoneNumber:
      type: object
      description: A phone number assigned to a WhatsApp Business Account
      properties:
        phoneNumber:
          type: string
          description: The phone number
          example:
            49123456789
        displayPhoneNumber:
          type: string
          description: The phone number as it is displayed on the app
          example:
            +49 123 456789
        verifiedName:
          type: string
          description: |
            The name shown aside to the number.

            This name will be shown immediately for Official Business Accounts
          example:
            Swagger Sample
        qualityRating:
          type: string
          description: |
            Whats the current quality rating of phone number

            A RED rating will lead to status flagged if the number still receives
            negative feedback from the users.
          enum:
            - GREEN
            - RED
            - YELLOW
          example:
            GREEN
        status:
          type: string
          description: Status of the number
          enum:
            - CONNECTED
            - PENDING
            - FLAGGED
            - RESTRICTED
            - OFFLINE
          example:
            CONNECTED
        whatsAppAccountId:
          type: string
          description: Id of the WhatsApp Business Account the number belongs to.
          format: uuid
          example: 5637b8a7-51e1-47be-ad0b-b242453dcc1b
        managedBy:
          description: Account that can manage (edit, ..) an entity
          allOf:
            - $ref: '#/components/schemas/CPaaSAccount'
        messagingVia:
          description: Account that must be used for messaging
          allOf:
            - $ref: '#/components/schemas/CPaaSAccount'
      example:
        phoneNumber: 4912345678
        displayPhonenumber: +49 123 45678
        verifiedName: Swagger Sample
        qualityRating: YELLOW
        status: FLAGGED
        whatsAppAccountId: 5637b8a7-51e1-47be-ad0b-b242453dcc1b
        managedBy:
          accountName: tyntecscpaas
        messagingVia:
          accountName: messagingcpaas
    CPaaSAccount:
      type: object
      description: The CPaaS account behind the API key
      properties:
        accountName:
          type: string
          description: Name of the CPaaSAccount
      example:
        name: someaccount
    WhatsAppTemplateRequest:
      type: object
      description: Definition of additional WhatsApp Template
      properties:
        name:
          type: string
          description: Name of the template
        category:
          $ref: '#/components/schemas/TemplateCategory'
        localizations:
          type: array
          description: Localizations of the template
          items:
            $ref: '#/components/schemas/LocalizationRequest'
          minItems: 1
    LocalizationRequest:
      type: object
      description: Request of a localization of a template
      properties:
        language:
          $ref: '#/components/schemas/LanguageCode'
        components:
          description: Components the template is defined of
          oneOf:
            - $ref: '#/components/schemas/NotificationTemplateRequest'
            - $ref: '#/components/schemas/RichMediaTemplateRequest'
    NotificationTemplateRequest:
      type: array
      items:
        type: object
        description: Standard template request without rich media parts
        required:
          - type
          - text
        properties:
          type:
            type: string
            enum:
              - BODY
            default: BODY
          text:
            type: string
            description: |
              Template text.
            maxLength: 1024
            minLength: 1
      maxLength: 1
      minLength: 1
    RichMediaTemplateRequest:
      type: array
      description: Rich media template definition. Must contain at least body component
      items:
        anyOf:
          - $ref: '#/components/schemas/WhatsAppTemplateHeaderComponentRequest'
          - $ref: '#/components/schemas/WhatsAppTemplateBodyComponentRequest'
          - $ref: '#/components/schemas/WhatsAppTemplateFooterComponentRequest'
      minItems: 1
    WhatsAppTemplateHeaderComponentRequest:
      type: object
      description: Header component of a template
      oneOf:
        - $ref: '#/components/schemas/WhatsAppTemplateTextHeaderComponentRequest'
        - $ref: '#/components/schemas/WhatsAppTemplateMediaHeaderComponentRequest'
    WhatsAppTemplateTextHeaderComponentRequest:
      type: object
      description: Header component of a template
      required:
        - type
        - format
        - text
      properties:
        type:
          type: string
          description: Determines the type of the component
          enum:
            - HEADER
          example: HEADER
        format:
          type: string
          description: Which kind of header
          enum:
            - TEXT
          example:
            TEXT
        text:
          type: string
          description: Text that should be displayed as header. Can contain 1 variable
          maxLength: 60
          example: Hi {{1}}
    WhatsAppTemplateMediaHeaderComponentRequest:
      type: object
      description: Header component of a template
      required:
        - type
        - format
      properties:
        type:
          type: string
          description: Determines the type of the component
          enum:
            - HEADER
        format:
          type: string
          description: Which kind of header
          enum:
            - IMAGE
            - DOCUMENT
            - VIDEO
          example:
            IMAGE
    WhatsAppTemplateBodyComponentRequest:
      type: object
      description: Body component of a template
      required:
        - type
        - text
      properties:
        type:
          type: string
          description: Determines the type of the component
          enum:
            - BODY
        text:
          type: string
          description: Specification of the body text
          maxLength: 160
          minLength: 1
          example:
            Hi {{1}}! Enjoy the spec!
    WhatsAppTemplateFooterComponentRequest:
      type: object
      description: Footer component of a template
      required:
        - type
        - text
      properties:
        type:
          type: string
          description: Determines the type of the component
          enum:
            - FOOTER
        text:
          type: string
          description: Specification of the footer text
          maxLength: 60
          minLength: 1
          example:
            The specification team
    WhatsAppTemplates:
      type: array
      description: List of WhatsApp templates
      items:
        $ref: '#/components/schemas/WhatsAppTemplateResponse'
    WhatsAppTemplateResponse:
      type: object
      description: WhatsApp template
      properties:
        whatsAppAccountId:
          type: string
          description: Id of the WhatsApp Business Account the template belongs to.
          format: uuid
          example: 5637b8a7-51e1-47be-ad0b-b242453dcc1b
        templateName:
          type: string
          description: Name of the template
          example:
            swagger_test
        templateId:
          type: string
          description: Id of the template
          example:
            swagger_test
        category:
          $ref: '#/components/schemas/TemplateCategory'
        localízations:
          type: array
          description: List of localizations of this templates
          items:
            $ref: '#/components/schemas/LocalizationResponse'
          example:
            status: REJECTED
            rejectionReason: For this example
            language: en
            components:
              - type: BODY
                text: Hello {{1}}! How is going?
              - type: FOOTER
                text: Your specification team!
      example:
        whatsAppAccountId: 5637b8a7-51e1-47be-ad0b-b242453dcc1b
        name: swagger_test
        category: TICKET_UPDATE
        localizations:
          - status: REJECTED
            rejectionReason: For this example
            language: en
            components:
              - type: BODY
                text: Hello {{1}}! How is going?
              - type: FOOTER
                text: Your specification team!
    LocalizationResponse:
      type: object
      description: Localization of a template
      required:
        - status
        - language
        - components
        - createdAt
        - lastUpdated
      properties:
        status:
          type: string
          description: |
            Status the localization.
          enum:
            - REQUESTED
            - SUBMIT_FAILED
            - PENDING
            - APPROVED
            - REJECTED
            - DELETE_PENDING
            - DELETED
          example:
            DELETED
        rejectionReason:
          type: string
          description: Descriptive text in case of status REJECTED
          example:
            not yet
        language:
          $ref: '#/components/schemas/LanguageCode'
        components:
          type: array
          description: Set of components defining a template
          items:
            anyOf:
              - $ref: '#/components/schemas/WhatsAppTemplateHeaderComponentResponse'
              - $ref: '#/components/schemas/WhatsAppTemplateBodyComponentResponse'
              - $ref: '#/components/schemas/WhatsAppTemplateFooterComponentResponse'
          example:
            - type: BODY
              text: Hello {{1}}! How is going?
        createdAt:
          type: string
          description: At which point in time the template was created
          format: date-time
          example: 2020-02-15T23:28:34.442Z
        lastUpdated:
          type: string
          description: At which point in time the last update happen
          format: date-time
          example: 2020-02-15T25:28:34.442Z
        expiresAt:
          type: string
          description: |
            When does the localization expire.
            Only present, when a template is deleted
          format: date-time
          example: 2020-03-15T23:28:34.442Z
    WhatsAppTemplateHeaderComponentResponse:
      type: object
      description: Header component of a template
      required:
        - type
        - format
      properties:
        type:
          type: string
          description: Components type
          enum:
            - HEADER
        format:
          type: string
          description: Which kind of header
          enum:
            - IMAGE
            - TEXT
            - DOCUMENT
            - VIDEO
          example:
            IMAGE
        text:
          type: string
          description: Text based part of format "TEXT
          example: Hi {{1}}!
    WhatsAppTemplateBodyComponentResponse:
      type: object
      description: Body component of a template
      required:
        - type
        - text
      properties:
        type:
          type: string
          description: Components type
          enum:
            - BODY
        text:
          type: string
          description: Specification of the body text
          example:
            Hi {{1}}! Enjoy the spec!
    WhatsAppTemplateFooterComponentResponse:
      type: object
      description: Footer component of a template
      required:
        - type
        - text
      properties:
        type:
          type: string
          description: Components type
          enum:
            - FOOTER
        text:
          type: string
          description: Specification of the footer text
          example:
            The specification team
    TemplateCategory:
      type: string
      description: Category of the template
      enum:
        - ACCOUNT_UPDATE
        - ALERT_UPDATE
        - APPOINTMENT_UPDATE
        - AUTO_REPLY
        - ISSUE_RESOLUTION
        - PAYMENT_UPDATE
        - PERSONAL_FINANCE_UPDATE
        - RESERVATION_UPDATE
        - SHIPPING_UPDATE
        - TICKET_UPDATE
        - TRANSPORTATION_UPDATE
    LanguageCode:
      type: string
      description: Supported language codes, according to [Supported Languages](https://developers.facebook.com/docs/whatsapp/business-management-api/message-templates)
      enum:
        - af
        - ar
        - az
        - bg
        - bn
        - ca
        - cs
        - da
        - de
        - el
        - en
        - en_GB
        - en_US
        - es
        - es_AR
        - es_ES
        - es_MX
        - et
        - fa
        - fi
        - fil
        - fr
        - ga
        - gu
        - he
        - hi
        - hr
        - hu
        - id
        - it
        - ja
        - kk
        - kn
        - ko
        - lo
        - lt
        - lv
        - mk
        - mr
        - ms
        - nb
        - nl
        - pa
        - pl
        - pt_BR
        - pt_PT
        - ro
        - ru
        - sk
        - sl
        - sq
        - sr
        - sv
        - sw
        - ta
        - te
        - th
        - tr
        - uk
        - ur
        - uz
        - vi
        - zh_CN
        - zh_HK
        - zh_TW
      example:
        en
    WhatsAppAccountStatus:
      type: object
      description: Status information for the WhatsApp account
      properties:
        messageOnBehalf:
          type: string
          description: Indicates the status of message on behalf request
          enum:
            - PENDING
            - APPROVED
            - DENIED
      example:
        messageOnBehalf: APPROVED
    PaginationLinkRelation:
      type: string
      description: |
        What kind of relation is this link.

        The relations are defined as following:

        - `first` : First page of the resource list pagination
        - `previous` : Predecessor page of the current page of the resource list pagination
        - `current` : Actual page of the resource list pagination
        - `next` : Successor page of the current of page of the resource list pagination
        - `last` : Last page of the resource list pagination

      enum:
        - first
        - previous
        - current
        - next
        - last
